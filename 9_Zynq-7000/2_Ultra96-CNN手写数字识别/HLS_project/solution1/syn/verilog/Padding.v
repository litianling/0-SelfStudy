// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Padding (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_matrix_address0,
        input_matrix_ce0,
        input_matrix_q0,
        input_matrix_address1,
        input_matrix_ce1,
        input_matrix_q1,
        output_matrix_address0,
        output_matrix_ce0,
        output_matrix_we0,
        output_matrix_d0,
        output_matrix_address1,
        output_matrix_ce1,
        output_matrix_we1,
        output_matrix_d1
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] input_matrix_address0;
output   input_matrix_ce0;
input  [31:0] input_matrix_q0;
output  [7:0] input_matrix_address1;
output   input_matrix_ce1;
input  [31:0] input_matrix_q1;
output  [7:0] output_matrix_address0;
output   output_matrix_ce0;
output   output_matrix_we0;
output  [31:0] output_matrix_d0;
output  [7:0] output_matrix_address1;
output   output_matrix_ce1;
output   output_matrix_we1;
output  [31:0] output_matrix_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] input_matrix_address0;
reg input_matrix_ce0;
reg[7:0] input_matrix_address1;
reg input_matrix_ce1;
reg[7:0] output_matrix_address0;
reg output_matrix_ce0;
reg output_matrix_we0;
reg[31:0] output_matrix_d0;
reg[7:0] output_matrix_address1;
reg output_matrix_ce1;
reg output_matrix_we1;
reg[31:0] output_matrix_d1;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln113_fu_523_p2;
reg   [0:0] icmp_ln113_reg_923;
wire    ap_CS_fsm_state2;
wire   [4:0] i_fu_529_p2;
reg   [4:0] i_reg_927;
wire   [7:0] shl_ln_fu_539_p3;
reg   [7:0] shl_ln_reg_932;
wire   [8:0] sub_ln116_fu_569_p2;
reg   [8:0] sub_ln116_reg_950;
wire   [0:0] and_ln115_fu_607_p2;
reg   [0:0] and_ln115_reg_964;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg   [4:0] i_0_reg_452;
wire    ap_CS_fsm_state9;
wire   [63:0] zext_ln118_fu_575_p1;
wire   [63:0] zext_ln118_1_fu_586_p1;
wire   [63:0] zext_ln116_fu_623_p1;
wire   [63:0] zext_ln116_2_fu_638_p1;
wire   [63:0] zext_ln118_2_fu_643_p1;
wire   [63:0] zext_ln116_1_fu_648_p1;
wire   [63:0] zext_ln118_3_fu_653_p1;
wire   [63:0] zext_ln116_3_fu_658_p1;
wire   [63:0] zext_ln116_4_fu_672_p1;
wire   [63:0] zext_ln116_6_fu_686_p1;
wire   [63:0] zext_ln118_4_fu_691_p1;
wire   [63:0] zext_ln116_5_fu_696_p1;
wire   [63:0] zext_ln118_5_fu_701_p1;
wire   [63:0] zext_ln116_7_fu_706_p1;
wire   [63:0] zext_ln116_8_fu_720_p1;
wire   [63:0] zext_ln116_10_fu_734_p1;
wire   [63:0] zext_ln118_6_fu_739_p1;
wire   [63:0] zext_ln116_9_fu_744_p1;
wire   [63:0] zext_ln118_7_fu_749_p1;
wire   [63:0] zext_ln116_11_fu_754_p1;
wire   [63:0] zext_ln116_12_fu_768_p1;
wire   [63:0] zext_ln116_14_fu_782_p1;
wire   [63:0] zext_ln118_8_fu_787_p1;
wire   [63:0] zext_ln116_13_fu_792_p1;
wire   [63:0] zext_ln118_9_fu_797_p1;
wire   [63:0] zext_ln116_15_fu_802_p1;
wire   [63:0] zext_ln116_16_fu_816_p1;
wire   [63:0] zext_ln116_18_fu_830_p1;
wire   [63:0] zext_ln118_10_fu_835_p1;
wire   [63:0] zext_ln116_17_fu_840_p1;
wire   [63:0] zext_ln118_11_fu_845_p1;
wire   [63:0] zext_ln116_19_fu_850_p1;
wire   [63:0] zext_ln116_20_fu_864_p1;
wire   [63:0] zext_ln116_22_fu_878_p1;
wire   [63:0] zext_ln118_12_fu_883_p1;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln116_21_fu_888_p1;
wire   [63:0] zext_ln118_13_fu_893_p1;
wire   [63:0] zext_ln116_23_fu_898_p1;
wire   [63:0] zext_ln118_14_fu_908_p1;
wire   [63:0] zext_ln118_15_fu_918_p1;
wire   [3:0] trunc_ln118_fu_535_p1;
wire   [5:0] shl_ln5_fu_557_p3;
wire   [8:0] zext_ln118_16_fu_547_p1;
wire   [8:0] zext_ln116_24_fu_565_p1;
wire   [7:0] or_ln118_fu_580_p2;
wire   [3:0] tmp_1_fu_591_p4;
wire   [0:0] icmp_ln115_1_fu_601_p2;
wire   [0:0] icmp_ln115_fu_551_p2;
wire   [8:0] add_ln116_fu_613_p2;
wire  signed [31:0] sext_ln116_fu_619_p1;
wire   [8:0] add_ln116_1_fu_628_p2;
wire  signed [31:0] sext_ln116_1_fu_634_p1;
wire   [7:0] grp_fu_463_p2;
wire   [7:0] grp_fu_468_p2;
wire   [8:0] add_ln116_2_fu_663_p2;
wire  signed [31:0] sext_ln116_2_fu_668_p1;
wire   [8:0] add_ln116_3_fu_677_p2;
wire  signed [31:0] sext_ln116_3_fu_682_p1;
wire   [7:0] grp_fu_473_p2;
wire   [7:0] grp_fu_478_p2;
wire   [8:0] add_ln116_4_fu_711_p2;
wire  signed [31:0] sext_ln116_4_fu_716_p1;
wire   [8:0] add_ln116_5_fu_725_p2;
wire  signed [31:0] sext_ln116_5_fu_730_p1;
wire   [7:0] grp_fu_483_p2;
wire   [7:0] grp_fu_488_p2;
wire   [8:0] add_ln116_6_fu_759_p2;
wire  signed [31:0] sext_ln116_6_fu_764_p1;
wire   [8:0] add_ln116_7_fu_773_p2;
wire  signed [31:0] sext_ln116_7_fu_778_p1;
wire   [7:0] grp_fu_493_p2;
wire   [7:0] grp_fu_498_p2;
wire   [8:0] add_ln116_8_fu_807_p2;
wire  signed [31:0] sext_ln116_8_fu_812_p1;
wire   [8:0] add_ln116_9_fu_821_p2;
wire  signed [31:0] sext_ln116_9_fu_826_p1;
wire   [7:0] grp_fu_503_p2;
wire   [7:0] grp_fu_508_p2;
wire   [8:0] add_ln116_10_fu_855_p2;
wire  signed [31:0] sext_ln116_10_fu_860_p1;
wire   [8:0] add_ln116_11_fu_869_p2;
wire  signed [31:0] sext_ln116_11_fu_874_p1;
wire   [7:0] grp_fu_513_p2;
wire   [7:0] grp_fu_518_p2;
wire   [7:0] or_ln118_13_fu_903_p2;
wire   [7:0] or_ln118_14_fu_913_p2;
wire    ap_CS_fsm_state10;
reg   [9:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i_0_reg_452 <= i_reg_927;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_452 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        and_ln115_reg_964 <= and_ln115_fu_607_p2;
        shl_ln_reg_932[7 : 4] <= shl_ln_fu_539_p3[7 : 4];
        sub_ln116_reg_950[8 : 2] <= sub_ln116_fu_569_p2[8 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_927 <= i_fu_529_p2;
        icmp_ln113_reg_923 <= icmp_ln113_fu_523_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        input_matrix_address0 = zext_ln116_20_fu_864_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_matrix_address0 = zext_ln116_16_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_matrix_address0 = zext_ln116_12_fu_768_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_matrix_address0 = zext_ln116_8_fu_720_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_matrix_address0 = zext_ln116_4_fu_672_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_matrix_address0 = zext_ln116_fu_623_p1;
    end else begin
        input_matrix_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        input_matrix_address1 = zext_ln116_22_fu_878_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        input_matrix_address1 = zext_ln116_18_fu_830_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        input_matrix_address1 = zext_ln116_14_fu_782_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_matrix_address1 = zext_ln116_10_fu_734_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        input_matrix_address1 = zext_ln116_6_fu_686_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        input_matrix_address1 = zext_ln116_2_fu_638_p1;
    end else begin
        input_matrix_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        input_matrix_ce0 = 1'b1;
    end else begin
        input_matrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        input_matrix_ce1 = 1'b1;
    end else begin
        input_matrix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_matrix_address0 = zext_ln118_14_fu_908_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_matrix_address0 = zext_ln116_21_fu_888_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_matrix_address0 = zext_ln118_12_fu_883_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        output_matrix_address0 = zext_ln116_17_fu_840_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        output_matrix_address0 = zext_ln118_10_fu_835_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_matrix_address0 = zext_ln116_13_fu_792_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_matrix_address0 = zext_ln118_8_fu_787_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        output_matrix_address0 = zext_ln116_9_fu_744_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        output_matrix_address0 = zext_ln118_6_fu_739_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_matrix_address0 = zext_ln116_5_fu_696_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_matrix_address0 = zext_ln118_4_fu_691_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        output_matrix_address0 = zext_ln116_1_fu_648_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        output_matrix_address0 = zext_ln118_2_fu_643_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_matrix_address0 = zext_ln118_fu_575_p1;
    end else begin
        output_matrix_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_matrix_address1 = zext_ln118_15_fu_918_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_matrix_address1 = zext_ln116_23_fu_898_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        output_matrix_address1 = zext_ln118_13_fu_893_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        output_matrix_address1 = zext_ln116_19_fu_850_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        output_matrix_address1 = zext_ln118_11_fu_845_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_matrix_address1 = zext_ln116_15_fu_802_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_matrix_address1 = zext_ln118_9_fu_797_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        output_matrix_address1 = zext_ln116_11_fu_754_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        output_matrix_address1 = zext_ln118_7_fu_749_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_matrix_address1 = zext_ln116_7_fu_706_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        output_matrix_address1 = zext_ln118_5_fu_701_p1;
    end else if (((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        output_matrix_address1 = zext_ln116_3_fu_658_p1;
    end else if (((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        output_matrix_address1 = zext_ln118_3_fu_653_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_matrix_address1 = zext_ln118_1_fu_586_p1;
    end else begin
        output_matrix_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        output_matrix_ce0 = 1'b1;
    end else begin
        output_matrix_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        output_matrix_ce1 = 1'b1;
    end else begin
        output_matrix_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        output_matrix_d0 = input_matrix_q0;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        output_matrix_d0 = 32'd0;
    end else begin
        output_matrix_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        output_matrix_d1 = input_matrix_q1;
    end else if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state9) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        output_matrix_d1 = 32'd0;
    end else begin
        output_matrix_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln113_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        output_matrix_we0 = 1'b1;
    end else begin
        output_matrix_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state4)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state7)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state6)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((1'd1 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'd0 == and_ln115_reg_964) & (icmp_ln113_reg_923 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((icmp_ln113_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        output_matrix_we1 = 1'b1;
    end else begin
        output_matrix_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln113_fu_523_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln116_10_fu_855_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd498));

assign add_ln116_11_fu_869_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd499));

assign add_ln116_1_fu_628_p2 = ($signed(sub_ln116_fu_569_p2) + $signed(9'd489));

assign add_ln116_2_fu_663_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd490));

assign add_ln116_3_fu_677_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd491));

assign add_ln116_4_fu_711_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd492));

assign add_ln116_5_fu_725_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd493));

assign add_ln116_6_fu_759_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd494));

assign add_ln116_7_fu_773_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd495));

assign add_ln116_8_fu_807_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd496));

assign add_ln116_9_fu_821_p2 = ($signed(sub_ln116_reg_950) + $signed(9'd497));

assign add_ln116_fu_613_p2 = ($signed(sub_ln116_fu_569_p2) + $signed(9'd488));

assign and_ln115_fu_607_p2 = (icmp_ln115_fu_551_p2 & icmp_ln115_1_fu_601_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_463_p2 = (shl_ln_reg_932 | 8'd2);

assign grp_fu_468_p2 = (shl_ln_reg_932 | 8'd3);

assign grp_fu_473_p2 = (shl_ln_reg_932 | 8'd4);

assign grp_fu_478_p2 = (shl_ln_reg_932 | 8'd5);

assign grp_fu_483_p2 = (shl_ln_reg_932 | 8'd6);

assign grp_fu_488_p2 = (shl_ln_reg_932 | 8'd7);

assign grp_fu_493_p2 = (shl_ln_reg_932 | 8'd8);

assign grp_fu_498_p2 = (shl_ln_reg_932 | 8'd9);

assign grp_fu_503_p2 = (shl_ln_reg_932 | 8'd10);

assign grp_fu_508_p2 = (shl_ln_reg_932 | 8'd11);

assign grp_fu_513_p2 = (shl_ln_reg_932 | 8'd12);

assign grp_fu_518_p2 = (shl_ln_reg_932 | 8'd13);

assign i_fu_529_p2 = (i_0_reg_452 + 5'd1);

assign icmp_ln113_fu_523_p2 = ((i_0_reg_452 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln115_1_fu_601_p2 = ((tmp_1_fu_591_p4 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_551_p2 = ((i_0_reg_452 < 5'd14) ? 1'b1 : 1'b0);

assign or_ln118_13_fu_903_p2 = (shl_ln_reg_932 | 8'd14);

assign or_ln118_14_fu_913_p2 = (shl_ln_reg_932 | 8'd15);

assign or_ln118_fu_580_p2 = (shl_ln_fu_539_p3 | 8'd1);

assign sext_ln116_10_fu_860_p1 = $signed(add_ln116_10_fu_855_p2);

assign sext_ln116_11_fu_874_p1 = $signed(add_ln116_11_fu_869_p2);

assign sext_ln116_1_fu_634_p1 = $signed(add_ln116_1_fu_628_p2);

assign sext_ln116_2_fu_668_p1 = $signed(add_ln116_2_fu_663_p2);

assign sext_ln116_3_fu_682_p1 = $signed(add_ln116_3_fu_677_p2);

assign sext_ln116_4_fu_716_p1 = $signed(add_ln116_4_fu_711_p2);

assign sext_ln116_5_fu_730_p1 = $signed(add_ln116_5_fu_725_p2);

assign sext_ln116_6_fu_764_p1 = $signed(add_ln116_6_fu_759_p2);

assign sext_ln116_7_fu_778_p1 = $signed(add_ln116_7_fu_773_p2);

assign sext_ln116_8_fu_812_p1 = $signed(add_ln116_8_fu_807_p2);

assign sext_ln116_9_fu_826_p1 = $signed(add_ln116_9_fu_821_p2);

assign sext_ln116_fu_619_p1 = $signed(add_ln116_fu_613_p2);

assign shl_ln5_fu_557_p3 = {{trunc_ln118_fu_535_p1}, {2'd0}};

assign shl_ln_fu_539_p3 = {{trunc_ln118_fu_535_p1}, {4'd0}};

assign sub_ln116_fu_569_p2 = (zext_ln118_16_fu_547_p1 - zext_ln116_24_fu_565_p1);

assign tmp_1_fu_591_p4 = {{i_0_reg_452[4:1]}};

assign trunc_ln118_fu_535_p1 = i_0_reg_452[3:0];

assign zext_ln116_10_fu_734_p1 = $unsigned(sext_ln116_5_fu_730_p1);

assign zext_ln116_11_fu_754_p1 = grp_fu_488_p2;

assign zext_ln116_12_fu_768_p1 = $unsigned(sext_ln116_6_fu_764_p1);

assign zext_ln116_13_fu_792_p1 = grp_fu_493_p2;

assign zext_ln116_14_fu_782_p1 = $unsigned(sext_ln116_7_fu_778_p1);

assign zext_ln116_15_fu_802_p1 = grp_fu_498_p2;

assign zext_ln116_16_fu_816_p1 = $unsigned(sext_ln116_8_fu_812_p1);

assign zext_ln116_17_fu_840_p1 = grp_fu_503_p2;

assign zext_ln116_18_fu_830_p1 = $unsigned(sext_ln116_9_fu_826_p1);

assign zext_ln116_19_fu_850_p1 = grp_fu_508_p2;

assign zext_ln116_1_fu_648_p1 = grp_fu_463_p2;

assign zext_ln116_20_fu_864_p1 = $unsigned(sext_ln116_10_fu_860_p1);

assign zext_ln116_21_fu_888_p1 = grp_fu_513_p2;

assign zext_ln116_22_fu_878_p1 = $unsigned(sext_ln116_11_fu_874_p1);

assign zext_ln116_23_fu_898_p1 = grp_fu_518_p2;

assign zext_ln116_24_fu_565_p1 = shl_ln5_fu_557_p3;

assign zext_ln116_2_fu_638_p1 = $unsigned(sext_ln116_1_fu_634_p1);

assign zext_ln116_3_fu_658_p1 = grp_fu_468_p2;

assign zext_ln116_4_fu_672_p1 = $unsigned(sext_ln116_2_fu_668_p1);

assign zext_ln116_5_fu_696_p1 = grp_fu_473_p2;

assign zext_ln116_6_fu_686_p1 = $unsigned(sext_ln116_3_fu_682_p1);

assign zext_ln116_7_fu_706_p1 = grp_fu_478_p2;

assign zext_ln116_8_fu_720_p1 = $unsigned(sext_ln116_4_fu_716_p1);

assign zext_ln116_9_fu_744_p1 = grp_fu_483_p2;

assign zext_ln116_fu_623_p1 = $unsigned(sext_ln116_fu_619_p1);

assign zext_ln118_10_fu_835_p1 = grp_fu_503_p2;

assign zext_ln118_11_fu_845_p1 = grp_fu_508_p2;

assign zext_ln118_12_fu_883_p1 = grp_fu_513_p2;

assign zext_ln118_13_fu_893_p1 = grp_fu_518_p2;

assign zext_ln118_14_fu_908_p1 = or_ln118_13_fu_903_p2;

assign zext_ln118_15_fu_918_p1 = or_ln118_14_fu_913_p2;

assign zext_ln118_16_fu_547_p1 = shl_ln_fu_539_p3;

assign zext_ln118_1_fu_586_p1 = or_ln118_fu_580_p2;

assign zext_ln118_2_fu_643_p1 = grp_fu_463_p2;

assign zext_ln118_3_fu_653_p1 = grp_fu_468_p2;

assign zext_ln118_4_fu_691_p1 = grp_fu_473_p2;

assign zext_ln118_5_fu_701_p1 = grp_fu_478_p2;

assign zext_ln118_6_fu_739_p1 = grp_fu_483_p2;

assign zext_ln118_7_fu_749_p1 = grp_fu_488_p2;

assign zext_ln118_8_fu_787_p1 = grp_fu_493_p2;

assign zext_ln118_9_fu_797_p1 = grp_fu_498_p2;

assign zext_ln118_fu_575_p1 = shl_ln_fu_539_p3;

always @ (posedge ap_clk) begin
    shl_ln_reg_932[3:0] <= 4'b0000;
    sub_ln116_reg_950[1:0] <= 2'b00;
end

endmodule //Padding
