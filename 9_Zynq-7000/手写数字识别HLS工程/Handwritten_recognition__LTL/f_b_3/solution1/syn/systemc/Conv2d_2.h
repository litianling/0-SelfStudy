// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv2d_2_HH_
#define _Conv2d_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "forw_back_fadd_32bkb.h"
#include "forw_back_fmul_32cud.h"
#include "forw_back_mac_mulmb6.h"

namespace ap_rtl {

struct Conv2d_2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<4> > out_matrix_address0;
    sc_out< sc_logic > out_matrix_ce0;
    sc_out< sc_logic > out_matrix_we0;
    sc_out< sc_lv<32> > out_matrix_d0;
    sc_out< sc_lv<10> > conv_out_1_address0;
    sc_out< sc_logic > conv_out_1_ce0;
    sc_in< sc_lv<32> > conv_out_1_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Conv2d_2(sc_module_name name);
    SC_HAS_PROCESS(Conv2d_2);

    ~Conv2d_2();

    sc_trace_file* mVcdFile;

    forw_back_fadd_32bkb<1,4,32,32,32>* forw_back_fadd_32bkb_U70;
    forw_back_fmul_32cud<1,3,32,32,32>* forw_back_fmul_32cud_U71;
    forw_back_mac_mulmb6<1,1,4,6,2,8>* forw_back_mac_mulmb6_U72;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > indvar_flatten_reg_144;
    sc_signal< sc_lv<3> > col_0_reg_155;
    sc_signal< sc_lv<32> > empty_reg_164;
    sc_signal< sc_lv<3> > row_0_reg_176;
    sc_signal< sc_lv<1> > icmp_ln31_fu_217_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > add_ln31_fu_223_p2;
    sc_signal< sc_lv<4> > add_ln31_reg_509;
    sc_signal< sc_lv<3> > indvars_iv_mid2_fu_241_p3;
    sc_signal< sc_lv<3> > indvars_iv_mid2_reg_514;
    sc_signal< sc_lv<2> > row_mid2_fu_249_p3;
    sc_signal< sc_lv<2> > row_mid2_reg_520;
    sc_signal< sc_lv<2> > col_cast7_mid2_v_fu_257_p3;
    sc_signal< sc_lv<2> > col_cast7_mid2_v_reg_525;
    sc_signal< sc_lv<3> > col_cast7_mid2_fu_265_p1;
    sc_signal< sc_lv<4> > col_cast_mid2_fu_273_p1;
    sc_signal< sc_lv<4> > col_cast_mid2_reg_535;
    sc_signal< sc_lv<3> > row_cast4_fu_307_p1;
    sc_signal< sc_lv<3> > row_cast4_reg_540;
    sc_signal< sc_lv<8> > row_cast_fu_311_p1;
    sc_signal< sc_lv<8> > row_cast_reg_546;
    sc_signal< sc_lv<4> > out_matrix_addr_reg_551;
    sc_signal< sc_lv<1> > icmp_ln34_fu_360_p2;
    sc_signal< sc_lv<1> > icmp_ln34_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln34_reg_556_pp0_iter1_reg;
    sc_signal< sc_lv<4> > add_ln34_fu_366_p2;
    sc_signal< sc_lv<4> > add_ln34_reg_560;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > row_0_mid2_fu_383_p3;
    sc_signal< sc_lv<3> > row_0_mid2_reg_565;
    sc_signal< sc_lv<3> > sub_ln36_6_mid2_v_v_s_fu_428_p3;
    sc_signal< sc_lv<3> > sub_ln36_6_mid2_v_v_s_reg_570;
    sc_signal< sc_lv<32> > conv_out_1_load_reg_585;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > kernel_load_reg_590;
    sc_signal< sc_lv<3> > row_6_fu_482_p2;
    sc_signal< sc_lv<3> > row_6_reg_595;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > grp_fu_191_p2;
    sc_signal< sc_lv<32> > tmp_reg_600;
    sc_signal< sc_lv<32> > grp_fu_185_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<2> > j_fu_487_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<3> > add_ln32_fu_492_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<4> > indvar_flatten7_reg_100;
    sc_signal< sc_lv<2> > col_reg_111;
    sc_signal< sc_lv<3> > indvars_iv_reg_122;
    sc_signal< sc_lv<2> > row_reg_133;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_148_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_col_0_phi_fu_158_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_row_0_phi_fu_179_p4;
    sc_signal< sc_lv<64> > zext_ln33_fu_325_p1;
    sc_signal< sc_lv<64> > zext_ln36_fu_467_p1;
    sc_signal< sc_lv<64> > sext_ln36_1_fu_477_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<4> > shl_ln_fu_199_p3;
    sc_signal< sc_lv<5> > zext_ln33_8_fu_207_p1;
    sc_signal< sc_lv<5> > col_cast6_fu_195_p1;
    sc_signal< sc_lv<1> > icmp_ln32_fu_235_p2;
    sc_signal< sc_lv<2> > i_fu_229_p2;
    sc_signal< sc_lv<4> > shl_ln33_mid1_fu_277_p3;
    sc_signal< sc_lv<5> > zext_ln33_16_fu_285_p1;
    sc_signal< sc_lv<5> > col_cast6_mid1_fu_269_p1;
    sc_signal< sc_lv<5> > sub_ln33_4_fu_289_p2;
    sc_signal< sc_lv<5> > sub_ln33_fu_211_p2;
    sc_signal< sc_lv<5> > sub_ln33_mid2_fu_295_p3;
    sc_signal< sc_lv<5> > row_cast5_fu_303_p1;
    sc_signal< sc_lv<5> > add_ln33_fu_315_p2;
    sc_signal< sc_lv<32> > sext_ln33_fu_321_p1;
    sc_signal< sc_lv<8> > shl_ln7_fu_330_p3;
    sc_signal< sc_lv<5> > shl_ln36_8_fu_342_p3;
    sc_signal< sc_lv<9> > zext_ln36_2_fu_338_p1;
    sc_signal< sc_lv<9> > zext_ln36_3_fu_350_p1;
    sc_signal< sc_lv<1> > icmp_ln35_fu_378_p2;
    sc_signal< sc_lv<3> > col_8_fu_372_p2;
    sc_signal< sc_lv<8> > shl_ln36_mid1_fu_390_p3;
    sc_signal< sc_lv<5> > shl_ln36_8_mid1_fu_402_p3;
    sc_signal< sc_lv<9> > zext_ln36_4_fu_398_p1;
    sc_signal< sc_lv<9> > zext_ln36_5_fu_410_p1;
    sc_signal< sc_lv<9> > sub_ln36_fu_414_p2;
    sc_signal< sc_lv<9> > sub_ln36_10_fu_354_p2;
    sc_signal< sc_lv<4> > sub_ln36_6_mid2_v_v_1_fu_436_p1;
    sc_signal< sc_lv<4> > sub_ln36_6_mid2_v_v_2_fu_440_p2;
    sc_signal< sc_lv<9> > sub_ln36_10_mid2_fu_420_p3;
    sc_signal< sc_lv<9> > row_0_cast_mid2_cast_fu_453_p1;
    sc_signal< sc_lv<9> > add_ln36_fu_457_p2;
    sc_signal< sc_lv<32> > sext_ln36_2_fu_463_p1;
    sc_signal< sc_lv<8> > row_0_cast1_mid2_cas_fu_449_p1;
    sc_signal< sc_lv<8> > grp_fu_497_p3;
    sc_signal< sc_lv<8> > add_ln36_2_fu_472_p2;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<6> > grp_fu_497_p1;
    sc_signal< sc_lv<2> > grp_fu_497_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<8> ap_const_lv8_1A;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln31_fu_223_p2();
    void thread_add_ln32_fu_492_p2();
    void thread_add_ln33_fu_315_p2();
    void thread_add_ln34_fu_366_p2();
    void thread_add_ln36_2_fu_472_p2();
    void thread_add_ln36_fu_457_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state10_pp0_stage3_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_0_phi_fu_158_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_148_p4();
    void thread_ap_phi_mux_row_0_phi_fu_179_p4();
    void thread_ap_ready();
    void thread_col_8_fu_372_p2();
    void thread_col_cast6_fu_195_p1();
    void thread_col_cast6_mid1_fu_269_p1();
    void thread_col_cast7_mid2_fu_265_p1();
    void thread_col_cast7_mid2_v_fu_257_p3();
    void thread_col_cast_mid2_fu_273_p1();
    void thread_conv_out_1_address0();
    void thread_conv_out_1_ce0();
    void thread_grp_fu_497_p1();
    void thread_grp_fu_497_p2();
    void thread_i_fu_229_p2();
    void thread_icmp_ln31_fu_217_p2();
    void thread_icmp_ln32_fu_235_p2();
    void thread_icmp_ln34_fu_360_p2();
    void thread_icmp_ln35_fu_378_p2();
    void thread_indvars_iv_mid2_fu_241_p3();
    void thread_j_fu_487_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_out_matrix_address0();
    void thread_out_matrix_ce0();
    void thread_out_matrix_d0();
    void thread_out_matrix_we0();
    void thread_row_0_cast1_mid2_cas_fu_449_p1();
    void thread_row_0_cast_mid2_cast_fu_453_p1();
    void thread_row_0_mid2_fu_383_p3();
    void thread_row_6_fu_482_p2();
    void thread_row_cast4_fu_307_p1();
    void thread_row_cast5_fu_303_p1();
    void thread_row_cast_fu_311_p1();
    void thread_row_mid2_fu_249_p3();
    void thread_sext_ln33_fu_321_p1();
    void thread_sext_ln36_1_fu_477_p1();
    void thread_sext_ln36_2_fu_463_p1();
    void thread_shl_ln33_mid1_fu_277_p3();
    void thread_shl_ln36_8_fu_342_p3();
    void thread_shl_ln36_8_mid1_fu_402_p3();
    void thread_shl_ln36_mid1_fu_390_p3();
    void thread_shl_ln7_fu_330_p3();
    void thread_shl_ln_fu_199_p3();
    void thread_sub_ln33_4_fu_289_p2();
    void thread_sub_ln33_fu_211_p2();
    void thread_sub_ln33_mid2_fu_295_p3();
    void thread_sub_ln36_10_fu_354_p2();
    void thread_sub_ln36_10_mid2_fu_420_p3();
    void thread_sub_ln36_6_mid2_v_v_1_fu_436_p1();
    void thread_sub_ln36_6_mid2_v_v_2_fu_440_p2();
    void thread_sub_ln36_6_mid2_v_v_s_fu_428_p3();
    void thread_sub_ln36_fu_414_p2();
    void thread_zext_ln33_16_fu_285_p1();
    void thread_zext_ln33_8_fu_207_p1();
    void thread_zext_ln33_fu_325_p1();
    void thread_zext_ln36_2_fu_338_p1();
    void thread_zext_ln36_3_fu_350_p1();
    void thread_zext_ln36_4_fu_398_p1();
    void thread_zext_ln36_5_fu_410_p1();
    void thread_zext_ln36_fu_467_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
