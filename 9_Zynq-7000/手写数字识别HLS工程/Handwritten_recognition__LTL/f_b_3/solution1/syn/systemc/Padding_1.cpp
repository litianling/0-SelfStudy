// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Padding_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Padding_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Padding_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Padding_1::ap_ST_fsm_state1 = "1";
const sc_lv<3> Padding_1::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Padding_1::ap_ST_fsm_state4 = "100";
const bool Padding_1::ap_const_boolean_1 = true;
const sc_lv<32> Padding_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Padding_1::ap_const_lv32_1 = "1";
const bool Padding_1::ap_const_boolean_0 = false;
const sc_lv<1> Padding_1::ap_const_lv1_0 = "0";
const sc_lv<1> Padding_1::ap_const_lv1_1 = "1";
const sc_lv<10> Padding_1::ap_const_lv10_0 = "0000000000";
const sc_lv<5> Padding_1::ap_const_lv5_0 = "00000";
const sc_lv<2> Padding_1::ap_const_lv2_0 = "00";
const sc_lv<5> Padding_1::ap_const_lv5_1A = "11010";
const sc_lv<6> Padding_1::ap_const_lv6_3E = "111110";
const sc_lv<3> Padding_1::ap_const_lv3_0 = "000";
const sc_lv<32> Padding_1::ap_const_lv32_4 = "100";
const sc_lv<4> Padding_1::ap_const_lv4_0 = "0000";
const sc_lv<10> Padding_1::ap_const_lv10_310 = "1100010000";
const sc_lv<10> Padding_1::ap_const_lv10_1 = "1";
const sc_lv<5> Padding_1::ap_const_lv5_1 = "1";
const sc_lv<5> Padding_1::ap_const_lv5_1C = "11100";
const sc_lv<5> Padding_1::ap_const_lv5_1E = "11110";
const sc_lv<32> Padding_1::ap_const_lv32_2 = "10";

Padding_1::Padding_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln89_fu_239_p2);
    sensitive << ( indvar_flatten_reg_108 );

    SC_METHOD(thread_add_ln92_1_fu_448_p2);
    sensitive << ( j_0_mid2_fu_257_p3 );

    SC_METHOD(thread_add_ln92_2_fu_458_p2);
    sensitive << ( zext_ln92_1_fu_454_p1 );
    sensitive << ( sub_ln92_mid2_fu_354_p3 );

    SC_METHOD(thread_add_ln92_4_fu_322_p2);
    sensitive << ( i_0_cast7_mid1_fu_265_p1 );

    SC_METHOD(thread_add_ln92_fu_185_p2);
    sensitive << ( i_0_cast7_fu_145_p1 );

    SC_METHOD(thread_and_ln91_1_fu_433_p2);
    sensitive << ( and_ln91_2_fu_427_p2 );
    sensitive << ( and_ln91_fu_421_p2 );

    SC_METHOD(thread_and_ln91_2_fu_427_p2);
    sensitive << ( icmp_ln91_3_fu_415_p2 );
    sensitive << ( icmp_ln91_mid2_fu_314_p3 );

    SC_METHOD(thread_and_ln91_fu_421_p2);
    sensitive << ( icmp_ln91_5_fu_409_p2 );
    sensitive << ( icmp_ln91_1_mid2_fu_378_p3 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln89_fu_233_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_141_p2);
    sensitive << ( sub_ln94_mid2_fu_299_p3 );
    sensitive << ( zext_ln90_mid2_cast_fu_386_p1 );

    SC_METHOD(thread_i_0_cast7_fu_145_p1);
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_i_0_cast7_mid1_fu_265_p1);
    sensitive << ( i_fu_245_p2 );

    SC_METHOD(thread_i_fu_245_p2);
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_icmp_ln89_fu_233_p2);
    sensitive << ( indvar_flatten_reg_108 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln90_fu_251_p2);
    sensitive << ( j_0_reg_130 );
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln91_1_fu_227_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_fu_217_p4 );

    SC_METHOD(thread_icmp_ln91_1_mid2_fu_378_p3);
    sensitive << ( icmp_ln90_fu_251_p2 );
    sensitive << ( icmp_ln91_4_fu_372_p2 );
    sensitive << ( icmp_ln91_1_fu_227_p2 );

    SC_METHOD(thread_icmp_ln91_2_fu_308_p2);
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_fu_245_p2 );

    SC_METHOD(thread_icmp_ln91_3_fu_415_p2);
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( j_0_mid2_fu_257_p3 );

    SC_METHOD(thread_icmp_ln91_4_fu_372_p2);
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_1_fu_362_p4 );

    SC_METHOD(thread_icmp_ln91_5_fu_409_p2);
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_2_fu_399_p4 );

    SC_METHOD(thread_icmp_ln91_fu_179_p2);
    sensitive << ( i_0_reg_119 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln91_mid2_fu_314_p3);
    sensitive << ( icmp_ln90_fu_251_p2 );
    sensitive << ( icmp_ln91_2_fu_308_p2 );
    sensitive << ( icmp_ln91_fu_179_p2 );

    SC_METHOD(thread_input_matrix_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln92_fu_464_p1 );

    SC_METHOD(thread_input_matrix_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_0_mid2_fu_257_p3);
    sensitive << ( j_0_reg_130 );
    sensitive << ( icmp_ln90_fu_251_p2 );

    SC_METHOD(thread_j_fu_469_p2);
    sensitive << ( j_0_mid2_fu_257_p3 );

    SC_METHOD(thread_output_matrix_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln94_fu_443_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_output_matrix_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln92_fu_478_p1 );

    SC_METHOD(thread_output_matrix_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_output_matrix_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_output_matrix_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_output_matrix_d1);
    sensitive << ( input_matrix_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_output_matrix_we0);
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( and_ln91_1_fu_433_p2 );

    SC_METHOD(thread_output_matrix_we1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln91_1_reg_497 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_select_ln89_fu_391_p3);
    sensitive << ( i_0_reg_119 );
    sensitive << ( icmp_ln90_fu_251_p2 );
    sensitive << ( i_fu_245_p2 );

    SC_METHOD(thread_sext_ln92_1_fu_207_p1);
    sensitive << ( shl_ln92_1_fu_199_p3 );

    SC_METHOD(thread_sext_ln92_2_fu_475_p1);
    sensitive << ( add_ln92_3_reg_506 );

    SC_METHOD(thread_sext_ln92_3_fu_344_p1);
    sensitive << ( shl_ln92_1_mid1_fu_336_p3 );

    SC_METHOD(thread_sext_ln92_fu_464_p1);
    sensitive << ( add_ln92_2_fu_458_p2 );

    SC_METHOD(thread_sext_ln94_fu_439_p1);
    sensitive << ( grp_fu_141_p2 );

    SC_METHOD(thread_shl_ln3_fu_191_p3);
    sensitive << ( add_ln92_fu_185_p2 );

    SC_METHOD(thread_shl_ln92_1_fu_199_p3);
    sensitive << ( add_ln92_fu_185_p2 );

    SC_METHOD(thread_shl_ln92_1_mid1_fu_336_p3);
    sensitive << ( add_ln92_4_fu_322_p2 );

    SC_METHOD(thread_shl_ln92_mid1_fu_328_p3);
    sensitive << ( add_ln92_4_fu_322_p2 );

    SC_METHOD(thread_shl_ln94_1_fu_161_p3);
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_shl_ln94_1_mid1_fu_281_p3);
    sensitive << ( i_fu_245_p2 );

    SC_METHOD(thread_shl_ln94_mid1_fu_269_p3);
    sensitive << ( i_fu_245_p2 );

    SC_METHOD(thread_shl_ln_fu_149_p3);
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_sub_ln92_1_fu_348_p2);
    sensitive << ( shl_ln92_mid1_fu_328_p3 );
    sensitive << ( sext_ln92_3_fu_344_p1 );

    SC_METHOD(thread_sub_ln92_fu_211_p2);
    sensitive << ( shl_ln3_fu_191_p3 );
    sensitive << ( sext_ln92_1_fu_207_p1 );

    SC_METHOD(thread_sub_ln92_mid2_fu_354_p3);
    sensitive << ( icmp_ln90_fu_251_p2 );
    sensitive << ( sub_ln92_1_fu_348_p2 );
    sensitive << ( sub_ln92_fu_211_p2 );

    SC_METHOD(thread_sub_ln94_1_fu_293_p2);
    sensitive << ( zext_ln94_3_fu_277_p1 );
    sensitive << ( zext_ln94_4_fu_289_p1 );

    SC_METHOD(thread_sub_ln94_fu_173_p2);
    sensitive << ( zext_ln94_1_fu_157_p1 );
    sensitive << ( zext_ln94_2_fu_169_p1 );

    SC_METHOD(thread_sub_ln94_mid2_fu_299_p3);
    sensitive << ( icmp_ln90_fu_251_p2 );
    sensitive << ( sub_ln94_1_fu_293_p2 );
    sensitive << ( sub_ln94_fu_173_p2 );

    SC_METHOD(thread_tmp_1_fu_362_p4);
    sensitive << ( i_fu_245_p2 );

    SC_METHOD(thread_tmp_2_fu_399_p4);
    sensitive << ( j_0_mid2_fu_257_p3 );

    SC_METHOD(thread_tmp_fu_217_p4);
    sensitive << ( i_0_reg_119 );

    SC_METHOD(thread_zext_ln90_mid2_cast_fu_386_p1);
    sensitive << ( j_0_mid2_fu_257_p3 );

    SC_METHOD(thread_zext_ln92_1_fu_454_p1);
    sensitive << ( add_ln92_1_fu_448_p2 );

    SC_METHOD(thread_zext_ln92_fu_478_p1);
    sensitive << ( sext_ln92_2_fu_475_p1 );

    SC_METHOD(thread_zext_ln94_1_fu_157_p1);
    sensitive << ( shl_ln_fu_149_p3 );

    SC_METHOD(thread_zext_ln94_2_fu_169_p1);
    sensitive << ( shl_ln94_1_fu_161_p3 );

    SC_METHOD(thread_zext_ln94_3_fu_277_p1);
    sensitive << ( shl_ln94_mid1_fu_269_p3 );

    SC_METHOD(thread_zext_ln94_4_fu_289_p1);
    sensitive << ( shl_ln94_1_mid1_fu_281_p3 );

    SC_METHOD(thread_zext_ln94_fu_443_p1);
    sensitive << ( sext_ln94_fu_439_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln89_fu_233_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Padding_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, input_matrix_address0, "(port)input_matrix_address0");
    sc_trace(mVcdFile, input_matrix_ce0, "(port)input_matrix_ce0");
    sc_trace(mVcdFile, input_matrix_q0, "(port)input_matrix_q0");
    sc_trace(mVcdFile, output_matrix_address0, "(port)output_matrix_address0");
    sc_trace(mVcdFile, output_matrix_ce0, "(port)output_matrix_ce0");
    sc_trace(mVcdFile, output_matrix_we0, "(port)output_matrix_we0");
    sc_trace(mVcdFile, output_matrix_d0, "(port)output_matrix_d0");
    sc_trace(mVcdFile, output_matrix_address1, "(port)output_matrix_address1");
    sc_trace(mVcdFile, output_matrix_ce1, "(port)output_matrix_ce1");
    sc_trace(mVcdFile, output_matrix_we1, "(port)output_matrix_we1");
    sc_trace(mVcdFile, output_matrix_d1, "(port)output_matrix_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, indvar_flatten_reg_108, "indvar_flatten_reg_108");
    sc_trace(mVcdFile, i_0_reg_119, "i_0_reg_119");
    sc_trace(mVcdFile, j_0_reg_130, "j_0_reg_130");
    sc_trace(mVcdFile, icmp_ln89_fu_233_p2, "icmp_ln89_fu_233_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln89_fu_239_p2, "add_ln89_fu_239_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, select_ln89_fu_391_p3, "select_ln89_fu_391_p3");
    sc_trace(mVcdFile, and_ln91_1_fu_433_p2, "and_ln91_1_fu_433_p2");
    sc_trace(mVcdFile, and_ln91_1_reg_497, "and_ln91_1_reg_497");
    sc_trace(mVcdFile, grp_fu_141_p2, "grp_fu_141_p2");
    sc_trace(mVcdFile, add_ln92_3_reg_506, "add_ln92_3_reg_506");
    sc_trace(mVcdFile, j_fu_469_p2, "j_fu_469_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, zext_ln94_fu_443_p1, "zext_ln94_fu_443_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, sext_ln92_fu_464_p1, "sext_ln92_fu_464_p1");
    sc_trace(mVcdFile, zext_ln92_fu_478_p1, "zext_ln92_fu_478_p1");
    sc_trace(mVcdFile, sub_ln94_mid2_fu_299_p3, "sub_ln94_mid2_fu_299_p3");
    sc_trace(mVcdFile, zext_ln90_mid2_cast_fu_386_p1, "zext_ln90_mid2_cast_fu_386_p1");
    sc_trace(mVcdFile, shl_ln_fu_149_p3, "shl_ln_fu_149_p3");
    sc_trace(mVcdFile, shl_ln94_1_fu_161_p3, "shl_ln94_1_fu_161_p3");
    sc_trace(mVcdFile, zext_ln94_1_fu_157_p1, "zext_ln94_1_fu_157_p1");
    sc_trace(mVcdFile, zext_ln94_2_fu_169_p1, "zext_ln94_2_fu_169_p1");
    sc_trace(mVcdFile, i_0_cast7_fu_145_p1, "i_0_cast7_fu_145_p1");
    sc_trace(mVcdFile, add_ln92_fu_185_p2, "add_ln92_fu_185_p2");
    sc_trace(mVcdFile, shl_ln92_1_fu_199_p3, "shl_ln92_1_fu_199_p3");
    sc_trace(mVcdFile, shl_ln3_fu_191_p3, "shl_ln3_fu_191_p3");
    sc_trace(mVcdFile, sext_ln92_1_fu_207_p1, "sext_ln92_1_fu_207_p1");
    sc_trace(mVcdFile, tmp_fu_217_p4, "tmp_fu_217_p4");
    sc_trace(mVcdFile, icmp_ln90_fu_251_p2, "icmp_ln90_fu_251_p2");
    sc_trace(mVcdFile, i_fu_245_p2, "i_fu_245_p2");
    sc_trace(mVcdFile, shl_ln94_mid1_fu_269_p3, "shl_ln94_mid1_fu_269_p3");
    sc_trace(mVcdFile, shl_ln94_1_mid1_fu_281_p3, "shl_ln94_1_mid1_fu_281_p3");
    sc_trace(mVcdFile, zext_ln94_3_fu_277_p1, "zext_ln94_3_fu_277_p1");
    sc_trace(mVcdFile, zext_ln94_4_fu_289_p1, "zext_ln94_4_fu_289_p1");
    sc_trace(mVcdFile, sub_ln94_1_fu_293_p2, "sub_ln94_1_fu_293_p2");
    sc_trace(mVcdFile, sub_ln94_fu_173_p2, "sub_ln94_fu_173_p2");
    sc_trace(mVcdFile, icmp_ln91_2_fu_308_p2, "icmp_ln91_2_fu_308_p2");
    sc_trace(mVcdFile, icmp_ln91_fu_179_p2, "icmp_ln91_fu_179_p2");
    sc_trace(mVcdFile, i_0_cast7_mid1_fu_265_p1, "i_0_cast7_mid1_fu_265_p1");
    sc_trace(mVcdFile, add_ln92_4_fu_322_p2, "add_ln92_4_fu_322_p2");
    sc_trace(mVcdFile, shl_ln92_1_mid1_fu_336_p3, "shl_ln92_1_mid1_fu_336_p3");
    sc_trace(mVcdFile, shl_ln92_mid1_fu_328_p3, "shl_ln92_mid1_fu_328_p3");
    sc_trace(mVcdFile, sext_ln92_3_fu_344_p1, "sext_ln92_3_fu_344_p1");
    sc_trace(mVcdFile, sub_ln92_1_fu_348_p2, "sub_ln92_1_fu_348_p2");
    sc_trace(mVcdFile, sub_ln92_fu_211_p2, "sub_ln92_fu_211_p2");
    sc_trace(mVcdFile, tmp_1_fu_362_p4, "tmp_1_fu_362_p4");
    sc_trace(mVcdFile, icmp_ln91_4_fu_372_p2, "icmp_ln91_4_fu_372_p2");
    sc_trace(mVcdFile, icmp_ln91_1_fu_227_p2, "icmp_ln91_1_fu_227_p2");
    sc_trace(mVcdFile, j_0_mid2_fu_257_p3, "j_0_mid2_fu_257_p3");
    sc_trace(mVcdFile, tmp_2_fu_399_p4, "tmp_2_fu_399_p4");
    sc_trace(mVcdFile, icmp_ln91_5_fu_409_p2, "icmp_ln91_5_fu_409_p2");
    sc_trace(mVcdFile, icmp_ln91_1_mid2_fu_378_p3, "icmp_ln91_1_mid2_fu_378_p3");
    sc_trace(mVcdFile, icmp_ln91_3_fu_415_p2, "icmp_ln91_3_fu_415_p2");
    sc_trace(mVcdFile, icmp_ln91_mid2_fu_314_p3, "icmp_ln91_mid2_fu_314_p3");
    sc_trace(mVcdFile, and_ln91_2_fu_427_p2, "and_ln91_2_fu_427_p2");
    sc_trace(mVcdFile, and_ln91_fu_421_p2, "and_ln91_fu_421_p2");
    sc_trace(mVcdFile, sext_ln94_fu_439_p1, "sext_ln94_fu_439_p1");
    sc_trace(mVcdFile, add_ln92_1_fu_448_p2, "add_ln92_1_fu_448_p2");
    sc_trace(mVcdFile, zext_ln92_1_fu_454_p1, "zext_ln92_1_fu_454_p1");
    sc_trace(mVcdFile, sub_ln92_mid2_fu_354_p3, "sub_ln92_mid2_fu_354_p3");
    sc_trace(mVcdFile, add_ln92_2_fu_458_p2, "add_ln92_2_fu_458_p2");
    sc_trace(mVcdFile, sext_ln92_2_fu_475_p1, "sext_ln92_2_fu_475_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Padding_1::~Padding_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Padding_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_0))) {
        i_0_reg_119 = select_ln89_fu_391_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_119 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_0))) {
        indvar_flatten_reg_108 = add_ln89_fu_239_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_108 = ap_const_lv10_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_0))) {
        j_0_reg_130 = j_fu_469_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        j_0_reg_130 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln91_1_fu_433_p2.read(), ap_const_lv1_1))) {
        add_ln92_3_reg_506 = grp_fu_141_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_0))) {
        and_ln91_1_reg_497 = and_ln91_1_fu_433_p2.read();
    }
}

void Padding_1::thread_add_ln89_fu_239_p2() {
    add_ln89_fu_239_p2 = (!indvar_flatten_reg_108.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(indvar_flatten_reg_108.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void Padding_1::thread_add_ln92_1_fu_448_p2() {
    add_ln92_1_fu_448_p2 = (!j_0_mid2_fu_257_p3.read().is_01() || !ap_const_lv5_1E.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_mid2_fu_257_p3.read()) + sc_bigint<5>(ap_const_lv5_1E));
}

void Padding_1::thread_add_ln92_2_fu_458_p2() {
    add_ln92_2_fu_458_p2 = (!zext_ln92_1_fu_454_p1.read().is_01() || !sub_ln92_mid2_fu_354_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln92_1_fu_454_p1.read()) + sc_biguint<11>(sub_ln92_mid2_fu_354_p3.read()));
}

void Padding_1::thread_add_ln92_4_fu_322_p2() {
    add_ln92_4_fu_322_p2 = (!i_0_cast7_mid1_fu_265_p1.read().is_01() || !ap_const_lv6_3E.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_cast7_mid1_fu_265_p1.read()) + sc_bigint<6>(ap_const_lv6_3E));
}

void Padding_1::thread_add_ln92_fu_185_p2() {
    add_ln92_fu_185_p2 = (!i_0_cast7_fu_145_p1.read().is_01() || !ap_const_lv6_3E.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_cast7_fu_145_p1.read()) + sc_bigint<6>(ap_const_lv6_3E));
}

void Padding_1::thread_and_ln91_1_fu_433_p2() {
    and_ln91_1_fu_433_p2 = (and_ln91_2_fu_427_p2.read() & and_ln91_fu_421_p2.read());
}

void Padding_1::thread_and_ln91_2_fu_427_p2() {
    and_ln91_2_fu_427_p2 = (icmp_ln91_3_fu_415_p2.read() & icmp_ln91_mid2_fu_314_p3.read());
}

void Padding_1::thread_and_ln91_fu_421_p2() {
    and_ln91_fu_421_p2 = (icmp_ln91_5_fu_409_p2.read() & icmp_ln91_1_mid2_fu_378_p3.read());
}

void Padding_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Padding_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Padding_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Padding_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Padding_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Padding_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Padding_1::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Padding_1::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Padding_1::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Padding_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Padding_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Padding_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Padding_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Padding_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Padding_1::thread_grp_fu_141_p2() {
    grp_fu_141_p2 = (!sub_ln94_mid2_fu_299_p3.read().is_01() || !zext_ln90_mid2_cast_fu_386_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(sub_ln94_mid2_fu_299_p3.read()) + sc_biguint<11>(zext_ln90_mid2_cast_fu_386_p1.read()));
}

void Padding_1::thread_i_0_cast7_fu_145_p1() {
    i_0_cast7_fu_145_p1 = esl_zext<6,5>(i_0_reg_119.read());
}

void Padding_1::thread_i_0_cast7_mid1_fu_265_p1() {
    i_0_cast7_mid1_fu_265_p1 = esl_zext<6,5>(i_fu_245_p2.read());
}

void Padding_1::thread_i_fu_245_p2() {
    i_fu_245_p2 = (!i_0_reg_119.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_119.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Padding_1::thread_icmp_ln89_fu_233_p2() {
    icmp_ln89_fu_233_p2 = (!indvar_flatten_reg_108.read().is_01() || !ap_const_lv10_310.is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_108.read() == ap_const_lv10_310);
}

void Padding_1::thread_icmp_ln90_fu_251_p2() {
    icmp_ln90_fu_251_p2 = (!j_0_reg_130.read().is_01() || !ap_const_lv5_1C.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_130.read() == ap_const_lv5_1C);
}

void Padding_1::thread_icmp_ln91_1_fu_227_p2() {
    icmp_ln91_1_fu_227_p2 = (!tmp_fu_217_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_217_p4.read() != ap_const_lv4_0);
}

void Padding_1::thread_icmp_ln91_1_mid2_fu_378_p3() {
    icmp_ln91_1_mid2_fu_378_p3 = (!icmp_ln90_fu_251_p2.read()[0].is_01())? sc_lv<1>(): ((icmp_ln90_fu_251_p2.read()[0].to_bool())? icmp_ln91_4_fu_372_p2.read(): icmp_ln91_1_fu_227_p2.read());
}

void Padding_1::thread_icmp_ln91_2_fu_308_p2() {
    icmp_ln91_2_fu_308_p2 = (!i_fu_245_p2.read().is_01() || !ap_const_lv5_1A.is_01())? sc_lv<1>(): (sc_biguint<5>(i_fu_245_p2.read()) < sc_biguint<5>(ap_const_lv5_1A));
}

void Padding_1::thread_icmp_ln91_3_fu_415_p2() {
    icmp_ln91_3_fu_415_p2 = (!j_0_mid2_fu_257_p3.read().is_01() || !ap_const_lv5_1A.is_01())? sc_lv<1>(): (sc_biguint<5>(j_0_mid2_fu_257_p3.read()) < sc_biguint<5>(ap_const_lv5_1A));
}

void Padding_1::thread_icmp_ln91_4_fu_372_p2() {
    icmp_ln91_4_fu_372_p2 = (!tmp_1_fu_362_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_1_fu_362_p4.read() != ap_const_lv4_0);
}

void Padding_1::thread_icmp_ln91_5_fu_409_p2() {
    icmp_ln91_5_fu_409_p2 = (!tmp_2_fu_399_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_399_p4.read() != ap_const_lv4_0);
}

void Padding_1::thread_icmp_ln91_fu_179_p2() {
    icmp_ln91_fu_179_p2 = (!i_0_reg_119.read().is_01() || !ap_const_lv5_1A.is_01())? sc_lv<1>(): (sc_biguint<5>(i_0_reg_119.read()) < sc_biguint<5>(ap_const_lv5_1A));
}

void Padding_1::thread_icmp_ln91_mid2_fu_314_p3() {
    icmp_ln91_mid2_fu_314_p3 = (!icmp_ln90_fu_251_p2.read()[0].is_01())? sc_lv<1>(): ((icmp_ln90_fu_251_p2.read()[0].to_bool())? icmp_ln91_2_fu_308_p2.read(): icmp_ln91_fu_179_p2.read());
}

void Padding_1::thread_input_matrix_address0() {
    input_matrix_address0 =  (sc_lv<10>) (sext_ln92_fu_464_p1.read());
}

void Padding_1::thread_input_matrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        input_matrix_ce0 = ap_const_logic_1;
    } else {
        input_matrix_ce0 = ap_const_logic_0;
    }
}

void Padding_1::thread_j_0_mid2_fu_257_p3() {
    j_0_mid2_fu_257_p3 = (!icmp_ln90_fu_251_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln90_fu_251_p2.read()[0].to_bool())? ap_const_lv5_0: j_0_reg_130.read());
}

void Padding_1::thread_j_fu_469_p2() {
    j_fu_469_p2 = (!j_0_mid2_fu_257_p3.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_0_mid2_fu_257_p3.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Padding_1::thread_output_matrix_address0() {
    output_matrix_address0 =  (sc_lv<10>) (zext_ln94_fu_443_p1.read());
}

void Padding_1::thread_output_matrix_address1() {
    output_matrix_address1 =  (sc_lv<10>) (zext_ln92_fu_478_p1.read());
}

void Padding_1::thread_output_matrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        output_matrix_ce0 = ap_const_logic_1;
    } else {
        output_matrix_ce0 = ap_const_logic_0;
    }
}

void Padding_1::thread_output_matrix_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        output_matrix_ce1 = ap_const_logic_1;
    } else {
        output_matrix_ce1 = ap_const_logic_0;
    }
}

void Padding_1::thread_output_matrix_d0() {
    output_matrix_d0 = ap_const_lv32_0;
}

void Padding_1::thread_output_matrix_d1() {
    output_matrix_d1 = input_matrix_q0.read();
}

void Padding_1::thread_output_matrix_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, and_ln91_1_fu_433_p2.read()))) {
        output_matrix_we0 = ap_const_logic_1;
    } else {
        output_matrix_we0 = ap_const_logic_0;
    }
}

void Padding_1::thread_output_matrix_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(and_ln91_1_reg_497.read(), ap_const_lv1_1))) {
        output_matrix_we1 = ap_const_logic_1;
    } else {
        output_matrix_we1 = ap_const_logic_0;
    }
}

void Padding_1::thread_select_ln89_fu_391_p3() {
    select_ln89_fu_391_p3 = (!icmp_ln90_fu_251_p2.read()[0].is_01())? sc_lv<5>(): ((icmp_ln90_fu_251_p2.read()[0].to_bool())? i_fu_245_p2.read(): i_0_reg_119.read());
}

void Padding_1::thread_sext_ln92_1_fu_207_p1() {
    sext_ln92_1_fu_207_p1 = esl_sext<11,9>(shl_ln92_1_fu_199_p3.read());
}

void Padding_1::thread_sext_ln92_2_fu_475_p1() {
    sext_ln92_2_fu_475_p1 = esl_sext<32,11>(add_ln92_3_reg_506.read());
}

void Padding_1::thread_sext_ln92_3_fu_344_p1() {
    sext_ln92_3_fu_344_p1 = esl_sext<11,9>(shl_ln92_1_mid1_fu_336_p3.read());
}

void Padding_1::thread_sext_ln92_fu_464_p1() {
    sext_ln92_fu_464_p1 = esl_sext<64,11>(add_ln92_2_fu_458_p2.read());
}

void Padding_1::thread_sext_ln94_fu_439_p1() {
    sext_ln94_fu_439_p1 = esl_sext<32,11>(grp_fu_141_p2.read());
}

void Padding_1::thread_shl_ln3_fu_191_p3() {
    shl_ln3_fu_191_p3 = esl_concat<6,5>(add_ln92_fu_185_p2.read(), ap_const_lv5_0);
}

void Padding_1::thread_shl_ln92_1_fu_199_p3() {
    shl_ln92_1_fu_199_p3 = esl_concat<6,3>(add_ln92_fu_185_p2.read(), ap_const_lv3_0);
}

void Padding_1::thread_shl_ln92_1_mid1_fu_336_p3() {
    shl_ln92_1_mid1_fu_336_p3 = esl_concat<6,3>(add_ln92_4_fu_322_p2.read(), ap_const_lv3_0);
}

void Padding_1::thread_shl_ln92_mid1_fu_328_p3() {
    shl_ln92_mid1_fu_328_p3 = esl_concat<6,5>(add_ln92_4_fu_322_p2.read(), ap_const_lv5_0);
}

void Padding_1::thread_shl_ln94_1_fu_161_p3() {
    shl_ln94_1_fu_161_p3 = esl_concat<5,2>(i_0_reg_119.read(), ap_const_lv2_0);
}

void Padding_1::thread_shl_ln94_1_mid1_fu_281_p3() {
    shl_ln94_1_mid1_fu_281_p3 = esl_concat<5,2>(i_fu_245_p2.read(), ap_const_lv2_0);
}

void Padding_1::thread_shl_ln94_mid1_fu_269_p3() {
    shl_ln94_mid1_fu_269_p3 = esl_concat<5,5>(i_fu_245_p2.read(), ap_const_lv5_0);
}

void Padding_1::thread_shl_ln_fu_149_p3() {
    shl_ln_fu_149_p3 = esl_concat<5,5>(i_0_reg_119.read(), ap_const_lv5_0);
}

void Padding_1::thread_sub_ln92_1_fu_348_p2() {
    sub_ln92_1_fu_348_p2 = (!shl_ln92_mid1_fu_328_p3.read().is_01() || !sext_ln92_3_fu_344_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(shl_ln92_mid1_fu_328_p3.read()) - sc_bigint<11>(sext_ln92_3_fu_344_p1.read()));
}

void Padding_1::thread_sub_ln92_fu_211_p2() {
    sub_ln92_fu_211_p2 = (!shl_ln3_fu_191_p3.read().is_01() || !sext_ln92_1_fu_207_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(shl_ln3_fu_191_p3.read()) - sc_bigint<11>(sext_ln92_1_fu_207_p1.read()));
}

void Padding_1::thread_sub_ln92_mid2_fu_354_p3() {
    sub_ln92_mid2_fu_354_p3 = (!icmp_ln90_fu_251_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln90_fu_251_p2.read()[0].to_bool())? sub_ln92_1_fu_348_p2.read(): sub_ln92_fu_211_p2.read());
}

void Padding_1::thread_sub_ln94_1_fu_293_p2() {
    sub_ln94_1_fu_293_p2 = (!zext_ln94_3_fu_277_p1.read().is_01() || !zext_ln94_4_fu_289_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln94_3_fu_277_p1.read()) - sc_biguint<11>(zext_ln94_4_fu_289_p1.read()));
}

void Padding_1::thread_sub_ln94_fu_173_p2() {
    sub_ln94_fu_173_p2 = (!zext_ln94_1_fu_157_p1.read().is_01() || !zext_ln94_2_fu_169_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln94_1_fu_157_p1.read()) - sc_biguint<11>(zext_ln94_2_fu_169_p1.read()));
}

void Padding_1::thread_sub_ln94_mid2_fu_299_p3() {
    sub_ln94_mid2_fu_299_p3 = (!icmp_ln90_fu_251_p2.read()[0].is_01())? sc_lv<11>(): ((icmp_ln90_fu_251_p2.read()[0].to_bool())? sub_ln94_1_fu_293_p2.read(): sub_ln94_fu_173_p2.read());
}

void Padding_1::thread_tmp_1_fu_362_p4() {
    tmp_1_fu_362_p4 = i_fu_245_p2.read().range(4, 1);
}

void Padding_1::thread_tmp_2_fu_399_p4() {
    tmp_2_fu_399_p4 = j_0_mid2_fu_257_p3.read().range(4, 1);
}

void Padding_1::thread_tmp_fu_217_p4() {
    tmp_fu_217_p4 = i_0_reg_119.read().range(4, 1);
}

void Padding_1::thread_zext_ln90_mid2_cast_fu_386_p1() {
    zext_ln90_mid2_cast_fu_386_p1 = esl_zext<11,5>(j_0_mid2_fu_257_p3.read());
}

void Padding_1::thread_zext_ln92_1_fu_454_p1() {
    zext_ln92_1_fu_454_p1 = esl_zext<11,5>(add_ln92_1_fu_448_p2.read());
}

void Padding_1::thread_zext_ln92_fu_478_p1() {
    zext_ln92_fu_478_p1 = esl_zext<64,32>(sext_ln92_2_fu_475_p1.read());
}

void Padding_1::thread_zext_ln94_1_fu_157_p1() {
    zext_ln94_1_fu_157_p1 = esl_zext<11,10>(shl_ln_fu_149_p3.read());
}

void Padding_1::thread_zext_ln94_2_fu_169_p1() {
    zext_ln94_2_fu_169_p1 = esl_zext<11,7>(shl_ln94_1_fu_161_p3.read());
}

void Padding_1::thread_zext_ln94_3_fu_277_p1() {
    zext_ln94_3_fu_277_p1 = esl_zext<11,10>(shl_ln94_mid1_fu_269_p3.read());
}

void Padding_1::thread_zext_ln94_4_fu_289_p1() {
    zext_ln94_4_fu_289_p1 = esl_zext<11,7>(shl_ln94_1_mid1_fu_281_p3.read());
}

void Padding_1::thread_zext_ln94_fu_443_p1() {
    zext_ln94_fu_443_p1 = esl_zext<64,32>(sext_ln94_fu_439_p1.read());
}

void Padding_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln89_fu_233_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

