

================================================================
== Vivado HLS Report for 'Conv2d_1'
================================================================
* Date:           Mon Oct 31 21:58:58 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        f_b_3
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.286|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                    |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1            |    ?|    ?|         ?|          -|          -|   784|    no    |
        | + Conv2d_label0_L  |    ?|    ?|        10|          4|          1|     ?|    yes   |
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 4, D = 10, States = { 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 13 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 3 
13 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([8100 x float]* @fc_hidden_layer2, [1 x i8]* @p_str, [14 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)" [f_b_1/forw_back_LTL.c:31]   --->   Operation 14 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.75ns)   --->   "br label %.preheader" [f_b_1/forw_back_LTL.c:31]   --->   Operation 15 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 7.92>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten42 = phi i10 [ 0, %0 ], [ %add_ln31, %2 ]" [f_b_1/forw_back_LTL.c:31]   --->   Operation 16 'phi' 'indvar_flatten42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%phi_ln31 = phi i32 [ 0, %0 ], [ %select_ln31_46, %2 ]" [f_b_1/forw_back_LTL.c:31]   --->   Operation 17 'phi' 'phi_ln31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%phi_ln31_5 = phi i32 [ 0, %0 ], [ %select_ln31_47, %2 ]" [f_b_1/forw_back_LTL.c:31]   --->   Operation 18 'phi' 'phi_ln31_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%indvars_iv12 = phi i32 [ 3, %0 ], [ %select_ln31_48, %2 ]" [f_b_1/forw_back_LTL.c:31]   --->   Operation 19 'phi' 'indvars_iv12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%col = phi i5 [ 0, %0 ], [ %select_ln31_44, %2 ]" [f_b_1/forw_back_LTL.c:31]   --->   Operation 20 'phi' 'col' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%phi_ln32 = phi i32 [ 0, %0 ], [ %add_ln32_22, %2 ]" [f_b_1/forw_back_LTL.c:32]   --->   Operation 21 'phi' 'phi_ln32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%phi_ln32_5 = phi i32 [ 0, %0 ], [ %add_ln32_21, %2 ]" [f_b_1/forw_back_LTL.c:32]   --->   Operation 22 'phi' 'phi_ln32_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%indvars_iv19 = phi i32 [ 3, %0 ], [ %add_ln32_20, %2 ]" [f_b_1/forw_back_LTL.c:32]   --->   Operation 23 'phi' 'indvars_iv19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%row = phi i5 [ 0, %0 ], [ %j, %2 ]"   --->   Operation 24 'phi' 'row' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%shl_ln = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %col, i5 0)" [f_b_1/forw_back_LTL.c:33]   --->   Operation 25 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln33_9 = zext i10 %shl_ln to i11" [f_b_1/forw_back_LTL.c:33]   --->   Operation 26 'zext' 'zext_ln33_9' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%shl_ln33_3 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %col, i2 0)" [f_b_1/forw_back_LTL.c:33]   --->   Operation 27 'bitconcatenate' 'shl_ln33_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln33_10 = zext i7 %shl_ln33_3 to i11" [f_b_1/forw_back_LTL.c:33]   --->   Operation 28 'zext' 'zext_ln33_10' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.93ns)   --->   "%sub_ln33 = sub i11 %zext_ln33_9, %zext_ln33_10" [f_b_1/forw_back_LTL.c:33]   --->   Operation 29 'sub' 'sub_ln33' <Predicate = true> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.85ns)   --->   "%icmp_ln31 = icmp eq i10 %indvar_flatten42, -240" [f_b_1/forw_back_LTL.c:31]   --->   Operation 30 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.93ns)   --->   "%add_ln31 = add i10 %indvar_flatten42, 1" [f_b_1/forw_back_LTL.c:31]   --->   Operation 31 'add' 'add_ln31' <Predicate = true> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln31, label %3, label %.preheader.preheader" [f_b_1/forw_back_LTL.c:31]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.87ns)   --->   "%i = add i5 %col, 1" [f_b_1/forw_back_LTL.c:31]   --->   Operation 33 'add' 'i' <Predicate = (!icmp_ln31)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.20ns)   --->   "%add_ln31_24 = add i32 %indvars_iv12, 1" [f_b_1/forw_back_LTL.c:31]   --->   Operation 34 'add' 'add_ln31_24' <Predicate = (!icmp_ln31)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.20ns)   --->   "%add_ln31_25 = add i32 %phi_ln31_5, 1" [f_b_1/forw_back_LTL.c:31]   --->   Operation 35 'add' 'add_ln31_25' <Predicate = (!icmp_ln31)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.20ns)   --->   "%add_ln31_26 = add i32 %phi_ln31, -1" [f_b_1/forw_back_LTL.c:31]   --->   Operation 36 'add' 'add_ln31_26' <Predicate = (!icmp_ln31)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%empty_125 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 784, i64 784, i64 784)"   --->   Operation 37 'speclooptripcount' 'empty_125' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.87ns)   --->   "%icmp_ln32 = icmp eq i5 %row, -4" [f_b_1/forw_back_LTL.c:32]   --->   Operation 38 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.52ns)   --->   "%select_ln31 = select i1 %icmp_ln32, i32 0, i32 %phi_ln32" [f_b_1/forw_back_LTL.c:31]   --->   Operation 39 'select' 'select_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.52ns)   --->   "%select_ln31_39 = select i1 %icmp_ln32, i32 0, i32 %phi_ln32_5" [f_b_1/forw_back_LTL.c:31]   --->   Operation 40 'select' 'select_ln31_39' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.52ns)   --->   "%select_ln31_40 = select i1 %icmp_ln32, i32 3, i32 %indvars_iv19" [f_b_1/forw_back_LTL.c:31]   --->   Operation 41 'select' 'select_ln31_40' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.48ns)   --->   "%select_ln31_41 = select i1 %icmp_ln32, i5 0, i5 %row" [f_b_1/forw_back_LTL.c:31]   --->   Operation 42 'select' 'select_ln31_41' <Predicate = (!icmp_ln31)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.11ns)   --->   "%icmp_ln31_8 = icmp sgt i32 %add_ln31_24, %add_ln31_25" [f_b_1/forw_back_LTL.c:31]   --->   Operation 43 'icmp' 'icmp_ln31_8' <Predicate = (!icmp_ln31)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node add_ln31_27)   --->   "%select_ln31_42 = select i1 %icmp_ln31_8, i32 %add_ln31_24, i32 %add_ln31_25" [f_b_1/forw_back_LTL.c:31]   --->   Operation 44 'select' 'select_ln31_42' <Predicate = (!icmp_ln31)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln31_27 = add i32 %select_ln31_42, %add_ln31_26" [f_b_1/forw_back_LTL.c:31]   --->   Operation 45 'add' 'add_ln31_27' <Predicate = (!icmp_ln31)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (1.11ns)   --->   "%icmp_ln31_9 = icmp sgt i32 %indvars_iv12, %phi_ln31_5" [f_b_1/forw_back_LTL.c:31]   --->   Operation 46 'icmp' 'icmp_ln31_9' <Predicate = (!icmp_ln31)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln3177)   --->   "%select_ln3178 = select i1 %icmp_ln31_9, i32 %indvars_iv12, i32 %phi_ln31_5" [f_b_1/forw_back_LTL.c:31]   --->   Operation 47 'select' 'select_ln3178' <Predicate = (!icmp_ln31)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln3177 = add i32 %select_ln3178, %phi_ln31" [f_b_1/forw_back_LTL.c:31]   --->   Operation 48 'add' 'add_ln3177' <Predicate = (!icmp_ln31)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.52ns)   --->   "%select_ln31_43 = select i1 %icmp_ln32, i32 %add_ln31_27, i32 %add_ln3177" [f_b_1/forw_back_LTL.c:31]   --->   Operation 49 'select' 'select_ln31_43' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.48ns)   --->   "%select_ln31_44 = select i1 %icmp_ln32, i5 %i, i5 %col" [f_b_1/forw_back_LTL.c:31]   --->   Operation 50 'select' 'select_ln31_44' <Predicate = (!icmp_ln31)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i5 %select_ln31_44 to i32" [f_b_1/forw_back_LTL.c:31]   --->   Operation 51 'zext' 'zext_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%shl_ln33_mid1 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %i, i5 0)" [f_b_1/forw_back_LTL.c:33]   --->   Operation 52 'bitconcatenate' 'shl_ln33_mid1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln33_17 = zext i10 %shl_ln33_mid1 to i11" [f_b_1/forw_back_LTL.c:33]   --->   Operation 53 'zext' 'zext_ln33_17' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%shl_ln33_3_mid1 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %i, i2 0)" [f_b_1/forw_back_LTL.c:33]   --->   Operation 54 'bitconcatenate' 'shl_ln33_3_mid1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln33_18 = zext i7 %shl_ln33_3_mid1 to i11" [f_b_1/forw_back_LTL.c:33]   --->   Operation 55 'zext' 'zext_ln33_18' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.93ns)   --->   "%sub_ln33_5 = sub i11 %zext_ln33_17, %zext_ln33_18" [f_b_1/forw_back_LTL.c:33]   --->   Operation 56 'sub' 'sub_ln33_5' <Predicate = (!icmp_ln31)> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node add_ln33)   --->   "%select_ln31_45 = select i1 %icmp_ln32, i11 %sub_ln33_5, i11 %sub_ln33" [f_b_1/forw_back_LTL.c:31]   --->   Operation 57 'select' 'select_ln31_45' <Predicate = (!icmp_ln31)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (0.52ns)   --->   "%select_ln31_46 = select i1 %icmp_ln32, i32 %add_ln31_26, i32 %phi_ln31" [f_b_1/forw_back_LTL.c:31]   --->   Operation 58 'select' 'select_ln31_46' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.52ns)   --->   "%select_ln31_47 = select i1 %icmp_ln32, i32 %add_ln31_25, i32 %phi_ln31_5" [f_b_1/forw_back_LTL.c:31]   --->   Operation 59 'select' 'select_ln31_47' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.52ns)   --->   "%select_ln31_48 = select i1 %icmp_ln32, i32 %add_ln31_24, i32 %indvars_iv12" [f_b_1/forw_back_LTL.c:31]   --->   Operation 60 'select' 'select_ln31_48' <Predicate = (!icmp_ln31)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (1.11ns)   --->   "%icmp_ln32_5 = icmp sgt i32 %select_ln31_40, %select_ln31_39" [f_b_1/forw_back_LTL.c:32]   --->   Operation 61 'icmp' 'icmp_ln32_5' <Predicate = (!icmp_ln31)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node add_ln32)   --->   "%select_ln32 = select i1 %icmp_ln32_5, i32 %select_ln31_40, i32 %select_ln31_39" [f_b_1/forw_back_LTL.c:32]   --->   Operation 62 'select' 'select_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 63 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln32 = add i32 %select_ln32, %select_ln31" [f_b_1/forw_back_LTL.c:32]   --->   Operation 63 'add' 'add_ln32' <Predicate = (!icmp_ln31)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node add_ln33)   --->   "%row_cast1 = zext i5 %select_ln31_41 to i11" [f_b_1/forw_back_LTL.c:31]   --->   Operation 64 'zext' 'row_cast1' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%row_cast = zext i5 %select_ln31_41 to i32" [f_b_1/forw_back_LTL.c:31]   --->   Operation 65 'zext' 'row_cast' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.94ns) (out node of the LUT)   --->   "%add_ln33 = add i11 %row_cast1, %select_ln31_45" [f_b_1/forw_back_LTL.c:33]   --->   Operation 66 'add' 'add_ln33' <Predicate = (!icmp_ln31)> <Delay = 0.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln33 = sext i11 %add_ln33 to i32" [f_b_1/forw_back_LTL.c:33]   --->   Operation 67 'sext' 'sext_ln33' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i32 %sext_ln33 to i64" [f_b_1/forw_back_LTL.c:33]   --->   Operation 68 'zext' 'zext_ln33' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%out_matrix_addr = getelementptr [784 x float]* %out_matrix, i64 0, i64 %zext_ln33" [f_b_1/forw_back_LTL.c:33]   --->   Operation 69 'getelementptr' 'out_matrix_addr' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 70 [1/1] (1.35ns)   --->   "store float 0.000000e+00, float* %out_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:33]   --->   Operation 70 'store' <Predicate = (!icmp_ln31)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_2 : Operation 71 [1/1] (0.87ns)   --->   "%add_ln35 = add i5 %select_ln31_41, 3" [f_b_1/forw_back_LTL.c:35]   --->   Operation 71 'add' 'add_ln35' <Predicate = (!icmp_ln31)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i5 %add_ln35 to i32" [f_b_1/forw_back_LTL.c:35]   --->   Operation 72 'zext' 'zext_ln35' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln33_19 = zext i32 %select_ln31_43 to i64" [f_b_1/forw_back_LTL.c:33]   --->   Operation 73 'zext' 'zext_ln33_19' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln33_20 = zext i32 %add_ln32 to i64" [f_b_1/forw_back_LTL.c:33]   --->   Operation 74 'zext' 'zext_ln33_20' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 75 [1/1] (3.88ns)   --->   "%mul_ln33 = mul i64 %zext_ln33_19, %zext_ln33_20" [f_b_1/forw_back_LTL.c:33]   --->   Operation 75 'mul' 'mul_ln33' <Predicate = (!icmp_ln31)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.75ns)   --->   "br label %1" [f_b_1/forw_back_LTL.c:34]   --->   Operation 76 'br' <Predicate = (!icmp_ln31)> <Delay = 0.75>
ST_2 : Operation 77 [1/1] (0.00ns)   --->   "ret void" [f_b_1/forw_back_LTL.c:38]   --->   Operation 77 'ret' <Predicate = (icmp_ln31)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.81>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %.preheader.preheader ], [ %add_ln34, %.reset ]" [f_b_1/forw_back_LTL.c:34]   --->   Operation 78 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%col_0 = phi i32 [ %zext_ln31, %.preheader.preheader ], [ %select_ln34, %.reset ]" [f_b_1/forw_back_LTL.c:31]   --->   Operation 79 'phi' 'col_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%empty = phi float [ 0.000000e+00, %.preheader.preheader ], [ %tmp_s, %.reset ]" [f_b_1/forw_back_LTL.c:36]   --->   Operation 80 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%row_0 = phi i32 [ %row_cast, %.preheader.preheader ], [ %row_7, %.reset ]"   --->   Operation 81 'phi' 'row_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_1/forw_back_LTL.c:35]   --->   Operation 82 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_11)   --->   "%shl_ln36 = shl i32 %col_0, 5" [f_b_1/forw_back_LTL.c:36]   --->   Operation 83 'shl' 'shl_ln36' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_11)   --->   "%shl_ln36_17 = shl i32 %col_0, 1" [f_b_1/forw_back_LTL.c:36]   --->   Operation 84 'shl' 'shl_ln36_17' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln36_11 = sub i32 %shl_ln36, %shl_ln36_17" [f_b_1/forw_back_LTL.c:36]   --->   Operation 85 'sub' 'sub_ln36_11' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (1.20ns)   --->   "%sub_ln36 = sub nsw i32 %col_0, %zext_ln31" [f_b_1/forw_back_LTL.c:36]   --->   Operation 86 'sub' 'sub_ln36' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_12)   --->   "%shl_ln36_18 = shl i32 %sub_ln36, 2" [f_b_1/forw_back_LTL.c:36]   --->   Operation 87 'shl' 'shl_ln36_18' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln36_12 = sub i32 %shl_ln36_18, %sub_ln36" [f_b_1/forw_back_LTL.c:36]   --->   Operation 88 'sub' 'sub_ln36_12' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (1.48ns)   --->   "%icmp_ln34 = icmp eq i64 %indvar_flatten, %mul_ln33" [f_b_1/forw_back_LTL.c:34]   --->   Operation 89 'icmp' 'icmp_ln34' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (1.47ns)   --->   "%add_ln34 = add i64 1, %indvar_flatten" [f_b_1/forw_back_LTL.c:34]   --->   Operation 90 'add' 'add_ln34' <Predicate = true> <Delay = 1.47> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "br i1 %icmp_ln34, label %2, label %.reset" [f_b_1/forw_back_LTL.c:34]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 92 [1/1] (1.20ns)   --->   "%col_9 = add nsw i32 1, %col_0" [f_b_1/forw_back_LTL.c:34]   --->   Operation 92 'add' 'col_9' <Predicate = (!icmp_ln34)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (1.11ns)   --->   "%icmp_ln35 = icmp slt i32 %row_0, %zext_ln35" [f_b_1/forw_back_LTL.c:35]   --->   Operation 93 'icmp' 'icmp_ln35' <Predicate = (!icmp_ln34)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (0.52ns)   --->   "%select_ln35 = select i1 %icmp_ln35, i32 %row_0, i32 %row_cast" [f_b_1/forw_back_LTL.c:35]   --->   Operation 94 'select' 'select_ln35' <Predicate = (!icmp_ln34)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_17)   --->   "%shl_ln36_19 = shl i32 %col_9, 5" [f_b_1/forw_back_LTL.c:36]   --->   Operation 95 'shl' 'shl_ln36_19' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_17)   --->   "%shl_ln36_20 = shl i32 %col_9, 1" [f_b_1/forw_back_LTL.c:36]   --->   Operation 96 'shl' 'shl_ln36_20' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln36_17 = sub i32 %shl_ln36_19, %shl_ln36_20" [f_b_1/forw_back_LTL.c:36]   --->   Operation 97 'sub' 'sub_ln36_17' <Predicate = (!icmp_ln34)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node add_ln36)   --->   "%select_ln35_9 = select i1 %icmp_ln35, i32 %sub_ln36_11, i32 %sub_ln36_17" [f_b_1/forw_back_LTL.c:35]   --->   Operation 98 'select' 'select_ln35_9' <Predicate = (!icmp_ln34)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (1.20ns)   --->   "%sub_ln36_18 = sub nsw i32 %col_9, %zext_ln31" [f_b_1/forw_back_LTL.c:36]   --->   Operation 99 'sub' 'sub_ln36_18' <Predicate = (!icmp_ln34)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node sub_ln36_19)   --->   "%shl_ln36_21 = shl i32 %sub_ln36_18, 2" [f_b_1/forw_back_LTL.c:36]   --->   Operation 100 'shl' 'shl_ln36_21' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln36_19 = sub i32 %shl_ln36_21, %sub_ln36_18" [f_b_1/forw_back_LTL.c:36]   --->   Operation 101 'sub' 'sub_ln36_19' <Predicate = (!icmp_ln34)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (0.52ns)   --->   "%select_ln35_10 = select i1 %icmp_ln35, i32 %sub_ln36_12, i32 %sub_ln36_19" [f_b_1/forw_back_LTL.c:35]   --->   Operation 102 'select' 'select_ln35_10' <Predicate = (!icmp_ln34)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln35 = sub i32 %select_ln35_10, %row_cast" [f_b_1/forw_back_LTL.c:35]   --->   Operation 103 'sub' 'sub_ln35' <Predicate = (!icmp_ln34)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 104 [1/1] (0.52ns)   --->   "%select_ln34 = select i1 %icmp_ln35, i32 %col_0, i32 %col_9" [f_b_1/forw_back_LTL.c:34]   --->   Operation 104 'select' 'select_ln34' <Predicate = (!icmp_ln34)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln36 = add nsw i32 %select_ln35, %select_ln35_9" [f_b_1/forw_back_LTL.c:36]   --->   Operation 105 'add' 'add_ln36' <Predicate = (!icmp_ln34)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (0.00ns)   --->   "%sext_ln36 = sext i32 %add_ln36 to i64" [f_b_1/forw_back_LTL.c:36]   --->   Operation 106 'sext' 'sext_ln36' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 107 [1/1] (0.00ns)   --->   "%input_matrix_addr = getelementptr [900 x float]* %input_matrix, i64 0, i64 %sext_ln36" [f_b_1/forw_back_LTL.c:36]   --->   Operation 107 'getelementptr' 'input_matrix_addr' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 108 [2/2] (1.35ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:36]   --->   Operation 108 'load' 'input_matrix_load' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_3 : Operation 109 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln36_2 = add i32 %sub_ln35, %select_ln35" [f_b_1/forw_back_LTL.c:36]   --->   Operation 109 'add' 'add_ln36_2' <Predicate = (!icmp_ln34)> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 110 [1/1] (0.00ns)   --->   "%sext_ln36_1 = sext i32 %add_ln36_2 to i64" [f_b_1/forw_back_LTL.c:36]   --->   Operation 110 'sext' 'sext_ln36_1' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 111 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [9 x float]* %kernel, i64 0, i64 %sext_ln36_1" [f_b_1/forw_back_LTL.c:36]   --->   Operation 111 'getelementptr' 'kernel_addr' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_3 : Operation 112 [2/2] (0.79ns)   --->   "%kernel_load = load float* %kernel_addr, align 4" [f_b_1/forw_back_LTL.c:36]   --->   Operation 112 'load' 'kernel_load' <Predicate = (!icmp_ln34)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>

State 4 <SV = 3> <Delay = 1.35>
ST_4 : Operation 113 [1/2] (1.35ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:36]   --->   Operation 113 'load' 'input_matrix_load' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_4 : Operation 114 [1/2] (0.79ns)   --->   "%kernel_load = load float* %kernel_addr, align 4" [f_b_1/forw_back_LTL.c:36]   --->   Operation 114 'load' 'kernel_load' <Predicate = (!icmp_ln34)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>

State 5 <SV = 4> <Delay = 8.28>
ST_5 : Operation 115 [3/3] (8.28ns)   --->   "%tmp = fmul float %input_matrix_load, %kernel_load" [f_b_1/forw_back_LTL.c:36]   --->   Operation 115 'fmul' 'tmp' <Predicate = (!icmp_ln34)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.28>
ST_6 : Operation 116 [2/3] (8.28ns)   --->   "%tmp = fmul float %input_matrix_load, %kernel_load" [f_b_1/forw_back_LTL.c:36]   --->   Operation 116 'fmul' 'tmp' <Predicate = (!icmp_ln34)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 117 [1/1] (1.20ns)   --->   "%row_7 = add nsw i32 1, %select_ln35" [f_b_1/forw_back_LTL.c:35]   --->   Operation 117 'add' 'row_7' <Predicate = (!icmp_ln34)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.28>
ST_7 : Operation 118 [1/3] (8.28ns)   --->   "%tmp = fmul float %input_matrix_load, %kernel_load" [f_b_1/forw_back_LTL.c:36]   --->   Operation 118 'fmul' 'tmp' <Predicate = (!icmp_ln34)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.71>
ST_8 : Operation 119 [4/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_1/forw_back_LTL.c:36]   --->   Operation 119 'fadd' 'tmp_s' <Predicate = (!icmp_ln34)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.71>
ST_9 : Operation 120 [3/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_1/forw_back_LTL.c:36]   --->   Operation 120 'fadd' 'tmp_s' <Predicate = (!icmp_ln34)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.71>
ST_10 : Operation 121 [2/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_1/forw_back_LTL.c:36]   --->   Operation 121 'fadd' 'tmp_s' <Predicate = (!icmp_ln34)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.71>
ST_11 : Operation 122 [1/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_1/forw_back_LTL.c:36]   --->   Operation 122 'fadd' 'tmp_s' <Predicate = (!icmp_ln34)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 1.35>
ST_12 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_1/forw_back_LTL.c:35]   --->   Operation 123 'specpipeline' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_12 : Operation 124 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([16 x i8]* @Conv2d_label0_L_str)"   --->   Operation 124 'specloopname' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_12 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_1/forw_back_LTL.c:35]   --->   Operation 125 'specpipeline' <Predicate = (!icmp_ln34)> <Delay = 0.00>
ST_12 : Operation 126 [1/1] (1.35ns)   --->   "store float %tmp_s, float* %out_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:36]   --->   Operation 126 'store' <Predicate = (!icmp_ln34)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 784> <RAM>
ST_12 : Operation 127 [1/1] (0.00ns)   --->   "br label %1" [f_b_1/forw_back_LTL.c:35]   --->   Operation 127 'br' <Predicate = (!icmp_ln34)> <Delay = 0.00>

State 13 <SV = 3> <Delay = 1.20>
ST_13 : Operation 128 [1/1] (0.87ns)   --->   "%j = add i5 %select_ln31_41, 1" [f_b_1/forw_back_LTL.c:32]   --->   Operation 128 'add' 'j' <Predicate = true> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 129 [1/1] (1.20ns)   --->   "%add_ln32_20 = add i32 %select_ln31_40, 1" [f_b_1/forw_back_LTL.c:32]   --->   Operation 129 'add' 'add_ln32_20' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 130 [1/1] (1.20ns)   --->   "%add_ln32_21 = add i32 %select_ln31_39, 1" [f_b_1/forw_back_LTL.c:32]   --->   Operation 130 'add' 'add_ln32_21' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (1.20ns)   --->   "%add_ln32_22 = add i32 %select_ln31, -1" [f_b_1/forw_back_LTL.c:32]   --->   Operation 131 'add' 'add_ln32_22' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 132 [1/1] (0.00ns)   --->   "br label %.preheader" [f_b_1/forw_back_LTL.c:32]   --->   Operation 132 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten42', f_b_1/forw_back_LTL.c:31) with incoming values : ('add_ln31', f_b_1/forw_back_LTL.c:31) [7]  (0.755 ns)

 <State 2>: 7.92ns
The critical path consists of the following:
	'phi' operation ('phi_ln31_5', f_b_1/forw_back_LTL.c:31) with incoming values : ('select_ln31_47', f_b_1/forw_back_LTL.c:31) [9]  (0 ns)
	'add' operation ('add_ln31_25', f_b_1/forw_back_LTL.c:31) [27]  (1.2 ns)
	'icmp' operation ('icmp_ln31_8', f_b_1/forw_back_LTL.c:31) [35]  (1.11 ns)
	'select' operation ('select_ln31_42', f_b_1/forw_back_LTL.c:31) [36]  (0 ns)
	'add' operation ('add_ln31_27', f_b_1/forw_back_LTL.c:31) [37]  (1.2 ns)
	'select' operation ('select_ln31_43', f_b_1/forw_back_LTL.c:31) [41]  (0.525 ns)
	'mul' operation ('mul_ln33', f_b_1/forw_back_LTL.c:33) [67]  (3.88 ns)

 <State 3>: 5.81ns
The critical path consists of the following:
	'phi' operation ('col_0', f_b_1/forw_back_LTL.c:31) with incoming values : ('zext_ln31', f_b_1/forw_back_LTL.c:31) ('select_ln34', f_b_1/forw_back_LTL.c:34) [71]  (0 ns)
	'add' operation ('col', f_b_1/forw_back_LTL.c:34) [85]  (1.2 ns)
	'sub' operation ('sub_ln36_18', f_b_1/forw_back_LTL.c:36) [95]  (1.2 ns)
	'sub' operation ('sub_ln36_19', f_b_1/forw_back_LTL.c:36) [97]  (1.2 ns)
	'select' operation ('select_ln35_10', f_b_1/forw_back_LTL.c:35) [98]  (0.525 ns)
	'sub' operation ('sub_ln35', f_b_1/forw_back_LTL.c:35) [99]  (0 ns)
	'add' operation ('add_ln36_2', f_b_1/forw_back_LTL.c:36) [105]  (0.889 ns)
	'getelementptr' operation ('kernel_addr', f_b_1/forw_back_LTL.c:36) [107]  (0 ns)
	'load' operation ('kernel_load', f_b_1/forw_back_LTL.c:36) on array 'kernel' [108]  (0.79 ns)

 <State 4>: 1.35ns
The critical path consists of the following:
	'load' operation ('input_matrix_load', f_b_1/forw_back_LTL.c:36) on array 'input_matrix' [104]  (1.35 ns)

 <State 5>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp', f_b_1/forw_back_LTL.c:36) [109]  (8.29 ns)

 <State 6>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp', f_b_1/forw_back_LTL.c:36) [109]  (8.29 ns)

 <State 7>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp', f_b_1/forw_back_LTL.c:36) [109]  (8.29 ns)

 <State 8>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_1/forw_back_LTL.c:36) [110]  (7.72 ns)

 <State 9>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_1/forw_back_LTL.c:36) [110]  (7.72 ns)

 <State 10>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_1/forw_back_LTL.c:36) [110]  (7.72 ns)

 <State 11>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_1/forw_back_LTL.c:36) [110]  (7.72 ns)

 <State 12>: 1.35ns
The critical path consists of the following:
	'store' operation ('store_ln36', f_b_1/forw_back_LTL.c:36) of variable 'tmp_s', f_b_1/forw_back_LTL.c:36 on array 'out_matrix' [111]  (1.35 ns)

 <State 13>: 1.2ns
The critical path consists of the following:
	'add' operation ('add_ln32_20', f_b_1/forw_back_LTL.c:32) [116]  (1.2 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
