

================================================================
== Vivado HLS Report for 'OverturnKernel'
================================================================
* Date:           Mon Oct 31 21:58:55 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        f_b_3
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     1.668|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   25|   25|   25|   25|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |         Loop Name        | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1                  |   24|   24|         8|          -|          -|     3|    no    |
        | + OverturnKernel_label4  |    6|    6|         2|          -|          -|     3|    no    |
        +--------------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([8100 x float]* @fc_hidden_layer2, [1 x i8]* @p_str, [14 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)" [f_b_1/forw_back_LTL.c:83]   --->   Operation 5 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.75ns)   --->   "br label %.loopexit" [f_b_1/forw_back_LTL.c:83]   --->   Operation 6 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 1.34>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%i_0 = phi i2 [ 0, %0 ], [ %i, %.loopexit.loopexit ]"   --->   Operation 7 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%zext_ln83 = zext i2 %i_0 to i5" [f_b_1/forw_back_LTL.c:83]   --->   Operation 8 'zext' 'zext_ln83' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.51ns)   --->   "%icmp_ln83 = icmp eq i2 %i_0, -1" [f_b_1/forw_back_LTL.c:83]   --->   Operation 9 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 0.51> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.51> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 10 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.62ns)   --->   "%i = add i2 %i_0, 1" [f_b_1/forw_back_LTL.c:83]   --->   Operation 11 'add' 'i' <Predicate = true> <Delay = 0.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "br i1 %icmp_ln83, label %1, label %.preheader.preheader" [f_b_1/forw_back_LTL.c:83]   --->   Operation 12 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i_0, i2 0)" [f_b_1/forw_back_LTL.c:85]   --->   Operation 13 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln85_2 = zext i4 %shl_ln to i5" [f_b_1/forw_back_LTL.c:85]   --->   Operation 14 'zext' 'zext_ln85_2' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.86ns)   --->   "%sub_ln85_1 = sub i5 %zext_ln85_2, %zext_ln83" [f_b_1/forw_back_LTL.c:85]   --->   Operation 15 'sub' 'sub_ln85_1' <Predicate = (!icmp_ln83)> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.62ns)   --->   "%sub_ln85 = sub i2 -2, %i_0" [f_b_1/forw_back_LTL.c:85]   --->   Operation 16 'sub' 'sub_ln85' <Predicate = (!icmp_ln83)> <Delay = 0.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln85_3 = zext i2 %sub_ln85 to i5" [f_b_1/forw_back_LTL.c:85]   --->   Operation 17 'zext' 'zext_ln85_3' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%shl_ln85_1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %sub_ln85, i2 0)" [f_b_1/forw_back_LTL.c:85]   --->   Operation 18 'bitconcatenate' 'shl_ln85_1' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln85_4 = zext i4 %shl_ln85_1 to i5" [f_b_1/forw_back_LTL.c:85]   --->   Operation 19 'zext' 'zext_ln85_4' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln85_2 = sub i5 %zext_ln85_4, %zext_ln85_3" [f_b_1/forw_back_LTL.c:85]   --->   Operation 20 'sub' 'sub_ln85_2' <Predicate = (!icmp_ln83)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.35> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 21 [1/1] (0.71ns) (root node of TernaryAdder)   --->   "%add_ln85_1 = add i5 %sub_ln85_2, 2" [f_b_1/forw_back_LTL.c:85]   --->   Operation 21 'add' 'add_ln85_1' <Predicate = (!icmp_ln83)> <Delay = 0.71> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.35> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 22 [1/1] (0.75ns)   --->   "br label %.preheader" [f_b_1/forw_back_LTL.c:84]   --->   Operation 22 'br' <Predicate = (!icmp_ln83)> <Delay = 0.75>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "ret void" [f_b_1/forw_back_LTL.c:86]   --->   Operation 23 'ret' <Predicate = (icmp_ln83)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.66>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%j_0 = phi i2 [ %j, %hls_label_0 ], [ 0, %.preheader.preheader ]"   --->   Operation 24 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln84 = zext i2 %j_0 to i5" [f_b_1/forw_back_LTL.c:84]   --->   Operation 25 'zext' 'zext_ln84' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.51ns)   --->   "%icmp_ln84 = icmp eq i2 %j_0, -1" [f_b_1/forw_back_LTL.c:84]   --->   Operation 26 'icmp' 'icmp_ln84' <Predicate = true> <Delay = 0.51> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.51> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%empty_114 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 27 'speclooptripcount' 'empty_114' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.62ns)   --->   "%j = add i2 %j_0, 1" [f_b_1/forw_back_LTL.c:84]   --->   Operation 28 'add' 'j' <Predicate = true> <Delay = 0.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "br i1 %icmp_ln84, label %.loopexit.loopexit, label %hls_label_0" [f_b_1/forw_back_LTL.c:84]   --->   Operation 29 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.87ns)   --->   "%add_ln85 = add i5 %sub_ln85_1, %zext_ln84" [f_b_1/forw_back_LTL.c:85]   --->   Operation 30 'add' 'add_ln85' <Predicate = (!icmp_ln84)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%sext_ln85 = sext i5 %add_ln85 to i32" [f_b_1/forw_back_LTL.c:85]   --->   Operation 31 'sext' 'sext_ln85' <Predicate = (!icmp_ln84)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln85 = zext i32 %sext_ln85 to i64" [f_b_1/forw_back_LTL.c:85]   --->   Operation 32 'zext' 'zext_ln85' <Predicate = (!icmp_ln84)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%input_matrix_addr = getelementptr [9 x float]* %input_matrix, i64 0, i64 %zext_ln85" [f_b_1/forw_back_LTL.c:85]   --->   Operation 33 'getelementptr' 'input_matrix_addr' <Predicate = (!icmp_ln84)> <Delay = 0.00>
ST_3 : Operation 34 [2/2] (0.79ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:85]   --->   Operation 34 'load' 'input_matrix_load' <Predicate = (!icmp_ln84)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 35 [1/1] (0.87ns)   --->   "%sub_ln85_3 = sub i5 %add_ln85_1, %zext_ln84" [f_b_1/forw_back_LTL.c:85]   --->   Operation 35 'sub' 'sub_ln85_3' <Predicate = (!icmp_ln84)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 36 'br' <Predicate = (icmp_ln84)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 1.58>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [f_b_1/forw_back_LTL.c:85]   --->   Operation 37 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([22 x i8]* @p_str5) nounwind" [f_b_1/forw_back_LTL.c:85]   --->   Operation 38 'specloopname' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/2] (0.79ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:85]   --->   Operation 39 'load' 'input_matrix_load' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%sext_ln85_1 = sext i5 %sub_ln85_3 to i32" [f_b_1/forw_back_LTL.c:85]   --->   Operation 40 'sext' 'sext_ln85_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln85_1 = zext i32 %sext_ln85_1 to i64" [f_b_1/forw_back_LTL.c:85]   --->   Operation 41 'zext' 'zext_ln85_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%output_matrix_addr = getelementptr [9 x float]* %output_matrix, i64 0, i64 %zext_ln85_1" [f_b_1/forw_back_LTL.c:85]   --->   Operation 42 'getelementptr' 'output_matrix_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.79ns)   --->   "store float %input_matrix_load, float* %output_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:85]   --->   Operation 43 'store' <Predicate = true> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%empty_115 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)" [f_b_1/forw_back_LTL.c:85]   --->   Operation 44 'specregionend' 'empty_115' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "br label %.preheader" [f_b_1/forw_back_LTL.c:84]   --->   Operation 45 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', f_b_1/forw_back_LTL.c:83) [6]  (0.755 ns)

 <State 2>: 1.34ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', f_b_1/forw_back_LTL.c:83) [6]  (0 ns)
	'sub' operation ('sub_ln85', f_b_1/forw_back_LTL.c:85) [16]  (0.625 ns)
	'sub' operation ('sub_ln85_2', f_b_1/forw_back_LTL.c:85) [20]  (0 ns)
	'add' operation ('add_ln85_1', f_b_1/forw_back_LTL.c:85) [21]  (0.716 ns)

 <State 3>: 1.67ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', f_b_1/forw_back_LTL.c:84) [24]  (0 ns)
	'add' operation ('add_ln85', f_b_1/forw_back_LTL.c:85) [33]  (0.878 ns)
	'getelementptr' operation ('input_matrix_addr', f_b_1/forw_back_LTL.c:85) [36]  (0 ns)
	'load' operation ('input_matrix_load', f_b_1/forw_back_LTL.c:85) on array 'input_matrix' [37]  (0.79 ns)

 <State 4>: 1.58ns
The critical path consists of the following:
	'load' operation ('input_matrix_load', f_b_1/forw_back_LTL.c:85) on array 'input_matrix' [37]  (0.79 ns)
	'store' operation ('store_ln85', f_b_1/forw_back_LTL.c:85) of variable 'input_matrix_load', f_b_1/forw_back_LTL.c:85 on array 'output_matrix' [42]  (0.79 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
