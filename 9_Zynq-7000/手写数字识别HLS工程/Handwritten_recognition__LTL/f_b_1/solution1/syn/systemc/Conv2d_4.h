// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv2d_4_HH_
#define _Conv2d_4_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "forw_back_fadd_32bkb.h"
#include "forw_back_fmul_32cud.h"
#include "forw_back_mac_mullbW.h"

namespace ap_rtl {

struct Conv2d_4 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<4> > out_matrix_address0;
    sc_out< sc_logic > out_matrix_ce0;
    sc_out< sc_logic > out_matrix_we0;
    sc_out< sc_lv<32> > out_matrix_d0;
    sc_out< sc_lv<10> > conv_out_2_address0;
    sc_out< sc_logic > conv_out_2_ce0;
    sc_in< sc_lv<32> > conv_out_2_q0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Conv2d_4(sc_module_name name);
    SC_HAS_PROCESS(Conv2d_4);

    ~Conv2d_4();

    sc_trace_file* mVcdFile;

    forw_back_fadd_32bkb<1,4,32,32,32>* forw_back_fadd_32bkb_U53;
    forw_back_fmul_32cud<1,3,32,32,32>* forw_back_fmul_32cud_U54;
    forw_back_mac_mullbW<1,1,3,6,3,7>* forw_back_mac_mullbW_U55;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > indvar_flatten_reg_146;
    sc_signal< sc_lv<3> > col_0_reg_157;
    sc_signal< sc_lv<32> > empty_reg_166;
    sc_signal< sc_lv<3> > row_0_reg_178;
    sc_signal< sc_lv<1> > icmp_ln31_fu_219_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > add_ln31_fu_225_p2;
    sc_signal< sc_lv<4> > add_ln31_reg_508;
    sc_signal< sc_lv<3> > indvars_iv_mid2_fu_243_p3;
    sc_signal< sc_lv<3> > indvars_iv_mid2_reg_513;
    sc_signal< sc_lv<2> > row_mid2_fu_251_p3;
    sc_signal< sc_lv<2> > row_mid2_reg_519;
    sc_signal< sc_lv<2> > col_cast7_mid2_v_fu_259_p3;
    sc_signal< sc_lv<2> > col_cast7_mid2_v_reg_524;
    sc_signal< sc_lv<3> > col_cast7_mid2_fu_267_p1;
    sc_signal< sc_lv<4> > col_cast_mid2_fu_275_p1;
    sc_signal< sc_lv<4> > col_cast_mid2_reg_534;
    sc_signal< sc_lv<3> > row_cast4_fu_309_p1;
    sc_signal< sc_lv<3> > row_cast4_reg_540;
    sc_signal< sc_lv<9> > row_cast_fu_313_p1;
    sc_signal< sc_lv<9> > row_cast_reg_546;
    sc_signal< sc_lv<4> > out_matrix_addr_reg_551;
    sc_signal< sc_lv<1> > icmp_ln34_fu_367_p2;
    sc_signal< sc_lv<1> > icmp_ln34_reg_556;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln34_reg_556_pp0_iter1_reg;
    sc_signal< sc_lv<4> > add_ln34_fu_373_p2;
    sc_signal< sc_lv<4> > add_ln34_reg_560;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > select_ln36_fu_390_p3;
    sc_signal< sc_lv<3> > select_ln36_reg_565;
    sc_signal< sc_lv<3> > select_ln36_1_fu_401_p3;
    sc_signal< sc_lv<3> > select_ln36_1_reg_570;
    sc_signal< sc_lv<32> > conv_out_2_load_reg_585;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > kernel_load_reg_590;
    sc_signal< sc_lv<3> > row_4_fu_480_p2;
    sc_signal< sc_lv<3> > row_4_reg_595;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > grp_fu_193_p2;
    sc_signal< sc_lv<32> > tmp_reg_600;
    sc_signal< sc_lv<32> > grp_fu_187_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<2> > j_fu_485_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<3> > add_ln32_fu_490_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< sc_lv<4> > indvar_flatten7_reg_102;
    sc_signal< sc_lv<2> > col_reg_113;
    sc_signal< sc_lv<3> > indvars_iv_reg_124;
    sc_signal< sc_lv<2> > row_reg_135;
    sc_signal< sc_lv<4> > ap_phi_mux_indvar_flatten_phi_fu_150_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<3> > ap_phi_mux_col_0_phi_fu_160_p4;
    sc_signal< sc_lv<3> > ap_phi_mux_row_0_phi_fu_181_p4;
    sc_signal< sc_lv<64> > zext_ln33_fu_327_p1;
    sc_signal< sc_lv<64> > zext_ln36_fu_465_p1;
    sc_signal< sc_lv<64> > sext_ln36_1_fu_475_p1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<4> > shl_ln_fu_201_p3;
    sc_signal< sc_lv<5> > zext_ln33_6_fu_209_p1;
    sc_signal< sc_lv<5> > col_cast6_fu_197_p1;
    sc_signal< sc_lv<1> > icmp_ln32_fu_237_p2;
    sc_signal< sc_lv<2> > i_fu_231_p2;
    sc_signal< sc_lv<4> > shl_ln33_mid1_fu_279_p3;
    sc_signal< sc_lv<5> > zext_ln33_13_fu_287_p1;
    sc_signal< sc_lv<5> > col_cast6_mid1_fu_271_p1;
    sc_signal< sc_lv<5> > sub_ln33_3_fu_291_p2;
    sc_signal< sc_lv<5> > sub_ln33_fu_213_p2;
    sc_signal< sc_lv<5> > sub_ln33_mid2_fu_297_p3;
    sc_signal< sc_lv<5> > row_cast5_fu_305_p1;
    sc_signal< sc_lv<5> > add_ln33_fu_317_p2;
    sc_signal< sc_lv<32> > sext_ln33_fu_323_p1;
    sc_signal< sc_lv<4> > col_0_cast_fu_332_p1;
    sc_signal< sc_lv<4> > sub_ln36_fu_336_p2;
    sc_signal< sc_lv<7> > shl_ln36_5_fu_349_p3;
    sc_signal< sc_lv<9> > shl_ln6_fu_341_p3;
    sc_signal< sc_lv<9> > sext_ln36_fu_357_p1;
    sc_signal< sc_lv<1> > icmp_ln35_fu_385_p2;
    sc_signal< sc_lv<3> > col_6_fu_379_p2;
    sc_signal< sc_lv<4> > col_0_cast_mid1_fu_397_p1;
    sc_signal< sc_lv<4> > sub_ln36_11_fu_413_p2;
    sc_signal< sc_lv<7> > shl_ln36_5_mid1_fu_426_p3;
    sc_signal< sc_lv<9> > shl_ln36_mid1_fu_418_p3;
    sc_signal< sc_lv<9> > sext_ln36_2_fu_434_p1;
    sc_signal< sc_lv<9> > sub_ln36_12_fu_438_p2;
    sc_signal< sc_lv<9> > sub_ln36_7_fu_361_p2;
    sc_signal< sc_lv<9> > select_ln36_2_fu_444_p3;
    sc_signal< sc_lv<7> > grp_fu_495_p3;
    sc_signal< sc_lv<9> > zext_ln36_2_fu_457_p1;
    sc_signal< sc_lv<9> > sub_ln36_13_fu_452_p2;
    sc_signal< sc_lv<9> > add_ln36_2_fu_469_p2;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<3> > grp_fu_495_p0;
    sc_signal< sc_lv<6> > grp_fu_495_p1;
    sc_signal< sc_lv<3> > grp_fu_495_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<7> > grp_fu_495_p00;
    sc_signal< sc_lv<7> > grp_fu_495_p20;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<3> ap_const_lv3_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<7> ap_const_lv7_1A;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln31_fu_225_p2();
    void thread_add_ln32_fu_490_p2();
    void thread_add_ln33_fu_317_p2();
    void thread_add_ln34_fu_373_p2();
    void thread_add_ln36_2_fu_469_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state10_pp0_stage3_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_0_phi_fu_160_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_150_p4();
    void thread_ap_phi_mux_row_0_phi_fu_181_p4();
    void thread_ap_ready();
    void thread_col_0_cast_fu_332_p1();
    void thread_col_0_cast_mid1_fu_397_p1();
    void thread_col_6_fu_379_p2();
    void thread_col_cast6_fu_197_p1();
    void thread_col_cast6_mid1_fu_271_p1();
    void thread_col_cast7_mid2_fu_267_p1();
    void thread_col_cast7_mid2_v_fu_259_p3();
    void thread_col_cast_mid2_fu_275_p1();
    void thread_conv_out_2_address0();
    void thread_conv_out_2_ce0();
    void thread_grp_fu_495_p0();
    void thread_grp_fu_495_p00();
    void thread_grp_fu_495_p1();
    void thread_grp_fu_495_p2();
    void thread_grp_fu_495_p20();
    void thread_i_fu_231_p2();
    void thread_icmp_ln31_fu_219_p2();
    void thread_icmp_ln32_fu_237_p2();
    void thread_icmp_ln34_fu_367_p2();
    void thread_icmp_ln35_fu_385_p2();
    void thread_indvars_iv_mid2_fu_243_p3();
    void thread_j_fu_485_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_out_matrix_address0();
    void thread_out_matrix_ce0();
    void thread_out_matrix_d0();
    void thread_out_matrix_we0();
    void thread_row_4_fu_480_p2();
    void thread_row_cast4_fu_309_p1();
    void thread_row_cast5_fu_305_p1();
    void thread_row_cast_fu_313_p1();
    void thread_row_mid2_fu_251_p3();
    void thread_select_ln36_1_fu_401_p3();
    void thread_select_ln36_2_fu_444_p3();
    void thread_select_ln36_fu_390_p3();
    void thread_sext_ln33_fu_323_p1();
    void thread_sext_ln36_1_fu_475_p1();
    void thread_sext_ln36_2_fu_434_p1();
    void thread_sext_ln36_fu_357_p1();
    void thread_shl_ln33_mid1_fu_279_p3();
    void thread_shl_ln36_5_fu_349_p3();
    void thread_shl_ln36_5_mid1_fu_426_p3();
    void thread_shl_ln36_mid1_fu_418_p3();
    void thread_shl_ln6_fu_341_p3();
    void thread_shl_ln_fu_201_p3();
    void thread_sub_ln33_3_fu_291_p2();
    void thread_sub_ln33_fu_213_p2();
    void thread_sub_ln33_mid2_fu_297_p3();
    void thread_sub_ln36_11_fu_413_p2();
    void thread_sub_ln36_12_fu_438_p2();
    void thread_sub_ln36_13_fu_452_p2();
    void thread_sub_ln36_7_fu_361_p2();
    void thread_sub_ln36_fu_336_p2();
    void thread_zext_ln33_13_fu_287_p1();
    void thread_zext_ln33_6_fu_209_p1();
    void thread_zext_ln33_fu_327_p1();
    void thread_zext_ln36_2_fu_457_p1();
    void thread_zext_ln36_fu_465_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
