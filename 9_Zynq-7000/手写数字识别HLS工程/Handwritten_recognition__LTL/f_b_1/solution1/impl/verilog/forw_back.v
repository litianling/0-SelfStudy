// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="forw_back,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=10.117300,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=419,HLS_SYN_DSP=134,HLS_SYN_FF=21212,HLS_SYN_LUT=36180,HLS_VERSION=2019_1}" *)

module forw_back (
        ap_clk,
        ap_rst_n,
        m_axi_data_AWVALID,
        m_axi_data_AWREADY,
        m_axi_data_AWADDR,
        m_axi_data_AWID,
        m_axi_data_AWLEN,
        m_axi_data_AWSIZE,
        m_axi_data_AWBURST,
        m_axi_data_AWLOCK,
        m_axi_data_AWCACHE,
        m_axi_data_AWPROT,
        m_axi_data_AWQOS,
        m_axi_data_AWREGION,
        m_axi_data_AWUSER,
        m_axi_data_WVALID,
        m_axi_data_WREADY,
        m_axi_data_WDATA,
        m_axi_data_WSTRB,
        m_axi_data_WLAST,
        m_axi_data_WID,
        m_axi_data_WUSER,
        m_axi_data_ARVALID,
        m_axi_data_ARREADY,
        m_axi_data_ARADDR,
        m_axi_data_ARID,
        m_axi_data_ARLEN,
        m_axi_data_ARSIZE,
        m_axi_data_ARBURST,
        m_axi_data_ARLOCK,
        m_axi_data_ARCACHE,
        m_axi_data_ARPROT,
        m_axi_data_ARQOS,
        m_axi_data_ARREGION,
        m_axi_data_ARUSER,
        m_axi_data_RVALID,
        m_axi_data_RREADY,
        m_axi_data_RDATA,
        m_axi_data_RLAST,
        m_axi_data_RID,
        m_axi_data_RUSER,
        m_axi_data_RRESP,
        m_axi_data_BVALID,
        m_axi_data_BREADY,
        m_axi_data_BRESP,
        m_axi_data_BID,
        m_axi_data_BUSER,
        s_axi_ctrl_AWVALID,
        s_axi_ctrl_AWREADY,
        s_axi_ctrl_AWADDR,
        s_axi_ctrl_WVALID,
        s_axi_ctrl_WREADY,
        s_axi_ctrl_WDATA,
        s_axi_ctrl_WSTRB,
        s_axi_ctrl_ARVALID,
        s_axi_ctrl_ARREADY,
        s_axi_ctrl_ARADDR,
        s_axi_ctrl_RVALID,
        s_axi_ctrl_RREADY,
        s_axi_ctrl_RDATA,
        s_axi_ctrl_RRESP,
        s_axi_ctrl_BVALID,
        s_axi_ctrl_BREADY,
        s_axi_ctrl_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 109'd1;
parameter    ap_ST_fsm_state2 = 109'd2;
parameter    ap_ST_fsm_state3 = 109'd4;
parameter    ap_ST_fsm_state4 = 109'd8;
parameter    ap_ST_fsm_state5 = 109'd16;
parameter    ap_ST_fsm_state6 = 109'd32;
parameter    ap_ST_fsm_state7 = 109'd64;
parameter    ap_ST_fsm_state8 = 109'd128;
parameter    ap_ST_fsm_pp0_stage0 = 109'd256;
parameter    ap_ST_fsm_state12 = 109'd512;
parameter    ap_ST_fsm_state13 = 109'd1024;
parameter    ap_ST_fsm_state14 = 109'd2048;
parameter    ap_ST_fsm_state15 = 109'd4096;
parameter    ap_ST_fsm_state16 = 109'd8192;
parameter    ap_ST_fsm_state17 = 109'd16384;
parameter    ap_ST_fsm_state18 = 109'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 109'd65536;
parameter    ap_ST_fsm_state22 = 109'd131072;
parameter    ap_ST_fsm_state23 = 109'd262144;
parameter    ap_ST_fsm_state24 = 109'd524288;
parameter    ap_ST_fsm_state25 = 109'd1048576;
parameter    ap_ST_fsm_state26 = 109'd2097152;
parameter    ap_ST_fsm_state27 = 109'd4194304;
parameter    ap_ST_fsm_state28 = 109'd8388608;
parameter    ap_ST_fsm_pp2_stage0 = 109'd16777216;
parameter    ap_ST_fsm_state32 = 109'd33554432;
parameter    ap_ST_fsm_state33 = 109'd67108864;
parameter    ap_ST_fsm_state34 = 109'd134217728;
parameter    ap_ST_fsm_state35 = 109'd268435456;
parameter    ap_ST_fsm_state36 = 109'd536870912;
parameter    ap_ST_fsm_state37 = 109'd1073741824;
parameter    ap_ST_fsm_state38 = 109'd2147483648;
parameter    ap_ST_fsm_pp3_stage0 = 109'd4294967296;
parameter    ap_ST_fsm_state42 = 109'd8589934592;
parameter    ap_ST_fsm_state43 = 109'd17179869184;
parameter    ap_ST_fsm_state44 = 109'd34359738368;
parameter    ap_ST_fsm_state45 = 109'd68719476736;
parameter    ap_ST_fsm_state46 = 109'd137438953472;
parameter    ap_ST_fsm_state47 = 109'd274877906944;
parameter    ap_ST_fsm_state48 = 109'd549755813888;
parameter    ap_ST_fsm_pp4_stage0 = 109'd1099511627776;
parameter    ap_ST_fsm_state52 = 109'd2199023255552;
parameter    ap_ST_fsm_state53 = 109'd4398046511104;
parameter    ap_ST_fsm_state54 = 109'd8796093022208;
parameter    ap_ST_fsm_state55 = 109'd17592186044416;
parameter    ap_ST_fsm_state56 = 109'd35184372088832;
parameter    ap_ST_fsm_state57 = 109'd70368744177664;
parameter    ap_ST_fsm_state58 = 109'd140737488355328;
parameter    ap_ST_fsm_pp5_stage0 = 109'd281474976710656;
parameter    ap_ST_fsm_state62 = 109'd562949953421312;
parameter    ap_ST_fsm_state63 = 109'd1125899906842624;
parameter    ap_ST_fsm_state64 = 109'd2251799813685248;
parameter    ap_ST_fsm_state65 = 109'd4503599627370496;
parameter    ap_ST_fsm_state66 = 109'd9007199254740992;
parameter    ap_ST_fsm_state67 = 109'd18014398509481984;
parameter    ap_ST_fsm_state68 = 109'd36028797018963968;
parameter    ap_ST_fsm_pp6_stage0 = 109'd72057594037927936;
parameter    ap_ST_fsm_state72 = 109'd144115188075855872;
parameter    ap_ST_fsm_state73 = 109'd288230376151711744;
parameter    ap_ST_fsm_state74 = 109'd576460752303423488;
parameter    ap_ST_fsm_state75 = 109'd1152921504606846976;
parameter    ap_ST_fsm_pp7_stage0 = 109'd2305843009213693952;
parameter    ap_ST_fsm_state79 = 109'd4611686018427387904;
parameter    ap_ST_fsm_state80 = 109'd9223372036854775808;
parameter    ap_ST_fsm_state81 = 109'd18446744073709551616;
parameter    ap_ST_fsm_state82 = 109'd36893488147419103232;
parameter    ap_ST_fsm_state83 = 109'd73786976294838206464;
parameter    ap_ST_fsm_pp8_stage0 = 109'd147573952589676412928;
parameter    ap_ST_fsm_state87 = 109'd295147905179352825856;
parameter    ap_ST_fsm_state88 = 109'd590295810358705651712;
parameter    ap_ST_fsm_state89 = 109'd1180591620717411303424;
parameter    ap_ST_fsm_state90 = 109'd2361183241434822606848;
parameter    ap_ST_fsm_state91 = 109'd4722366482869645213696;
parameter    ap_ST_fsm_pp9_stage0 = 109'd9444732965739290427392;
parameter    ap_ST_fsm_state95 = 109'd18889465931478580854784;
parameter    ap_ST_fsm_state96 = 109'd37778931862957161709568;
parameter    ap_ST_fsm_state97 = 109'd75557863725914323419136;
parameter    ap_ST_fsm_state98 = 109'd151115727451828646838272;
parameter    ap_ST_fsm_state99 = 109'd302231454903657293676544;
parameter    ap_ST_fsm_pp10_stage0 = 109'd604462909807314587353088;
parameter    ap_ST_fsm_state103 = 109'd1208925819614629174706176;
parameter    ap_ST_fsm_state104 = 109'd2417851639229258349412352;
parameter    ap_ST_fsm_state105 = 109'd4835703278458516698824704;
parameter    ap_ST_fsm_state106 = 109'd9671406556917033397649408;
parameter    ap_ST_fsm_state107 = 109'd19342813113834066795298816;
parameter    ap_ST_fsm_pp11_stage0 = 109'd38685626227668133590597632;
parameter    ap_ST_fsm_state111 = 109'd77371252455336267181195264;
parameter    ap_ST_fsm_state112 = 109'd154742504910672534362390528;
parameter    ap_ST_fsm_state113 = 109'd309485009821345068724781056;
parameter    ap_ST_fsm_state114 = 109'd618970019642690137449562112;
parameter    ap_ST_fsm_state115 = 109'd1237940039285380274899124224;
parameter    ap_ST_fsm_pp12_stage0 = 109'd2475880078570760549798248448;
parameter    ap_ST_fsm_state119 = 109'd4951760157141521099596496896;
parameter    ap_ST_fsm_state120 = 109'd9903520314283042199192993792;
parameter    ap_ST_fsm_state121 = 109'd19807040628566084398385987584;
parameter    ap_ST_fsm_state122 = 109'd39614081257132168796771975168;
parameter    ap_ST_fsm_state123 = 109'd79228162514264337593543950336;
parameter    ap_ST_fsm_pp13_stage0 = 109'd158456325028528675187087900672;
parameter    ap_ST_fsm_state127 = 109'd316912650057057350374175801344;
parameter    ap_ST_fsm_state128 = 109'd633825300114114700748351602688;
parameter    ap_ST_fsm_state129 = 109'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state130 = 109'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state131 = 109'd5070602400912917605986812821504;
parameter    ap_ST_fsm_pp14_stage0 = 109'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state135 = 109'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state136 = 109'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state137 = 109'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state138 = 109'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state139 = 109'd324518553658426726783156020576256;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_ID_WIDTH = 1;
parameter    C_M_AXI_DATA_ADDR_WIDTH = 32;
parameter    C_M_AXI_DATA_DATA_WIDTH = 32;
parameter    C_M_AXI_DATA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_WUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_RUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_BUSER_WIDTH = 1;
parameter    C_M_AXI_DATA_USER_VALUE = 0;
parameter    C_M_AXI_DATA_PROT_VALUE = 0;
parameter    C_M_AXI_DATA_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_DATA_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_data_AWVALID;
input   m_axi_data_AWREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_AWADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_AWID;
output  [7:0] m_axi_data_AWLEN;
output  [2:0] m_axi_data_AWSIZE;
output  [1:0] m_axi_data_AWBURST;
output  [1:0] m_axi_data_AWLOCK;
output  [3:0] m_axi_data_AWCACHE;
output  [2:0] m_axi_data_AWPROT;
output  [3:0] m_axi_data_AWQOS;
output  [3:0] m_axi_data_AWREGION;
output  [C_M_AXI_DATA_AWUSER_WIDTH - 1:0] m_axi_data_AWUSER;
output   m_axi_data_WVALID;
input   m_axi_data_WREADY;
output  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_WDATA;
output  [C_M_AXI_DATA_WSTRB_WIDTH - 1:0] m_axi_data_WSTRB;
output   m_axi_data_WLAST;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_WID;
output  [C_M_AXI_DATA_WUSER_WIDTH - 1:0] m_axi_data_WUSER;
output   m_axi_data_ARVALID;
input   m_axi_data_ARREADY;
output  [C_M_AXI_DATA_ADDR_WIDTH - 1:0] m_axi_data_ARADDR;
output  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_ARID;
output  [7:0] m_axi_data_ARLEN;
output  [2:0] m_axi_data_ARSIZE;
output  [1:0] m_axi_data_ARBURST;
output  [1:0] m_axi_data_ARLOCK;
output  [3:0] m_axi_data_ARCACHE;
output  [2:0] m_axi_data_ARPROT;
output  [3:0] m_axi_data_ARQOS;
output  [3:0] m_axi_data_ARREGION;
output  [C_M_AXI_DATA_ARUSER_WIDTH - 1:0] m_axi_data_ARUSER;
input   m_axi_data_RVALID;
output   m_axi_data_RREADY;
input  [C_M_AXI_DATA_DATA_WIDTH - 1:0] m_axi_data_RDATA;
input   m_axi_data_RLAST;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_RID;
input  [C_M_AXI_DATA_RUSER_WIDTH - 1:0] m_axi_data_RUSER;
input  [1:0] m_axi_data_RRESP;
input   m_axi_data_BVALID;
output   m_axi_data_BREADY;
input  [1:0] m_axi_data_BRESP;
input  [C_M_AXI_DATA_ID_WIDTH - 1:0] m_axi_data_BID;
input  [C_M_AXI_DATA_BUSER_WIDTH - 1:0] m_axi_data_BUSER;
input   s_axi_ctrl_AWVALID;
output   s_axi_ctrl_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_AWADDR;
input   s_axi_ctrl_WVALID;
output   s_axi_ctrl_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_ctrl_WSTRB;
input   s_axi_ctrl_ARVALID;
output   s_axi_ctrl_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_ctrl_ARADDR;
output   s_axi_ctrl_RVALID;
input   s_axi_ctrl_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_ctrl_RDATA;
output  [1:0] s_axi_ctrl_RRESP;
output   s_axi_ctrl_BVALID;
input   s_axi_ctrl_BREADY;
output  [1:0] s_axi_ctrl_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [108:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] flag;
wire   [31:0] in_r;
wire   [31:0] conv1;
wire   [31:0] conv2;
wire   [31:0] conv3;
wire   [31:0] fc1;
wire   [31:0] fc2;
wire   [31:0] fc3;
wire   [31:0] out_r;
wire   [31:0] label_r;
wire   [31:0] lr;
reg   [9:0] mnist_data_address0;
reg    mnist_data_ce0;
reg    mnist_data_we0;
wire   [31:0] mnist_data_q0;
reg   [3:0] conv_kernel_1_address0;
reg    conv_kernel_1_ce0;
reg    conv_kernel_1_we0;
reg   [31:0] conv_kernel_1_d0;
wire   [31:0] conv_kernel_1_q0;
reg   [3:0] conv_kernel_2_address0;
reg    conv_kernel_2_ce0;
reg    conv_kernel_2_we0;
reg   [31:0] conv_kernel_2_d0;
wire   [31:0] conv_kernel_2_q0;
reg   [3:0] conv_kernel_3_address0;
reg    conv_kernel_3_ce0;
reg    conv_kernel_3_we0;
reg   [31:0] conv_kernel_3_d0;
wire   [31:0] conv_kernel_3_q0;
reg   [16:0] fc_hidden_layer1_address0;
reg    fc_hidden_layer1_ce0;
reg    fc_hidden_layer1_we0;
reg   [31:0] fc_hidden_layer1_d0;
wire   [31:0] fc_hidden_layer1_q0;
reg   [12:0] fc_hidden_layer2_address0;
reg    fc_hidden_layer2_ce0;
wire   [31:0] fc_hidden_layer2_q0;
reg   [12:0] fc_hidden_layer2_address1;
reg    fc_hidden_layer2_ce1;
reg    fc_hidden_layer2_we1;
reg   [31:0] fc_hidden_layer2_d1;
reg   [8:0] fc_hidden_layer3_address0;
reg    fc_hidden_layer3_ce0;
reg    fc_hidden_layer3_we0;
reg   [31:0] fc_hidden_layer3_d0;
wire   [31:0] fc_hidden_layer3_q0;
reg   [9:0] conv_out_1_address0;
reg    conv_out_1_ce0;
reg    conv_out_1_we0;
wire   [31:0] conv_out_1_q0;
reg   [9:0] conv_out_2_address0;
reg    conv_out_2_ce0;
reg    conv_out_2_we0;
wire   [31:0] conv_out_2_q0;
reg   [9:0] fc_in_1_0_address0;
reg    fc_in_1_0_ce0;
reg    fc_in_1_0_we0;
wire   [31:0] fc_in_1_0_q0;
reg   [7:0] fc_out_1_0_address0;
reg    fc_out_1_0_ce0;
reg    fc_out_1_0_we0;
wire   [31:0] fc_out_1_0_q0;
reg   [7:0] fc_in_2_relu1_0_address0;
reg    fc_in_2_relu1_0_ce0;
reg    fc_in_2_relu1_0_we0;
wire   [31:0] fc_in_2_relu1_0_q0;
reg   [5:0] fc_out_2_0_address0;
reg    fc_out_2_0_ce0;
reg    fc_out_2_0_we0;
wire   [31:0] fc_out_2_0_q0;
reg   [5:0] fc_in_3_relu2_0_address0;
reg    fc_in_3_relu2_0_ce0;
reg    fc_in_3_relu2_0_we0;
wire   [31:0] fc_in_3_relu2_0_q0;
reg   [3:0] probability_result_address0;
reg    probability_result_ce0;
reg    probability_result_we0;
wire   [31:0] probability_result_q0;
reg    data_blk_n_AW;
wire    ap_CS_fsm_state73;
reg   [0:0] icmp_ln215_reg_1499;
reg    data_blk_n_W;
reg    ap_enable_reg_pp14_iter2;
wire    ap_block_pp14_stage0;
reg   [0:0] icmp_ln217_reg_1631;
reg   [0:0] icmp_ln217_reg_1631_pp14_iter1_reg;
wire    ap_CS_fsm_state75;
reg    data_blk_n_B;
wire    ap_CS_fsm_state83;
reg    ap_enable_reg_pp7_iter2;
wire    ap_block_pp7_stage0;
reg   [0:0] icmp_ln222_reg_1503;
reg   [0:0] icmp_ln222_reg_1503_pp7_iter1_reg;
wire    ap_CS_fsm_state139;
reg    data_blk_n_AR;
wire    ap_CS_fsm_state62;
reg    data_blk_n_R;
wire    ap_CS_fsm_pp6_stage0;
reg    ap_enable_reg_pp6_iter1;
wire    ap_block_pp6_stage0;
reg   [0:0] icmp_ln213_reg_1485;
wire    ap_CS_fsm_state123;
reg    ap_enable_reg_pp13_iter2;
wire    ap_block_pp13_stage0;
reg   [0:0] icmp_ln229_reg_1612;
reg   [0:0] icmp_ln229_reg_1612_pp13_iter1_reg;
wire    ap_CS_fsm_state131;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_pp5_stage0;
reg    ap_enable_reg_pp5_iter1;
wire    ap_block_pp5_stage0;
reg   [0:0] icmp_ln212_reg_1471;
wire    ap_CS_fsm_state115;
reg    ap_enable_reg_pp12_iter2;
wire    ap_block_pp12_stage0;
reg   [0:0] icmp_ln228_reg_1593;
reg   [0:0] icmp_ln228_reg_1593_pp12_iter1_reg;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] icmp_ln211_reg_1457;
wire    ap_CS_fsm_state107;
reg    ap_enable_reg_pp11_iter2;
wire    ap_block_pp11_stage0;
reg   [0:0] icmp_ln227_reg_1574;
reg   [0:0] icmp_ln227_reg_1574_pp11_iter1_reg;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] icmp_ln210_reg_1443;
wire    ap_CS_fsm_state99;
reg    ap_enable_reg_pp10_iter2;
wire    ap_block_pp10_stage0;
reg   [0:0] icmp_ln226_reg_1555;
reg   [0:0] icmp_ln226_reg_1555_pp10_iter1_reg;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln209_reg_1429;
wire    ap_CS_fsm_state91;
reg    ap_enable_reg_pp9_iter2;
wire    ap_block_pp9_stage0;
reg   [0:0] icmp_ln225_reg_1536;
reg   [0:0] icmp_ln225_reg_1536_pp9_iter1_reg;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln208_reg_1415;
reg    ap_enable_reg_pp8_iter2;
wire    ap_block_pp8_stage0;
reg   [0:0] icmp_ln224_reg_1517;
reg   [0:0] icmp_ln224_reg_1517_pp8_iter1_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln207_reg_1401;
reg    data_AWVALID;
wire    data_AWREADY;
reg   [31:0] data_AWADDR;
reg   [31:0] data_AWLEN;
reg    data_WVALID;
wire    data_WREADY;
reg   [31:0] data_WDATA;
reg    data_ARVALID;
wire    data_ARREADY;
reg   [31:0] data_ARADDR;
reg   [0:0] data_ARID;
reg   [31:0] data_ARLEN;
reg   [2:0] data_ARSIZE;
reg   [1:0] data_ARBURST;
reg   [1:0] data_ARLOCK;
reg   [3:0] data_ARCACHE;
reg   [2:0] data_ARPROT;
reg   [3:0] data_ARQOS;
reg   [3:0] data_ARREGION;
reg   [0:0] data_ARUSER;
wire    data_RVALID;
reg    data_RREADY;
wire   [31:0] data_RDATA;
wire    data_RLAST;
wire   [0:0] data_RID;
wire   [0:0] data_RUSER;
wire   [1:0] data_RRESP;
wire    data_BVALID;
reg    data_BREADY;
wire   [1:0] data_BRESP;
wire   [0:0] data_BID;
wire   [0:0] data_BUSER;
reg   [9:0] phi_ln207_reg_614;
reg   [9:0] phi_ln207_reg_614_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [3:0] phi_ln208_reg_626;
reg   [3:0] phi_ln208_reg_626_pp1_iter1_reg;
wire    ap_block_state19_pp1_stage0_iter0;
reg    ap_block_state20_pp1_stage0_iter1;
wire    ap_block_state21_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [3:0] phi_ln209_reg_638;
reg   [3:0] phi_ln209_reg_638_pp2_iter1_reg;
wire    ap_block_state29_pp2_stage0_iter0;
reg    ap_block_state30_pp2_stage0_iter1;
wire    ap_block_state31_pp2_stage0_iter2;
reg    ap_block_pp2_stage0_11001;
reg   [3:0] phi_ln210_reg_650;
reg   [3:0] phi_ln210_reg_650_pp3_iter1_reg;
wire    ap_block_state39_pp3_stage0_iter0;
reg    ap_block_state40_pp3_stage0_iter1;
wire    ap_block_state41_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
reg   [16:0] phi_ln211_reg_662;
reg   [16:0] phi_ln211_reg_662_pp4_iter1_reg;
wire    ap_block_state49_pp4_stage0_iter0;
reg    ap_block_state50_pp4_stage0_iter1;
wire    ap_block_state51_pp4_stage0_iter2;
reg    ap_block_pp4_stage0_11001;
reg   [12:0] phi_ln212_reg_674;
reg   [12:0] phi_ln212_reg_674_pp5_iter1_reg;
wire    ap_block_state59_pp5_stage0_iter0;
reg    ap_block_state60_pp5_stage0_iter1;
wire    ap_block_state61_pp5_stage0_iter2;
reg    ap_block_pp5_stage0_11001;
reg   [8:0] phi_ln213_reg_686;
reg   [8:0] phi_ln213_reg_686_pp6_iter1_reg;
wire    ap_block_state69_pp6_stage0_iter0;
reg    ap_block_state70_pp6_stage0_iter1;
wire    ap_block_state71_pp6_stage0_iter2;
reg    ap_block_pp6_stage0_11001;
reg   [3:0] phi_ln222_reg_698;
reg   [3:0] phi_ln224_reg_709;
reg   [3:0] phi_ln225_reg_720;
reg   [3:0] phi_ln226_reg_731;
reg   [16:0] phi_ln227_reg_742;
reg   [12:0] phi_ln228_reg_753;
reg   [8:0] phi_ln229_reg_764;
reg   [3:0] phi_ln217_reg_775;
reg   [31:0] reg_862;
wire    ap_CS_fsm_pp7_stage0;
reg    ap_enable_reg_pp7_iter1;
wire    ap_block_state76_pp7_stage0_iter0;
wire    ap_block_state77_pp7_stage0_iter1;
wire    ap_block_state78_pp7_stage0_iter2;
reg    ap_block_state78_io;
reg    ap_block_pp7_stage0_11001;
wire    ap_CS_fsm_pp14_stage0;
reg    ap_enable_reg_pp14_iter1;
wire    ap_block_state132_pp14_stage0_iter0;
wire    ap_block_state133_pp14_stage0_iter1;
wire    ap_block_state134_pp14_stage0_iter2;
reg    ap_block_state134_io;
reg    ap_block_pp14_stage0_11001;
reg   [31:0] label_read_reg_1291;
reg   [31:0] flag_read_reg_1296;
reg   [29:0] lr1_reg_1301;
reg   [29:0] out1_reg_1306;
reg   [29:0] fc_reg_1311;
reg   [29:0] fc4_reg_1316;
reg   [29:0] fc5_reg_1321;
reg   [29:0] conv_reg_1326;
reg   [29:0] conv4_reg_1331;
reg   [29:0] conv5_reg_1336;
reg   [29:0] in1_reg_1341;
reg   [31:0] data_addr_reg_1352;
wire    ap_CS_fsm_state8;
reg   [31:0] data_addr_1_reg_1359;
reg   [31:0] data_addr_2_reg_1366;
reg   [31:0] data_addr_3_reg_1373;
reg   [31:0] data_addr_4_reg_1380;
reg   [31:0] data_addr_5_reg_1387;
reg   [31:0] data_addr_6_reg_1394;
wire   [0:0] icmp_ln207_fu_1031_p2;
reg   [0:0] icmp_ln207_reg_1401_pp0_iter1_reg;
wire   [9:0] add_ln207_fu_1037_p2;
reg   [9:0] add_ln207_reg_1405;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] data_addr_7_read_reg_1410;
wire   [0:0] icmp_ln208_fu_1048_p2;
reg   [0:0] icmp_ln208_reg_1415_pp1_iter1_reg;
wire   [3:0] add_ln208_fu_1054_p2;
reg   [3:0] add_ln208_reg_1419;
reg    ap_enable_reg_pp1_iter0;
reg   [31:0] data_addr_6_read_reg_1424;
wire   [0:0] icmp_ln209_fu_1065_p2;
reg   [0:0] icmp_ln209_reg_1429_pp2_iter1_reg;
wire   [3:0] add_ln209_fu_1071_p2;
reg   [3:0] add_ln209_reg_1433;
reg    ap_enable_reg_pp2_iter0;
reg   [31:0] data_addr_5_read_reg_1438;
wire   [0:0] icmp_ln210_fu_1082_p2;
reg   [0:0] icmp_ln210_reg_1443_pp3_iter1_reg;
wire   [3:0] add_ln210_fu_1088_p2;
reg   [3:0] add_ln210_reg_1447;
reg    ap_enable_reg_pp3_iter0;
reg   [31:0] data_addr_4_read_reg_1452;
wire   [0:0] icmp_ln211_fu_1099_p2;
reg   [0:0] icmp_ln211_reg_1457_pp4_iter1_reg;
wire   [16:0] add_ln211_fu_1105_p2;
reg   [16:0] add_ln211_reg_1461;
reg    ap_enable_reg_pp4_iter0;
reg   [31:0] data_addr_3_read_reg_1466;
wire   [0:0] icmp_ln212_fu_1116_p2;
reg   [0:0] icmp_ln212_reg_1471_pp5_iter1_reg;
wire   [12:0] add_ln212_fu_1122_p2;
reg   [12:0] add_ln212_reg_1475;
reg    ap_enable_reg_pp5_iter0;
reg   [31:0] data_addr_2_read_reg_1480;
wire   [0:0] icmp_ln213_fu_1133_p2;
reg   [0:0] icmp_ln213_reg_1485_pp6_iter1_reg;
wire   [8:0] add_ln213_fu_1139_p2;
reg   [8:0] add_ln213_reg_1489;
reg    ap_enable_reg_pp6_iter0;
reg   [31:0] data_addr_1_read_reg_1494;
wire   [0:0] icmp_ln215_fu_1150_p2;
wire    ap_CS_fsm_state72;
wire   [0:0] icmp_ln222_fu_1155_p2;
wire   [3:0] add_ln222_fu_1161_p2;
reg    ap_enable_reg_pp7_iter0;
wire   [0:0] icmp_ln224_fu_1172_p2;
wire    ap_CS_fsm_pp8_stage0;
wire    ap_block_state84_pp8_stage0_iter0;
wire    ap_block_state85_pp8_stage0_iter1;
wire    ap_block_state86_pp8_stage0_iter2;
reg    ap_block_state86_io;
reg    ap_block_pp8_stage0_11001;
wire   [3:0] add_ln224_fu_1178_p2;
reg    ap_enable_reg_pp8_iter0;
reg   [31:0] conv_kernel_1_load_reg_1531;
reg    ap_enable_reg_pp8_iter1;
wire   [0:0] icmp_ln225_fu_1189_p2;
wire    ap_CS_fsm_pp9_stage0;
wire    ap_block_state92_pp9_stage0_iter0;
wire    ap_block_state93_pp9_stage0_iter1;
wire    ap_block_state94_pp9_stage0_iter2;
reg    ap_block_state94_io;
reg    ap_block_pp9_stage0_11001;
wire   [3:0] add_ln225_fu_1195_p2;
reg    ap_enable_reg_pp9_iter0;
reg   [31:0] conv_kernel_2_load_reg_1550;
reg    ap_enable_reg_pp9_iter1;
wire   [0:0] icmp_ln226_fu_1206_p2;
wire    ap_CS_fsm_pp10_stage0;
wire    ap_block_state100_pp10_stage0_iter0;
wire    ap_block_state101_pp10_stage0_iter1;
wire    ap_block_state102_pp10_stage0_iter2;
reg    ap_block_state102_io;
reg    ap_block_pp10_stage0_11001;
wire   [3:0] add_ln226_fu_1212_p2;
reg    ap_enable_reg_pp10_iter0;
reg   [31:0] conv_kernel_3_load_reg_1569;
reg    ap_enable_reg_pp10_iter1;
wire   [0:0] icmp_ln227_fu_1223_p2;
wire    ap_CS_fsm_pp11_stage0;
wire    ap_block_state108_pp11_stage0_iter0;
wire    ap_block_state109_pp11_stage0_iter1;
wire    ap_block_state110_pp11_stage0_iter2;
reg    ap_block_state110_io;
reg    ap_block_pp11_stage0_11001;
wire   [16:0] add_ln227_fu_1229_p2;
reg    ap_enable_reg_pp11_iter0;
reg   [31:0] fc_hidden_layer1_loa_reg_1588;
reg    ap_enable_reg_pp11_iter1;
wire   [0:0] icmp_ln228_fu_1240_p2;
wire    ap_CS_fsm_pp12_stage0;
wire    ap_block_state116_pp12_stage0_iter0;
wire    ap_block_state117_pp12_stage0_iter1;
wire    ap_block_state118_pp12_stage0_iter2;
reg    ap_block_state118_io;
reg    ap_block_pp12_stage0_11001;
wire   [12:0] add_ln228_fu_1246_p2;
reg    ap_enable_reg_pp12_iter0;
reg   [31:0] fc_hidden_layer2_loa_reg_1607;
reg    ap_enable_reg_pp12_iter1;
wire   [0:0] icmp_ln229_fu_1257_p2;
wire    ap_CS_fsm_pp13_stage0;
wire    ap_block_state124_pp13_stage0_iter0;
wire    ap_block_state125_pp13_stage0_iter1;
wire    ap_block_state126_pp13_stage0_iter2;
reg    ap_block_state126_io;
reg    ap_block_pp13_stage0_11001;
wire   [8:0] add_ln229_fu_1263_p2;
reg    ap_enable_reg_pp13_iter0;
reg   [31:0] fc_hidden_layer3_loa_reg_1626;
reg    ap_enable_reg_pp13_iter1;
wire   [0:0] icmp_ln217_fu_1274_p2;
wire   [3:0] add_ln217_fu_1280_p2;
reg    ap_enable_reg_pp14_iter0;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state18;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state19;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state28;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state29;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state38;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state39;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state48;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state49;
reg    ap_enable_reg_pp4_iter2;
wire    ap_CS_fsm_state58;
reg    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state59;
reg    ap_enable_reg_pp5_iter2;
wire    ap_CS_fsm_state68;
reg    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state69;
reg    ap_enable_reg_pp6_iter2;
wire    grp_backward_fu_824_ap_ready;
wire    grp_backward_fu_824_ap_done;
reg    ap_block_pp7_stage0_subdone;
reg    ap_condition_pp7_exit_iter0_state76;
reg    ap_block_pp8_stage0_subdone;
reg    ap_condition_pp8_exit_iter0_state84;
reg    ap_block_pp9_stage0_subdone;
reg    ap_condition_pp9_exit_iter0_state92;
reg    ap_block_pp10_stage0_subdone;
reg    ap_condition_pp10_exit_iter0_state100;
reg    ap_block_pp11_stage0_subdone;
reg    ap_condition_pp11_exit_iter0_state108;
reg    ap_block_pp12_stage0_subdone;
reg    ap_condition_pp12_exit_iter0_state116;
reg    ap_block_pp13_stage0_subdone;
reg    ap_condition_pp13_exit_iter0_state124;
reg    ap_block_state73_io;
wire    grp_forward_fu_786_ap_ready;
wire    grp_forward_fu_786_ap_done;
reg    ap_block_pp14_stage0_subdone;
reg    ap_condition_pp14_exit_iter0_state132;
wire    grp_forward_fu_786_ap_start;
wire    grp_forward_fu_786_ap_idle;
wire   [9:0] grp_forward_fu_786_mnist_data_address0;
wire    grp_forward_fu_786_mnist_data_ce0;
wire   [3:0] grp_forward_fu_786_conv_kernel_1_address0;
wire    grp_forward_fu_786_conv_kernel_1_ce0;
wire   [9:0] grp_forward_fu_786_conv_out_1_address0;
wire    grp_forward_fu_786_conv_out_1_ce0;
wire    grp_forward_fu_786_conv_out_1_we0;
wire   [31:0] grp_forward_fu_786_conv_out_1_d0;
wire   [3:0] grp_forward_fu_786_conv_kernel_2_address0;
wire    grp_forward_fu_786_conv_kernel_2_ce0;
wire   [9:0] grp_forward_fu_786_conv_out_2_address0;
wire    grp_forward_fu_786_conv_out_2_ce0;
wire    grp_forward_fu_786_conv_out_2_we0;
wire   [31:0] grp_forward_fu_786_conv_out_2_d0;
wire   [3:0] grp_forward_fu_786_conv_kernel_3_address0;
wire    grp_forward_fu_786_conv_kernel_3_ce0;
wire   [9:0] grp_forward_fu_786_fc_in_1_0_address0;
wire    grp_forward_fu_786_fc_in_1_0_ce0;
wire    grp_forward_fu_786_fc_in_1_0_we0;
wire   [31:0] grp_forward_fu_786_fc_in_1_0_d0;
wire   [7:0] grp_forward_fu_786_fc_out_1_0_address0;
wire    grp_forward_fu_786_fc_out_1_0_ce0;
wire    grp_forward_fu_786_fc_out_1_0_we0;
wire   [31:0] grp_forward_fu_786_fc_out_1_0_d0;
wire   [16:0] grp_forward_fu_786_fc_hidden_layer1_address0;
wire    grp_forward_fu_786_fc_hidden_layer1_ce0;
wire   [7:0] grp_forward_fu_786_fc_in_2_relu1_0_address0;
wire    grp_forward_fu_786_fc_in_2_relu1_0_ce0;
wire    grp_forward_fu_786_fc_in_2_relu1_0_we0;
wire   [31:0] grp_forward_fu_786_fc_in_2_relu1_0_d0;
wire   [5:0] grp_forward_fu_786_fc_out_2_0_address0;
wire    grp_forward_fu_786_fc_out_2_0_ce0;
wire    grp_forward_fu_786_fc_out_2_0_we0;
wire   [31:0] grp_forward_fu_786_fc_out_2_0_d0;
wire   [12:0] grp_forward_fu_786_fc_hidden_layer2_address0;
wire    grp_forward_fu_786_fc_hidden_layer2_ce0;
wire   [5:0] grp_forward_fu_786_fc_in_3_relu2_0_address0;
wire    grp_forward_fu_786_fc_in_3_relu2_0_ce0;
wire    grp_forward_fu_786_fc_in_3_relu2_0_we0;
wire   [31:0] grp_forward_fu_786_fc_in_3_relu2_0_d0;
wire   [8:0] grp_forward_fu_786_fc_hidden_layer3_address0;
wire    grp_forward_fu_786_fc_hidden_layer3_ce0;
wire   [3:0] grp_forward_fu_786_probability_result_address0;
wire    grp_forward_fu_786_probability_result_ce0;
wire    grp_forward_fu_786_probability_result_we0;
wire   [31:0] grp_forward_fu_786_probability_result_d0;
wire    grp_backward_fu_824_ap_start;
wire    grp_backward_fu_824_ap_idle;
wire    grp_backward_fu_824_m_axi_lr_in_AWVALID;
wire   [31:0] grp_backward_fu_824_m_axi_lr_in_AWADDR;
wire   [0:0] grp_backward_fu_824_m_axi_lr_in_AWID;
wire   [31:0] grp_backward_fu_824_m_axi_lr_in_AWLEN;
wire   [2:0] grp_backward_fu_824_m_axi_lr_in_AWSIZE;
wire   [1:0] grp_backward_fu_824_m_axi_lr_in_AWBURST;
wire   [1:0] grp_backward_fu_824_m_axi_lr_in_AWLOCK;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_AWCACHE;
wire   [2:0] grp_backward_fu_824_m_axi_lr_in_AWPROT;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_AWQOS;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_AWREGION;
wire   [0:0] grp_backward_fu_824_m_axi_lr_in_AWUSER;
wire    grp_backward_fu_824_m_axi_lr_in_WVALID;
wire   [31:0] grp_backward_fu_824_m_axi_lr_in_WDATA;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_WSTRB;
wire    grp_backward_fu_824_m_axi_lr_in_WLAST;
wire   [0:0] grp_backward_fu_824_m_axi_lr_in_WID;
wire   [0:0] grp_backward_fu_824_m_axi_lr_in_WUSER;
wire    grp_backward_fu_824_m_axi_lr_in_ARVALID;
wire   [31:0] grp_backward_fu_824_m_axi_lr_in_ARADDR;
wire   [0:0] grp_backward_fu_824_m_axi_lr_in_ARID;
wire   [31:0] grp_backward_fu_824_m_axi_lr_in_ARLEN;
wire   [2:0] grp_backward_fu_824_m_axi_lr_in_ARSIZE;
wire   [1:0] grp_backward_fu_824_m_axi_lr_in_ARBURST;
wire   [1:0] grp_backward_fu_824_m_axi_lr_in_ARLOCK;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_ARCACHE;
wire   [2:0] grp_backward_fu_824_m_axi_lr_in_ARPROT;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_ARQOS;
wire   [3:0] grp_backward_fu_824_m_axi_lr_in_ARREGION;
wire   [0:0] grp_backward_fu_824_m_axi_lr_in_ARUSER;
wire    grp_backward_fu_824_m_axi_lr_in_RREADY;
wire    grp_backward_fu_824_m_axi_lr_in_BREADY;
wire   [3:0] grp_backward_fu_824_probability_result_address0;
wire    grp_backward_fu_824_probability_result_ce0;
wire   [5:0] grp_backward_fu_824_fc_in_3_relu2_0_address0;
wire    grp_backward_fu_824_fc_in_3_relu2_0_ce0;
wire   [8:0] grp_backward_fu_824_fc_hidden_layer3_address0;
wire    grp_backward_fu_824_fc_hidden_layer3_ce0;
wire    grp_backward_fu_824_fc_hidden_layer3_we0;
wire   [31:0] grp_backward_fu_824_fc_hidden_layer3_d0;
wire   [5:0] grp_backward_fu_824_fc_out_2_0_address0;
wire    grp_backward_fu_824_fc_out_2_0_ce0;
wire   [7:0] grp_backward_fu_824_fc_in_2_relu1_0_address0;
wire    grp_backward_fu_824_fc_in_2_relu1_0_ce0;
wire   [12:0] grp_backward_fu_824_fc_hidden_layer2_address0;
wire    grp_backward_fu_824_fc_hidden_layer2_ce0;
wire   [12:0] grp_backward_fu_824_fc_hidden_layer2_address1;
wire    grp_backward_fu_824_fc_hidden_layer2_ce1;
wire    grp_backward_fu_824_fc_hidden_layer2_we1;
wire   [31:0] grp_backward_fu_824_fc_hidden_layer2_d1;
wire   [7:0] grp_backward_fu_824_fc_out_1_0_address0;
wire    grp_backward_fu_824_fc_out_1_0_ce0;
wire   [9:0] grp_backward_fu_824_fc_in_1_0_address0;
wire    grp_backward_fu_824_fc_in_1_0_ce0;
wire   [16:0] grp_backward_fu_824_fc_hidden_layer1_address0;
wire    grp_backward_fu_824_fc_hidden_layer1_ce0;
wire    grp_backward_fu_824_fc_hidden_layer1_we0;
wire   [31:0] grp_backward_fu_824_fc_hidden_layer1_d0;
wire   [9:0] grp_backward_fu_824_conv_out_2_address0;
wire    grp_backward_fu_824_conv_out_2_ce0;
wire   [3:0] grp_backward_fu_824_conv_kernel_3_address0;
wire    grp_backward_fu_824_conv_kernel_3_ce0;
wire    grp_backward_fu_824_conv_kernel_3_we0;
wire   [31:0] grp_backward_fu_824_conv_kernel_3_d0;
wire   [9:0] grp_backward_fu_824_conv_out_1_address0;
wire    grp_backward_fu_824_conv_out_1_ce0;
wire   [3:0] grp_backward_fu_824_conv_kernel_2_address0;
wire    grp_backward_fu_824_conv_kernel_2_ce0;
wire    grp_backward_fu_824_conv_kernel_2_we0;
wire   [31:0] grp_backward_fu_824_conv_kernel_2_d0;
wire   [9:0] grp_backward_fu_824_mnist_data_address0;
wire    grp_backward_fu_824_mnist_data_ce0;
wire   [3:0] grp_backward_fu_824_conv_kernel_1_address0;
wire    grp_backward_fu_824_conv_kernel_1_ce0;
wire    grp_backward_fu_824_conv_kernel_1_we0;
wire   [31:0] grp_backward_fu_824_conv_kernel_1_d0;
reg   [9:0] ap_phi_mux_phi_ln207_phi_fu_618_p4;
reg   [3:0] ap_phi_mux_phi_ln208_phi_fu_630_p4;
reg   [3:0] ap_phi_mux_phi_ln209_phi_fu_642_p4;
reg   [3:0] ap_phi_mux_phi_ln210_phi_fu_654_p4;
reg   [16:0] ap_phi_mux_phi_ln211_phi_fu_666_p4;
reg   [12:0] ap_phi_mux_phi_ln212_phi_fu_678_p4;
reg   [8:0] ap_phi_mux_phi_ln213_phi_fu_690_p4;
reg    grp_forward_fu_786_ap_start_reg;
reg    grp_backward_fu_824_ap_start_reg;
wire    ap_CS_fsm_state74;
wire   [63:0] zext_ln207_fu_1043_p1;
wire   [63:0] zext_ln208_fu_1060_p1;
wire   [63:0] zext_ln209_fu_1077_p1;
wire   [63:0] zext_ln210_fu_1094_p1;
wire   [63:0] zext_ln211_fu_1111_p1;
wire   [63:0] zext_ln212_fu_1128_p1;
wire   [63:0] zext_ln213_fu_1145_p1;
wire   [63:0] zext_ln222_fu_1167_p1;
wire   [63:0] zext_ln224_fu_1184_p1;
wire   [63:0] zext_ln225_fu_1201_p1;
wire   [63:0] zext_ln226_fu_1218_p1;
wire   [63:0] zext_ln227_fu_1235_p1;
wire   [63:0] zext_ln228_fu_1252_p1;
wire   [63:0] zext_ln229_fu_1269_p1;
wire   [63:0] zext_ln217_fu_1286_p1;
wire   [63:0] empty_29_fu_958_p1;
wire   [63:0] empty_fu_968_p1;
wire   [63:0] empty_23_fu_977_p1;
wire   [63:0] empty_24_fu_986_p1;
wire   [63:0] empty_25_fu_995_p1;
wire   [63:0] empty_26_fu_1004_p1;
wire   [63:0] empty_27_fu_1013_p1;
wire   [63:0] empty_28_fu_1022_p1;
reg    ap_block_state131;
wire    ap_block_pp7_stage0_01001;
wire    ap_block_pp8_stage0_01001;
wire    ap_block_pp9_stage0_01001;
wire    ap_block_pp10_stage0_01001;
wire    ap_block_pp11_stage0_01001;
wire    ap_block_pp12_stage0_01001;
wire    ap_block_pp13_stage0_01001;
wire    ap_block_pp14_stage0_01001;
reg   [108:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;
reg    ap_idle_pp7;
wire    ap_enable_pp7;
reg    ap_idle_pp8;
wire    ap_enable_pp8;
reg    ap_idle_pp9;
wire    ap_enable_pp9;
reg    ap_idle_pp10;
wire    ap_enable_pp10;
reg    ap_idle_pp11;
wire    ap_enable_pp11;
reg    ap_idle_pp12;
wire    ap_enable_pp12;
reg    ap_idle_pp13;
wire    ap_enable_pp13;
reg    ap_idle_pp14;
wire    ap_enable_pp14;

// power-on initialization
initial begin
#0 ap_CS_fsm = 109'd1;
#0 ap_enable_reg_pp14_iter2 = 1'b0;
#0 ap_enable_reg_pp7_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp13_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp12_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp11_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp8_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp7_iter1 = 1'b0;
#0 ap_enable_reg_pp14_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp7_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter0 = 1'b0;
#0 ap_enable_reg_pp8_iter1 = 1'b0;
#0 ap_enable_reg_pp9_iter0 = 1'b0;
#0 ap_enable_reg_pp9_iter1 = 1'b0;
#0 ap_enable_reg_pp10_iter0 = 1'b0;
#0 ap_enable_reg_pp10_iter1 = 1'b0;
#0 ap_enable_reg_pp11_iter0 = 1'b0;
#0 ap_enable_reg_pp11_iter1 = 1'b0;
#0 ap_enable_reg_pp12_iter0 = 1'b0;
#0 ap_enable_reg_pp12_iter1 = 1'b0;
#0 ap_enable_reg_pp13_iter0 = 1'b0;
#0 ap_enable_reg_pp13_iter1 = 1'b0;
#0 ap_enable_reg_pp14_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 grp_forward_fu_786_ap_start_reg = 1'b0;
#0 grp_backward_fu_824_ap_start_reg = 1'b0;
end

forw_back_mnist_dAem #(
    .DataWidth( 32 ),
    .AddressRange( 900 ),
    .AddressWidth( 10 ))
mnist_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mnist_data_address0),
    .ce0(mnist_data_ce0),
    .we0(mnist_data_we0),
    .d0(data_addr_7_read_reg_1410),
    .q0(mnist_data_q0)
);

forw_back_conv_keBew #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
conv_kernel_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_kernel_1_address0),
    .ce0(conv_kernel_1_ce0),
    .we0(conv_kernel_1_we0),
    .d0(conv_kernel_1_d0),
    .q0(conv_kernel_1_q0)
);

forw_back_conv_keBew #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
conv_kernel_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_kernel_2_address0),
    .ce0(conv_kernel_2_ce0),
    .we0(conv_kernel_2_we0),
    .d0(conv_kernel_2_d0),
    .q0(conv_kernel_2_q0)
);

forw_back_conv_keBew #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
conv_kernel_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_kernel_3_address0),
    .ce0(conv_kernel_3_ce0),
    .we0(conv_kernel_3_we0),
    .d0(conv_kernel_3_d0),
    .q0(conv_kernel_3_q0)
);

forw_back_fc_hiddEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 103680 ),
    .AddressWidth( 17 ))
fc_hidden_layer1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_hidden_layer1_address0),
    .ce0(fc_hidden_layer1_ce0),
    .we0(fc_hidden_layer1_we0),
    .d0(fc_hidden_layer1_d0),
    .q0(fc_hidden_layer1_q0)
);

forw_back_fc_hiddFfa #(
    .DataWidth( 32 ),
    .AddressRange( 8100 ),
    .AddressWidth( 13 ))
fc_hidden_layer2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_hidden_layer2_address0),
    .ce0(fc_hidden_layer2_ce0),
    .q0(fc_hidden_layer2_q0),
    .address1(fc_hidden_layer2_address1),
    .ce1(fc_hidden_layer2_ce1),
    .we1(fc_hidden_layer2_we1),
    .d1(fc_hidden_layer2_d1)
);

forw_back_fc_hiddGfk #(
    .DataWidth( 32 ),
    .AddressRange( 450 ),
    .AddressWidth( 9 ))
fc_hidden_layer3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_hidden_layer3_address0),
    .ce0(fc_hidden_layer3_ce0),
    .we0(fc_hidden_layer3_we0),
    .d0(fc_hidden_layer3_d0),
    .q0(fc_hidden_layer3_q0)
);

forw_back_conv_ouHfu #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_out_1_address0),
    .ce0(conv_out_1_ce0),
    .we0(conv_out_1_we0),
    .d0(grp_forward_fu_786_conv_out_1_d0),
    .q0(conv_out_1_q0)
);

forw_back_conv_ouIfE #(
    .DataWidth( 32 ),
    .AddressRange( 676 ),
    .AddressWidth( 10 ))
conv_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(conv_out_2_address0),
    .ce0(conv_out_2_ce0),
    .we0(conv_out_2_we0),
    .d0(grp_forward_fu_786_conv_out_2_d0),
    .q0(conv_out_2_q0)
);

forward_conv_out_3 #(
    .DataWidth( 32 ),
    .AddressRange( 576 ),
    .AddressWidth( 10 ))
fc_in_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_in_1_0_address0),
    .ce0(fc_in_1_0_ce0),
    .we0(fc_in_1_0_we0),
    .d0(grp_forward_fu_786_fc_in_1_0_d0),
    .q0(fc_in_1_0_q0)
);

forw_back_fc_out_JfO #(
    .DataWidth( 32 ),
    .AddressRange( 180 ),
    .AddressWidth( 8 ))
fc_out_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_out_1_0_address0),
    .ce0(fc_out_1_0_ce0),
    .we0(fc_out_1_0_we0),
    .d0(grp_forward_fu_786_fc_out_1_0_d0),
    .q0(fc_out_1_0_q0)
);

forw_back_fc_out_JfO #(
    .DataWidth( 32 ),
    .AddressRange( 180 ),
    .AddressWidth( 8 ))
fc_in_2_relu1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_in_2_relu1_0_address0),
    .ce0(fc_in_2_relu1_0_ce0),
    .we0(fc_in_2_relu1_0_we0),
    .d0(grp_forward_fu_786_fc_in_2_relu1_0_d0),
    .q0(fc_in_2_relu1_0_q0)
);

forw_back_fc_out_Lf8 #(
    .DataWidth( 32 ),
    .AddressRange( 45 ),
    .AddressWidth( 6 ))
fc_out_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_out_2_0_address0),
    .ce0(fc_out_2_0_ce0),
    .we0(fc_out_2_0_we0),
    .d0(grp_forward_fu_786_fc_out_2_0_d0),
    .q0(fc_out_2_0_q0)
);

forw_back_fc_out_Lf8 #(
    .DataWidth( 32 ),
    .AddressRange( 45 ),
    .AddressWidth( 6 ))
fc_in_3_relu2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(fc_in_3_relu2_0_address0),
    .ce0(fc_in_3_relu2_0_ce0),
    .we0(fc_in_3_relu2_0_we0),
    .d0(grp_forward_fu_786_fc_in_3_relu2_0_d0),
    .q0(fc_in_3_relu2_0_q0)
);

forward_fc_out_3_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
probability_result_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(probability_result_address0),
    .ce0(probability_result_ce0),
    .we0(probability_result_we0),
    .d0(grp_forward_fu_786_probability_result_d0),
    .q0(probability_result_q0)
);

forw_back_ctrl_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
forw_back_ctrl_s_axi_U(
    .AWVALID(s_axi_ctrl_AWVALID),
    .AWREADY(s_axi_ctrl_AWREADY),
    .AWADDR(s_axi_ctrl_AWADDR),
    .WVALID(s_axi_ctrl_WVALID),
    .WREADY(s_axi_ctrl_WREADY),
    .WDATA(s_axi_ctrl_WDATA),
    .WSTRB(s_axi_ctrl_WSTRB),
    .ARVALID(s_axi_ctrl_ARVALID),
    .ARREADY(s_axi_ctrl_ARREADY),
    .ARADDR(s_axi_ctrl_ARADDR),
    .RVALID(s_axi_ctrl_RVALID),
    .RREADY(s_axi_ctrl_RREADY),
    .RDATA(s_axi_ctrl_RDATA),
    .RRESP(s_axi_ctrl_RRESP),
    .BVALID(s_axi_ctrl_BVALID),
    .BREADY(s_axi_ctrl_BREADY),
    .BRESP(s_axi_ctrl_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .flag(flag),
    .in_r(in_r),
    .conv1(conv1),
    .conv2(conv2),
    .conv3(conv3),
    .fc1(fc1),
    .fc2(fc2),
    .fc3(fc3),
    .out_r(out_r),
    .label_r(label_r),
    .lr(lr)
);

forw_back_data_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_DATA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_DATA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_DATA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_DATA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_DATA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_DATA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_DATA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_DATA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_DATA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_DATA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_DATA_CACHE_VALUE ))
forw_back_data_m_axi_U(
    .AWVALID(m_axi_data_AWVALID),
    .AWREADY(m_axi_data_AWREADY),
    .AWADDR(m_axi_data_AWADDR),
    .AWID(m_axi_data_AWID),
    .AWLEN(m_axi_data_AWLEN),
    .AWSIZE(m_axi_data_AWSIZE),
    .AWBURST(m_axi_data_AWBURST),
    .AWLOCK(m_axi_data_AWLOCK),
    .AWCACHE(m_axi_data_AWCACHE),
    .AWPROT(m_axi_data_AWPROT),
    .AWQOS(m_axi_data_AWQOS),
    .AWREGION(m_axi_data_AWREGION),
    .AWUSER(m_axi_data_AWUSER),
    .WVALID(m_axi_data_WVALID),
    .WREADY(m_axi_data_WREADY),
    .WDATA(m_axi_data_WDATA),
    .WSTRB(m_axi_data_WSTRB),
    .WLAST(m_axi_data_WLAST),
    .WID(m_axi_data_WID),
    .WUSER(m_axi_data_WUSER),
    .ARVALID(m_axi_data_ARVALID),
    .ARREADY(m_axi_data_ARREADY),
    .ARADDR(m_axi_data_ARADDR),
    .ARID(m_axi_data_ARID),
    .ARLEN(m_axi_data_ARLEN),
    .ARSIZE(m_axi_data_ARSIZE),
    .ARBURST(m_axi_data_ARBURST),
    .ARLOCK(m_axi_data_ARLOCK),
    .ARCACHE(m_axi_data_ARCACHE),
    .ARPROT(m_axi_data_ARPROT),
    .ARQOS(m_axi_data_ARQOS),
    .ARREGION(m_axi_data_ARREGION),
    .ARUSER(m_axi_data_ARUSER),
    .RVALID(m_axi_data_RVALID),
    .RREADY(m_axi_data_RREADY),
    .RDATA(m_axi_data_RDATA),
    .RLAST(m_axi_data_RLAST),
    .RID(m_axi_data_RID),
    .RUSER(m_axi_data_RUSER),
    .RRESP(m_axi_data_RRESP),
    .BVALID(m_axi_data_BVALID),
    .BREADY(m_axi_data_BREADY),
    .BRESP(m_axi_data_BRESP),
    .BID(m_axi_data_BID),
    .BUSER(m_axi_data_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(data_ARVALID),
    .I_ARREADY(data_ARREADY),
    .I_ARADDR(data_ARADDR),
    .I_ARID(data_ARID),
    .I_ARLEN(data_ARLEN),
    .I_ARSIZE(data_ARSIZE),
    .I_ARLOCK(data_ARLOCK),
    .I_ARCACHE(data_ARCACHE),
    .I_ARQOS(data_ARQOS),
    .I_ARPROT(data_ARPROT),
    .I_ARUSER(data_ARUSER),
    .I_ARBURST(data_ARBURST),
    .I_ARREGION(data_ARREGION),
    .I_RVALID(data_RVALID),
    .I_RREADY(data_RREADY),
    .I_RDATA(data_RDATA),
    .I_RID(data_RID),
    .I_RUSER(data_RUSER),
    .I_RRESP(data_RRESP),
    .I_RLAST(data_RLAST),
    .I_AWVALID(data_AWVALID),
    .I_AWREADY(data_AWREADY),
    .I_AWADDR(data_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(data_AWLEN),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(data_WVALID),
    .I_WREADY(data_WREADY),
    .I_WDATA(data_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(data_BVALID),
    .I_BREADY(data_BREADY),
    .I_BRESP(data_BRESP),
    .I_BID(data_BID),
    .I_BUSER(data_BUSER)
);

forward grp_forward_fu_786(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_forward_fu_786_ap_start),
    .ap_done(grp_forward_fu_786_ap_done),
    .ap_idle(grp_forward_fu_786_ap_idle),
    .ap_ready(grp_forward_fu_786_ap_ready),
    .mnist_data_address0(grp_forward_fu_786_mnist_data_address0),
    .mnist_data_ce0(grp_forward_fu_786_mnist_data_ce0),
    .mnist_data_q0(mnist_data_q0),
    .conv_kernel_1_address0(grp_forward_fu_786_conv_kernel_1_address0),
    .conv_kernel_1_ce0(grp_forward_fu_786_conv_kernel_1_ce0),
    .conv_kernel_1_q0(conv_kernel_1_q0),
    .conv_out_1_address0(grp_forward_fu_786_conv_out_1_address0),
    .conv_out_1_ce0(grp_forward_fu_786_conv_out_1_ce0),
    .conv_out_1_we0(grp_forward_fu_786_conv_out_1_we0),
    .conv_out_1_d0(grp_forward_fu_786_conv_out_1_d0),
    .conv_out_1_q0(conv_out_1_q0),
    .conv_kernel_2_address0(grp_forward_fu_786_conv_kernel_2_address0),
    .conv_kernel_2_ce0(grp_forward_fu_786_conv_kernel_2_ce0),
    .conv_kernel_2_q0(conv_kernel_2_q0),
    .conv_out_2_address0(grp_forward_fu_786_conv_out_2_address0),
    .conv_out_2_ce0(grp_forward_fu_786_conv_out_2_ce0),
    .conv_out_2_we0(grp_forward_fu_786_conv_out_2_we0),
    .conv_out_2_d0(grp_forward_fu_786_conv_out_2_d0),
    .conv_out_2_q0(conv_out_2_q0),
    .conv_kernel_3_address0(grp_forward_fu_786_conv_kernel_3_address0),
    .conv_kernel_3_ce0(grp_forward_fu_786_conv_kernel_3_ce0),
    .conv_kernel_3_q0(conv_kernel_3_q0),
    .fc_in_1_0_address0(grp_forward_fu_786_fc_in_1_0_address0),
    .fc_in_1_0_ce0(grp_forward_fu_786_fc_in_1_0_ce0),
    .fc_in_1_0_we0(grp_forward_fu_786_fc_in_1_0_we0),
    .fc_in_1_0_d0(grp_forward_fu_786_fc_in_1_0_d0),
    .fc_in_1_0_q0(fc_in_1_0_q0),
    .fc_out_1_0_address0(grp_forward_fu_786_fc_out_1_0_address0),
    .fc_out_1_0_ce0(grp_forward_fu_786_fc_out_1_0_ce0),
    .fc_out_1_0_we0(grp_forward_fu_786_fc_out_1_0_we0),
    .fc_out_1_0_d0(grp_forward_fu_786_fc_out_1_0_d0),
    .fc_out_1_0_q0(fc_out_1_0_q0),
    .fc_hidden_layer1_address0(grp_forward_fu_786_fc_hidden_layer1_address0),
    .fc_hidden_layer1_ce0(grp_forward_fu_786_fc_hidden_layer1_ce0),
    .fc_hidden_layer1_q0(fc_hidden_layer1_q0),
    .fc_in_2_relu1_0_address0(grp_forward_fu_786_fc_in_2_relu1_0_address0),
    .fc_in_2_relu1_0_ce0(grp_forward_fu_786_fc_in_2_relu1_0_ce0),
    .fc_in_2_relu1_0_we0(grp_forward_fu_786_fc_in_2_relu1_0_we0),
    .fc_in_2_relu1_0_d0(grp_forward_fu_786_fc_in_2_relu1_0_d0),
    .fc_in_2_relu1_0_q0(fc_in_2_relu1_0_q0),
    .fc_out_2_0_address0(grp_forward_fu_786_fc_out_2_0_address0),
    .fc_out_2_0_ce0(grp_forward_fu_786_fc_out_2_0_ce0),
    .fc_out_2_0_we0(grp_forward_fu_786_fc_out_2_0_we0),
    .fc_out_2_0_d0(grp_forward_fu_786_fc_out_2_0_d0),
    .fc_out_2_0_q0(fc_out_2_0_q0),
    .fc_hidden_layer2_address0(grp_forward_fu_786_fc_hidden_layer2_address0),
    .fc_hidden_layer2_ce0(grp_forward_fu_786_fc_hidden_layer2_ce0),
    .fc_hidden_layer2_q0(fc_hidden_layer2_q0),
    .fc_in_3_relu2_0_address0(grp_forward_fu_786_fc_in_3_relu2_0_address0),
    .fc_in_3_relu2_0_ce0(grp_forward_fu_786_fc_in_3_relu2_0_ce0),
    .fc_in_3_relu2_0_we0(grp_forward_fu_786_fc_in_3_relu2_0_we0),
    .fc_in_3_relu2_0_d0(grp_forward_fu_786_fc_in_3_relu2_0_d0),
    .fc_in_3_relu2_0_q0(fc_in_3_relu2_0_q0),
    .fc_hidden_layer3_address0(grp_forward_fu_786_fc_hidden_layer3_address0),
    .fc_hidden_layer3_ce0(grp_forward_fu_786_fc_hidden_layer3_ce0),
    .fc_hidden_layer3_q0(fc_hidden_layer3_q0),
    .probability_result_address0(grp_forward_fu_786_probability_result_address0),
    .probability_result_ce0(grp_forward_fu_786_probability_result_ce0),
    .probability_result_we0(grp_forward_fu_786_probability_result_we0),
    .probability_result_d0(grp_forward_fu_786_probability_result_d0)
);

backward grp_backward_fu_824(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_backward_fu_824_ap_start),
    .ap_done(grp_backward_fu_824_ap_done),
    .ap_idle(grp_backward_fu_824_ap_idle),
    .ap_ready(grp_backward_fu_824_ap_ready),
    .label_r(label_read_reg_1291),
    .m_axi_lr_in_AWVALID(grp_backward_fu_824_m_axi_lr_in_AWVALID),
    .m_axi_lr_in_AWREADY(1'b0),
    .m_axi_lr_in_AWADDR(grp_backward_fu_824_m_axi_lr_in_AWADDR),
    .m_axi_lr_in_AWID(grp_backward_fu_824_m_axi_lr_in_AWID),
    .m_axi_lr_in_AWLEN(grp_backward_fu_824_m_axi_lr_in_AWLEN),
    .m_axi_lr_in_AWSIZE(grp_backward_fu_824_m_axi_lr_in_AWSIZE),
    .m_axi_lr_in_AWBURST(grp_backward_fu_824_m_axi_lr_in_AWBURST),
    .m_axi_lr_in_AWLOCK(grp_backward_fu_824_m_axi_lr_in_AWLOCK),
    .m_axi_lr_in_AWCACHE(grp_backward_fu_824_m_axi_lr_in_AWCACHE),
    .m_axi_lr_in_AWPROT(grp_backward_fu_824_m_axi_lr_in_AWPROT),
    .m_axi_lr_in_AWQOS(grp_backward_fu_824_m_axi_lr_in_AWQOS),
    .m_axi_lr_in_AWREGION(grp_backward_fu_824_m_axi_lr_in_AWREGION),
    .m_axi_lr_in_AWUSER(grp_backward_fu_824_m_axi_lr_in_AWUSER),
    .m_axi_lr_in_WVALID(grp_backward_fu_824_m_axi_lr_in_WVALID),
    .m_axi_lr_in_WREADY(1'b0),
    .m_axi_lr_in_WDATA(grp_backward_fu_824_m_axi_lr_in_WDATA),
    .m_axi_lr_in_WSTRB(grp_backward_fu_824_m_axi_lr_in_WSTRB),
    .m_axi_lr_in_WLAST(grp_backward_fu_824_m_axi_lr_in_WLAST),
    .m_axi_lr_in_WID(grp_backward_fu_824_m_axi_lr_in_WID),
    .m_axi_lr_in_WUSER(grp_backward_fu_824_m_axi_lr_in_WUSER),
    .m_axi_lr_in_ARVALID(grp_backward_fu_824_m_axi_lr_in_ARVALID),
    .m_axi_lr_in_ARREADY(data_ARREADY),
    .m_axi_lr_in_ARADDR(grp_backward_fu_824_m_axi_lr_in_ARADDR),
    .m_axi_lr_in_ARID(grp_backward_fu_824_m_axi_lr_in_ARID),
    .m_axi_lr_in_ARLEN(grp_backward_fu_824_m_axi_lr_in_ARLEN),
    .m_axi_lr_in_ARSIZE(grp_backward_fu_824_m_axi_lr_in_ARSIZE),
    .m_axi_lr_in_ARBURST(grp_backward_fu_824_m_axi_lr_in_ARBURST),
    .m_axi_lr_in_ARLOCK(grp_backward_fu_824_m_axi_lr_in_ARLOCK),
    .m_axi_lr_in_ARCACHE(grp_backward_fu_824_m_axi_lr_in_ARCACHE),
    .m_axi_lr_in_ARPROT(grp_backward_fu_824_m_axi_lr_in_ARPROT),
    .m_axi_lr_in_ARQOS(grp_backward_fu_824_m_axi_lr_in_ARQOS),
    .m_axi_lr_in_ARREGION(grp_backward_fu_824_m_axi_lr_in_ARREGION),
    .m_axi_lr_in_ARUSER(grp_backward_fu_824_m_axi_lr_in_ARUSER),
    .m_axi_lr_in_RVALID(data_RVALID),
    .m_axi_lr_in_RREADY(grp_backward_fu_824_m_axi_lr_in_RREADY),
    .m_axi_lr_in_RDATA(data_RDATA),
    .m_axi_lr_in_RLAST(data_RLAST),
    .m_axi_lr_in_RID(data_RID),
    .m_axi_lr_in_RUSER(data_RUSER),
    .m_axi_lr_in_RRESP(data_RRESP),
    .m_axi_lr_in_BVALID(1'b0),
    .m_axi_lr_in_BREADY(grp_backward_fu_824_m_axi_lr_in_BREADY),
    .m_axi_lr_in_BRESP(2'd0),
    .m_axi_lr_in_BID(1'd0),
    .m_axi_lr_in_BUSER(1'd0),
    .lr_in_offset(lr1_reg_1301),
    .probability_result_address0(grp_backward_fu_824_probability_result_address0),
    .probability_result_ce0(grp_backward_fu_824_probability_result_ce0),
    .probability_result_q0(probability_result_q0),
    .fc_in_3_relu2_0_address0(grp_backward_fu_824_fc_in_3_relu2_0_address0),
    .fc_in_3_relu2_0_ce0(grp_backward_fu_824_fc_in_3_relu2_0_ce0),
    .fc_in_3_relu2_0_q0(fc_in_3_relu2_0_q0),
    .fc_hidden_layer3_address0(grp_backward_fu_824_fc_hidden_layer3_address0),
    .fc_hidden_layer3_ce0(grp_backward_fu_824_fc_hidden_layer3_ce0),
    .fc_hidden_layer3_we0(grp_backward_fu_824_fc_hidden_layer3_we0),
    .fc_hidden_layer3_d0(grp_backward_fu_824_fc_hidden_layer3_d0),
    .fc_hidden_layer3_q0(fc_hidden_layer3_q0),
    .fc_out_2_0_address0(grp_backward_fu_824_fc_out_2_0_address0),
    .fc_out_2_0_ce0(grp_backward_fu_824_fc_out_2_0_ce0),
    .fc_out_2_0_q0(fc_out_2_0_q0),
    .fc_in_2_relu1_0_address0(grp_backward_fu_824_fc_in_2_relu1_0_address0),
    .fc_in_2_relu1_0_ce0(grp_backward_fu_824_fc_in_2_relu1_0_ce0),
    .fc_in_2_relu1_0_q0(fc_in_2_relu1_0_q0),
    .fc_hidden_layer2_address0(grp_backward_fu_824_fc_hidden_layer2_address0),
    .fc_hidden_layer2_ce0(grp_backward_fu_824_fc_hidden_layer2_ce0),
    .fc_hidden_layer2_q0(fc_hidden_layer2_q0),
    .fc_hidden_layer2_address1(grp_backward_fu_824_fc_hidden_layer2_address1),
    .fc_hidden_layer2_ce1(grp_backward_fu_824_fc_hidden_layer2_ce1),
    .fc_hidden_layer2_we1(grp_backward_fu_824_fc_hidden_layer2_we1),
    .fc_hidden_layer2_d1(grp_backward_fu_824_fc_hidden_layer2_d1),
    .fc_out_1_0_address0(grp_backward_fu_824_fc_out_1_0_address0),
    .fc_out_1_0_ce0(grp_backward_fu_824_fc_out_1_0_ce0),
    .fc_out_1_0_q0(fc_out_1_0_q0),
    .fc_in_1_0_address0(grp_backward_fu_824_fc_in_1_0_address0),
    .fc_in_1_0_ce0(grp_backward_fu_824_fc_in_1_0_ce0),
    .fc_in_1_0_q0(fc_in_1_0_q0),
    .fc_hidden_layer1_address0(grp_backward_fu_824_fc_hidden_layer1_address0),
    .fc_hidden_layer1_ce0(grp_backward_fu_824_fc_hidden_layer1_ce0),
    .fc_hidden_layer1_we0(grp_backward_fu_824_fc_hidden_layer1_we0),
    .fc_hidden_layer1_d0(grp_backward_fu_824_fc_hidden_layer1_d0),
    .fc_hidden_layer1_q0(fc_hidden_layer1_q0),
    .conv_out_2_address0(grp_backward_fu_824_conv_out_2_address0),
    .conv_out_2_ce0(grp_backward_fu_824_conv_out_2_ce0),
    .conv_out_2_q0(conv_out_2_q0),
    .conv_kernel_3_address0(grp_backward_fu_824_conv_kernel_3_address0),
    .conv_kernel_3_ce0(grp_backward_fu_824_conv_kernel_3_ce0),
    .conv_kernel_3_we0(grp_backward_fu_824_conv_kernel_3_we0),
    .conv_kernel_3_d0(grp_backward_fu_824_conv_kernel_3_d0),
    .conv_kernel_3_q0(conv_kernel_3_q0),
    .conv_out_1_address0(grp_backward_fu_824_conv_out_1_address0),
    .conv_out_1_ce0(grp_backward_fu_824_conv_out_1_ce0),
    .conv_out_1_q0(conv_out_1_q0),
    .conv_kernel_2_address0(grp_backward_fu_824_conv_kernel_2_address0),
    .conv_kernel_2_ce0(grp_backward_fu_824_conv_kernel_2_ce0),
    .conv_kernel_2_we0(grp_backward_fu_824_conv_kernel_2_we0),
    .conv_kernel_2_d0(grp_backward_fu_824_conv_kernel_2_d0),
    .conv_kernel_2_q0(conv_kernel_2_q0),
    .mnist_data_address0(grp_backward_fu_824_mnist_data_address0),
    .mnist_data_ce0(grp_backward_fu_824_mnist_data_ce0),
    .mnist_data_q0(mnist_data_q0),
    .conv_kernel_1_address0(grp_backward_fu_824_conv_kernel_1_address0),
    .conv_kernel_1_ce0(grp_backward_fu_824_conv_kernel_1_ce0),
    .conv_kernel_1_we0(grp_backward_fu_824_conv_kernel_1_we0),
    .conv_kernel_1_d0(grp_backward_fu_824_conv_kernel_1_d0),
    .conv_kernel_1_q0(conv_kernel_1_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp10_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp10_exit_iter0_state100) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_subdone))) begin
            ap_enable_reg_pp10_iter0 <= 1'b0;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99))) begin
            ap_enable_reg_pp10_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp10_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp10_exit_iter0_state100)) begin
                ap_enable_reg_pp10_iter1 <= (1'b1 ^ ap_condition_pp10_exit_iter0_state100);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp10_iter1 <= ap_enable_reg_pp10_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp10_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp10_stage0_subdone)) begin
            ap_enable_reg_pp10_iter2 <= ap_enable_reg_pp10_iter1;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99))) begin
            ap_enable_reg_pp10_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp11_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp11_exit_iter0_state108) & (1'b1 == ap_CS_fsm_pp11_stage0) & (1'b0 == ap_block_pp11_stage0_subdone))) begin
            ap_enable_reg_pp11_iter0 <= 1'b0;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107))) begin
            ap_enable_reg_pp11_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp11_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp11_exit_iter0_state108)) begin
                ap_enable_reg_pp11_iter1 <= (1'b1 ^ ap_condition_pp11_exit_iter0_state108);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp11_iter1 <= ap_enable_reg_pp11_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp11_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp11_stage0_subdone)) begin
            ap_enable_reg_pp11_iter2 <= ap_enable_reg_pp11_iter1;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107))) begin
            ap_enable_reg_pp11_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp12_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp12_exit_iter0_state116) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_subdone))) begin
            ap_enable_reg_pp12_iter0 <= 1'b0;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115))) begin
            ap_enable_reg_pp12_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp12_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp12_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp12_exit_iter0_state116)) begin
                ap_enable_reg_pp12_iter1 <= (1'b1 ^ ap_condition_pp12_exit_iter0_state116);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp12_iter1 <= ap_enable_reg_pp12_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp12_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp12_stage0_subdone)) begin
            ap_enable_reg_pp12_iter2 <= ap_enable_reg_pp12_iter1;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115))) begin
            ap_enable_reg_pp12_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp13_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp13_exit_iter0_state124) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_subdone))) begin
            ap_enable_reg_pp13_iter0 <= 1'b0;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123))) begin
            ap_enable_reg_pp13_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp13_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp13_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp13_exit_iter0_state124)) begin
                ap_enable_reg_pp13_iter1 <= (1'b1 ^ ap_condition_pp13_exit_iter0_state124);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp13_iter1 <= ap_enable_reg_pp13_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp13_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp13_stage0_subdone)) begin
            ap_enable_reg_pp13_iter2 <= ap_enable_reg_pp13_iter1;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123))) begin
            ap_enable_reg_pp13_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp14_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp14_stage0) & (1'b1 == ap_condition_pp14_exit_iter0_state132) & (1'b0 == ap_block_pp14_stage0_subdone))) begin
            ap_enable_reg_pp14_iter0 <= 1'b0;
        end else if ((~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            ap_enable_reg_pp14_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp14_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp14_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp14_exit_iter0_state132)) begin
                ap_enable_reg_pp14_iter1 <= (1'b1 ^ ap_condition_pp14_exit_iter0_state132);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp14_iter1 <= ap_enable_reg_pp14_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp14_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp14_stage0_subdone)) begin
            ap_enable_reg_pp14_iter2 <= ap_enable_reg_pp14_iter1;
        end else if ((~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
            ap_enable_reg_pp14_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state19)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state29) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state29)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state29);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_condition_pp3_exit_iter0_state39) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state39)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state39);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state38)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b1 == ap_condition_pp4_exit_iter0_state49) & (1'b0 == ap_block_pp4_stage0_subdone))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state49)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state49);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp5_stage0) & (1'b1 == ap_condition_pp5_exit_iter0_state59) & (1'b0 == ap_block_pp5_stage0_subdone))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state59)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state59);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state58)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp6_stage0) & (1'b1 == ap_condition_pp6_exit_iter0_state69) & (1'b0 == ap_block_pp6_stage0_subdone))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state68)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state69)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state69);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state68)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp7_stage0) & (1'b1 == ap_condition_pp7_exit_iter0_state76) & (1'b0 == ap_block_pp7_stage0_subdone))) begin
            ap_enable_reg_pp7_iter0 <= 1'b0;
        end else if ((~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_enable_reg_pp7_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp7_exit_iter0_state76)) begin
                ap_enable_reg_pp7_iter1 <= (1'b1 ^ ap_condition_pp7_exit_iter0_state76);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp7_iter1 <= ap_enable_reg_pp7_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp7_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp7_stage0_subdone)) begin
            ap_enable_reg_pp7_iter2 <= ap_enable_reg_pp7_iter1;
        end else if ((~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_enable_reg_pp7_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp8_exit_iter0_state84) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_subdone))) begin
            ap_enable_reg_pp8_iter0 <= 1'b0;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
            ap_enable_reg_pp8_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp8_exit_iter0_state84)) begin
                ap_enable_reg_pp8_iter1 <= (1'b1 ^ ap_condition_pp8_exit_iter0_state84);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp8_iter1 <= ap_enable_reg_pp8_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp8_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp8_stage0_subdone)) begin
            ap_enable_reg_pp8_iter2 <= ap_enable_reg_pp8_iter1;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
            ap_enable_reg_pp8_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp9_exit_iter0_state92) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_subdone))) begin
            ap_enable_reg_pp9_iter0 <= 1'b0;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91))) begin
            ap_enable_reg_pp9_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp9_exit_iter0_state92)) begin
                ap_enable_reg_pp9_iter1 <= (1'b1 ^ ap_condition_pp9_exit_iter0_state92);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp9_iter1 <= ap_enable_reg_pp9_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp9_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp9_stage0_subdone)) begin
            ap_enable_reg_pp9_iter2 <= ap_enable_reg_pp9_iter1;
        end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91))) begin
            ap_enable_reg_pp9_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_backward_fu_824_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state74)) begin
            grp_backward_fu_824_ap_start_reg <= 1'b1;
        end else if ((grp_backward_fu_824_ap_ready == 1'b1)) begin
            grp_backward_fu_824_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_forward_fu_786_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state72)) begin
            grp_forward_fu_786_ap_start_reg <= 1'b1;
        end else if ((grp_forward_fu_786_ap_ready == 1'b1)) begin
            grp_forward_fu_786_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln207_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        phi_ln207_reg_614 <= add_ln207_reg_1405;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_ln207_reg_614 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        phi_ln208_reg_626 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln208_reg_1415 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phi_ln208_reg_626 <= add_ln208_reg_1419;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        phi_ln209_reg_638 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln209_reg_1429 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        phi_ln209_reg_638 <= add_ln209_reg_1433;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        phi_ln210_reg_650 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln210_reg_1443 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        phi_ln210_reg_650 <= add_ln210_reg_1447;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        phi_ln211_reg_662 <= 17'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln211_reg_1457 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        phi_ln211_reg_662 <= add_ln211_reg_1461;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        phi_ln212_reg_674 <= 13'd0;
    end else if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln212_reg_1471 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        phi_ln212_reg_674 <= add_ln212_reg_1475;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        phi_ln213_reg_686 <= 9'd0;
    end else if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln213_reg_1485 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        phi_ln213_reg_686 <= add_ln213_reg_1489;
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
        phi_ln217_reg_775 <= 4'd0;
    end else if (((1'b0 == ap_block_pp14_stage0_11001) & (icmp_ln217_fu_1274_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter0 == 1'b1))) begin
        phi_ln217_reg_775 <= add_ln217_fu_1280_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln222_fu_1155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        phi_ln222_reg_698 <= add_ln222_fu_1161_p2;
    end else if ((~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
        phi_ln222_reg_698 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
        phi_ln224_reg_709 <= 4'd0;
    end else if (((icmp_ln224_fu_1172_p2 == 1'd0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        phi_ln224_reg_709 <= add_ln224_fu_1178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91))) begin
        phi_ln225_reg_720 <= 4'd0;
    end else if (((icmp_ln225_fu_1189_p2 == 1'd0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        phi_ln225_reg_720 <= add_ln225_fu_1195_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99))) begin
        phi_ln226_reg_731 <= 4'd0;
    end else if (((icmp_ln226_fu_1206_p2 == 1'd0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        phi_ln226_reg_731 <= add_ln226_fu_1212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107))) begin
        phi_ln227_reg_742 <= 17'd0;
    end else if (((icmp_ln227_fu_1223_p2 == 1'd0) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (1'b0 == ap_block_pp11_stage0_11001))) begin
        phi_ln227_reg_742 <= add_ln227_fu_1229_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115))) begin
        phi_ln228_reg_753 <= 13'd0;
    end else if (((icmp_ln228_fu_1240_p2 == 1'd0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        phi_ln228_reg_753 <= add_ln228_fu_1246_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123))) begin
        phi_ln229_reg_764 <= 9'd0;
    end else if (((icmp_ln229_fu_1257_p2 == 1'd0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        phi_ln229_reg_764 <= add_ln229_fu_1263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln207_reg_1405 <= add_ln207_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln208_reg_1419 <= add_ln208_fu_1054_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln209_reg_1433 <= add_ln209_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        add_ln210_reg_1447 <= add_ln210_fu_1088_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1))) begin
        add_ln211_reg_1461 <= add_ln211_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1))) begin
        add_ln212_reg_1475 <= add_ln212_fu_1122_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1))) begin
        add_ln213_reg_1489 <= add_ln213_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        conv4_reg_1331 <= {{conv2[31:2]}};
        conv5_reg_1336 <= {{conv1[31:2]}};
        conv_reg_1326 <= {{conv3[31:2]}};
        fc4_reg_1316 <= {{fc2[31:2]}};
        fc5_reg_1321 <= {{fc1[31:2]}};
        fc_reg_1311 <= {{fc3[31:2]}};
        flag_read_reg_1296 <= flag;
        in1_reg_1341 <= {{in_r[31:2]}};
        label_read_reg_1291 <= label_r;
        lr1_reg_1301 <= {{lr[31:2]}};
        out1_reg_1306 <= {{out_r[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln224_reg_1517 == 1'd0) & (ap_enable_reg_pp8_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        conv_kernel_1_load_reg_1531 <= conv_kernel_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln225_reg_1536 == 1'd0) & (ap_enable_reg_pp9_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        conv_kernel_2_load_reg_1550 <= conv_kernel_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln226_reg_1555 == 1'd0) & (ap_enable_reg_pp10_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        conv_kernel_3_load_reg_1569 <= conv_kernel_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln213_reg_1485 == 1'd0) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        data_addr_1_read_reg_1494 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        data_addr_1_reg_1359[29 : 0] <= empty_23_fu_977_p1[29 : 0];
        data_addr_2_reg_1366[29 : 0] <= empty_24_fu_986_p1[29 : 0];
        data_addr_3_reg_1373[29 : 0] <= empty_25_fu_995_p1[29 : 0];
        data_addr_4_reg_1380[29 : 0] <= empty_26_fu_1004_p1[29 : 0];
        data_addr_5_reg_1387[29 : 0] <= empty_27_fu_1013_p1[29 : 0];
        data_addr_6_reg_1394[29 : 0] <= empty_28_fu_1022_p1[29 : 0];
        data_addr_reg_1352[29 : 0] <= empty_fu_968_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln212_reg_1471 == 1'd0) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        data_addr_2_read_reg_1480 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln211_reg_1457 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        data_addr_3_read_reg_1466 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln210_reg_1443 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        data_addr_4_read_reg_1452 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln209_reg_1429 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        data_addr_5_read_reg_1438 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln208_reg_1415 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        data_addr_6_read_reg_1424 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln207_reg_1401 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_addr_7_read_reg_1410 <= data_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln227_reg_1574 == 1'd0) & (ap_enable_reg_pp11_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (1'b0 == ap_block_pp11_stage0_11001))) begin
        fc_hidden_layer1_loa_reg_1588 <= fc_hidden_layer1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln228_reg_1593 == 1'd0) & (ap_enable_reg_pp12_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        fc_hidden_layer2_loa_reg_1607 <= fc_hidden_layer2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln229_reg_1612 == 1'd0) & (ap_enable_reg_pp13_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        fc_hidden_layer3_loa_reg_1626 <= fc_hidden_layer3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln207_reg_1401 <= icmp_ln207_fu_1031_p2;
        icmp_ln207_reg_1401_pp0_iter1_reg <= icmp_ln207_reg_1401;
        phi_ln207_reg_614_pp0_iter1_reg <= phi_ln207_reg_614;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln208_reg_1415 <= icmp_ln208_fu_1048_p2;
        icmp_ln208_reg_1415_pp1_iter1_reg <= icmp_ln208_reg_1415;
        phi_ln208_reg_626_pp1_iter1_reg <= phi_ln208_reg_626;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln209_reg_1429 <= icmp_ln209_fu_1065_p2;
        icmp_ln209_reg_1429_pp2_iter1_reg <= icmp_ln209_reg_1429;
        phi_ln209_reg_638_pp2_iter1_reg <= phi_ln209_reg_638;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln210_reg_1443 <= icmp_ln210_fu_1082_p2;
        icmp_ln210_reg_1443_pp3_iter1_reg <= icmp_ln210_reg_1443;
        phi_ln210_reg_650_pp3_iter1_reg <= phi_ln210_reg_650;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln211_reg_1457 <= icmp_ln211_fu_1099_p2;
        icmp_ln211_reg_1457_pp4_iter1_reg <= icmp_ln211_reg_1457;
        phi_ln211_reg_662_pp4_iter1_reg <= phi_ln211_reg_662;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln212_reg_1471 <= icmp_ln212_fu_1116_p2;
        icmp_ln212_reg_1471_pp5_iter1_reg <= icmp_ln212_reg_1471;
        phi_ln212_reg_674_pp5_iter1_reg <= phi_ln212_reg_674;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln213_reg_1485 <= icmp_ln213_fu_1133_p2;
        icmp_ln213_reg_1485_pp6_iter1_reg <= icmp_ln213_reg_1485;
        phi_ln213_reg_686_pp6_iter1_reg <= phi_ln213_reg_686;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        icmp_ln215_reg_1499 <= icmp_ln215_fu_1150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0))) begin
        icmp_ln217_reg_1631 <= icmp_ln217_fu_1274_p2;
        icmp_ln217_reg_1631_pp14_iter1_reg <= icmp_ln217_reg_1631;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0))) begin
        icmp_ln222_reg_1503 <= icmp_ln222_fu_1155_p2;
        icmp_ln222_reg_1503_pp7_iter1_reg <= icmp_ln222_reg_1503;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001))) begin
        icmp_ln224_reg_1517 <= icmp_ln224_fu_1172_p2;
        icmp_ln224_reg_1517_pp8_iter1_reg <= icmp_ln224_reg_1517;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001))) begin
        icmp_ln225_reg_1536 <= icmp_ln225_fu_1189_p2;
        icmp_ln225_reg_1536_pp9_iter1_reg <= icmp_ln225_reg_1536;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001))) begin
        icmp_ln226_reg_1555 <= icmp_ln226_fu_1206_p2;
        icmp_ln226_reg_1555_pp10_iter1_reg <= icmp_ln226_reg_1555;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp11_stage0) & (1'b0 == ap_block_pp11_stage0_11001))) begin
        icmp_ln227_reg_1574 <= icmp_ln227_fu_1223_p2;
        icmp_ln227_reg_1574_pp11_iter1_reg <= icmp_ln227_reg_1574;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        icmp_ln228_reg_1593 <= icmp_ln228_fu_1240_p2;
        icmp_ln228_reg_1593_pp12_iter1_reg <= icmp_ln228_reg_1593;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001))) begin
        icmp_ln229_reg_1612 <= icmp_ln229_fu_1257_p2;
        icmp_ln229_reg_1612_pp13_iter1_reg <= icmp_ln229_reg_1612;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp14_stage0_11001) & (icmp_ln217_reg_1631 == 1'd0) & (ap_enable_reg_pp14_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp14_stage0)) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln222_reg_1503 == 1'd0) & (ap_enable_reg_pp7_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp7_stage0)))) begin
        reg_862 <= probability_result_q0;
    end
end

always @ (*) begin
    if ((icmp_ln207_fu_1031_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln226_fu_1206_p2 == 1'd1)) begin
        ap_condition_pp10_exit_iter0_state100 = 1'b1;
    end else begin
        ap_condition_pp10_exit_iter0_state100 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln227_fu_1223_p2 == 1'd1)) begin
        ap_condition_pp11_exit_iter0_state108 = 1'b1;
    end else begin
        ap_condition_pp11_exit_iter0_state108 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln228_fu_1240_p2 == 1'd1)) begin
        ap_condition_pp12_exit_iter0_state116 = 1'b1;
    end else begin
        ap_condition_pp12_exit_iter0_state116 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln229_fu_1257_p2 == 1'd1)) begin
        ap_condition_pp13_exit_iter0_state124 = 1'b1;
    end else begin
        ap_condition_pp13_exit_iter0_state124 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln217_fu_1274_p2 == 1'd1)) begin
        ap_condition_pp14_exit_iter0_state132 = 1'b1;
    end else begin
        ap_condition_pp14_exit_iter0_state132 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln208_fu_1048_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln209_fu_1065_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state29 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state29 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln210_fu_1082_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state39 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state39 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln211_fu_1099_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state49 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state49 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln212_fu_1116_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state59 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state59 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln213_fu_1133_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state69 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state69 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln222_fu_1155_p2 == 1'd1)) begin
        ap_condition_pp7_exit_iter0_state76 = 1'b1;
    end else begin
        ap_condition_pp7_exit_iter0_state76 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln224_fu_1172_p2 == 1'd1)) begin
        ap_condition_pp8_exit_iter0_state84 = 1'b1;
    end else begin
        ap_condition_pp8_exit_iter0_state84 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln225_fu_1189_p2 == 1'd1)) begin
        ap_condition_pp9_exit_iter0_state92 = 1'b1;
    end else begin
        ap_condition_pp9_exit_iter0_state92 = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln215_reg_1499 == 1'd0) & (data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state131))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp10_iter2 == 1'b0) & (ap_enable_reg_pp10_iter1 == 1'b0) & (ap_enable_reg_pp10_iter0 == 1'b0))) begin
        ap_idle_pp10 = 1'b1;
    end else begin
        ap_idle_pp10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp11_iter2 == 1'b0) & (ap_enable_reg_pp11_iter1 == 1'b0) & (ap_enable_reg_pp11_iter0 == 1'b0))) begin
        ap_idle_pp11 = 1'b1;
    end else begin
        ap_idle_pp11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter2 == 1'b0) & (ap_enable_reg_pp12_iter1 == 1'b0) & (ap_enable_reg_pp12_iter0 == 1'b0))) begin
        ap_idle_pp12 = 1'b1;
    end else begin
        ap_idle_pp12 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp13_iter2 == 1'b0) & (ap_enable_reg_pp13_iter1 == 1'b0) & (ap_enable_reg_pp13_iter0 == 1'b0))) begin
        ap_idle_pp13 = 1'b1;
    end else begin
        ap_idle_pp13 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp14_iter1 == 1'b0) & (ap_enable_reg_pp14_iter2 == 1'b0) & (ap_enable_reg_pp14_iter0 == 1'b0))) begin
        ap_idle_pp14 = 1'b1;
    end else begin
        ap_idle_pp14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b0) & (ap_enable_reg_pp7_iter0 == 1'b0))) begin
        ap_idle_pp7 = 1'b1;
    end else begin
        ap_idle_pp7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp8_iter2 == 1'b0) & (ap_enable_reg_pp8_iter1 == 1'b0) & (ap_enable_reg_pp8_iter0 == 1'b0))) begin
        ap_idle_pp8 = 1'b1;
    end else begin
        ap_idle_pp8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp9_iter2 == 1'b0) & (ap_enable_reg_pp9_iter1 == 1'b0) & (ap_enable_reg_pp9_iter0 == 1'b0))) begin
        ap_idle_pp9 = 1'b1;
    end else begin
        ap_idle_pp9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln207_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_phi_ln207_phi_fu_618_p4 = add_ln207_reg_1405;
    end else begin
        ap_phi_mux_phi_ln207_phi_fu_618_p4 = phi_ln207_reg_614;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln208_reg_1415 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_phi_ln208_phi_fu_630_p4 = add_ln208_reg_1419;
    end else begin
        ap_phi_mux_phi_ln208_phi_fu_630_p4 = phi_ln208_reg_626;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (icmp_ln209_reg_1429 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_phi_ln209_phi_fu_642_p4 = add_ln209_reg_1433;
    end else begin
        ap_phi_mux_phi_ln209_phi_fu_642_p4 = phi_ln209_reg_638;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (icmp_ln210_reg_1443 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_phi_ln210_phi_fu_654_p4 = add_ln210_reg_1447;
    end else begin
        ap_phi_mux_phi_ln210_phi_fu_654_p4 = phi_ln210_reg_650;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (icmp_ln211_reg_1457 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_phi_ln211_phi_fu_666_p4 = add_ln211_reg_1461;
    end else begin
        ap_phi_mux_phi_ln211_phi_fu_666_p4 = phi_ln211_reg_662;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (icmp_ln212_reg_1471 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        ap_phi_mux_phi_ln212_phi_fu_678_p4 = add_ln212_reg_1475;
    end else begin
        ap_phi_mux_phi_ln212_phi_fu_678_p4 = phi_ln212_reg_674;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (icmp_ln213_reg_1485 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        ap_phi_mux_phi_ln213_phi_fu_690_p4 = add_ln213_reg_1489;
    end else begin
        ap_phi_mux_phi_ln213_phi_fu_690_p4 = phi_ln213_reg_686;
    end
end

always @ (*) begin
    if ((~((icmp_ln215_reg_1499 == 1'd0) & (data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state131))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp8_stage0) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0))) begin
        conv_kernel_1_address0 = zext_ln224_fu_1184_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        conv_kernel_1_address0 = zext_ln208_fu_1060_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_1_address0 = grp_backward_fu_824_conv_kernel_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_kernel_1_address0 = grp_forward_fu_786_conv_kernel_1_address0;
    end else begin
        conv_kernel_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp8_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp8_stage0) & (1'b0 == ap_block_pp8_stage0_11001)))) begin
        conv_kernel_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_1_ce0 = grp_backward_fu_824_conv_kernel_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_kernel_1_ce0 = grp_forward_fu_786_conv_kernel_1_ce0;
    end else begin
        conv_kernel_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        conv_kernel_1_d0 = data_addr_6_read_reg_1424;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_1_d0 = grp_backward_fu_824_conv_kernel_1_d0;
    end else begin
        conv_kernel_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln208_reg_1415_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        conv_kernel_1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_1_we0 = grp_backward_fu_824_conv_kernel_1_we0;
    end else begin
        conv_kernel_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp9_stage0) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0))) begin
        conv_kernel_2_address0 = zext_ln225_fu_1201_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        conv_kernel_2_address0 = zext_ln209_fu_1077_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_2_address0 = grp_backward_fu_824_conv_kernel_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_kernel_2_address0 = grp_forward_fu_786_conv_kernel_2_address0;
    end else begin
        conv_kernel_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1)) | ((ap_enable_reg_pp9_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp9_stage0) & (1'b0 == ap_block_pp9_stage0_11001)))) begin
        conv_kernel_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_2_ce0 = grp_backward_fu_824_conv_kernel_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_kernel_2_ce0 = grp_forward_fu_786_conv_kernel_2_ce0;
    end else begin
        conv_kernel_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        conv_kernel_2_d0 = data_addr_5_read_reg_1438;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_2_d0 = grp_backward_fu_824_conv_kernel_2_d0;
    end else begin
        conv_kernel_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln209_reg_1429_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        conv_kernel_2_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_2_we0 = grp_backward_fu_824_conv_kernel_2_we0;
    end else begin
        conv_kernel_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp10_stage0) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0))) begin
        conv_kernel_3_address0 = zext_ln226_fu_1218_p1;
    end else if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        conv_kernel_3_address0 = zext_ln210_fu_1094_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_3_address0 = grp_backward_fu_824_conv_kernel_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_kernel_3_address0 = grp_forward_fu_786_conv_kernel_3_address0;
    end else begin
        conv_kernel_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((ap_enable_reg_pp10_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp10_stage0) & (1'b0 == ap_block_pp10_stage0_11001)))) begin
        conv_kernel_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_3_ce0 = grp_backward_fu_824_conv_kernel_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_kernel_3_ce0 = grp_forward_fu_786_conv_kernel_3_ce0;
    end else begin
        conv_kernel_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        conv_kernel_3_d0 = data_addr_4_read_reg_1452;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_3_d0 = grp_backward_fu_824_conv_kernel_3_d0;
    end else begin
        conv_kernel_3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln210_reg_1443_pp3_iter1_reg == 1'd0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        conv_kernel_3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_kernel_3_we0 = grp_backward_fu_824_conv_kernel_3_we0;
    end else begin
        conv_kernel_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_out_1_address0 = grp_backward_fu_824_conv_out_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_out_1_address0 = grp_forward_fu_786_conv_out_1_address0;
    end else begin
        conv_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_out_1_ce0 = grp_backward_fu_824_conv_out_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_out_1_ce0 = grp_forward_fu_786_conv_out_1_ce0;
    end else begin
        conv_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_out_1_we0 = grp_forward_fu_786_conv_out_1_we0;
    end else begin
        conv_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_out_2_address0 = grp_backward_fu_824_conv_out_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_out_2_address0 = grp_forward_fu_786_conv_out_2_address0;
    end else begin
        conv_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        conv_out_2_ce0 = grp_backward_fu_824_conv_out_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_out_2_ce0 = grp_forward_fu_786_conv_out_2_ce0;
    end else begin
        conv_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        conv_out_2_we0 = grp_forward_fu_786_conv_out_2_we0;
    end else begin
        conv_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
        data_ARADDR = data_addr_1_reg_1359;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        data_ARADDR = data_addr_2_reg_1366;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        data_ARADDR = data_addr_3_reg_1373;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        data_ARADDR = data_addr_4_reg_1380;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
        data_ARADDR = data_addr_5_reg_1387;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        data_ARADDR = data_addr_6_reg_1394;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_ARADDR = empty_29_fu_958_p1;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARADDR = grp_backward_fu_824_m_axi_lr_in_ARADDR;
    end else begin
        data_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARBURST = grp_backward_fu_824_m_axi_lr_in_ARBURST;
    end else begin
        data_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARCACHE = grp_backward_fu_824_m_axi_lr_in_ARCACHE;
    end else begin
        data_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARID = grp_backward_fu_824_m_axi_lr_in_ARID;
    end else begin
        data_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
        data_ARLEN = 32'd450;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        data_ARLEN = 32'd8100;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
        data_ARLEN = 32'd103680;
    end else if ((((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)))) begin
        data_ARLEN = 32'd9;
    end else if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        data_ARLEN = 32'd900;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARLEN = grp_backward_fu_824_m_axi_lr_in_ARLEN;
    end else begin
        data_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARLOCK = grp_backward_fu_824_m_axi_lr_in_ARLOCK;
    end else begin
        data_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARPROT = grp_backward_fu_824_m_axi_lr_in_ARPROT;
    end else begin
        data_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARQOS = grp_backward_fu_824_m_axi_lr_in_ARQOS;
    end else begin
        data_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARREGION = grp_backward_fu_824_m_axi_lr_in_ARREGION;
    end else begin
        data_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARSIZE = grp_backward_fu_824_m_axi_lr_in_ARSIZE;
    end else begin
        data_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARUSER = grp_backward_fu_824_m_axi_lr_in_ARUSER;
    end else begin
        data_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if ((((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state22)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62)))) begin
        data_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_ARVALID = grp_backward_fu_824_m_axi_lr_in_ARVALID;
    end else begin
        data_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75)) | (~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73)))) begin
        data_AWADDR = data_addr_reg_1352;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123))) begin
        data_AWADDR = data_addr_1_reg_1359;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115))) begin
        data_AWADDR = data_addr_2_reg_1366;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107))) begin
        data_AWADDR = data_addr_3_reg_1373;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99))) begin
        data_AWADDR = data_addr_4_reg_1380;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91))) begin
        data_AWADDR = data_addr_5_reg_1387;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
        data_AWADDR = data_addr_6_reg_1394;
    end else begin
        data_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75)) | (~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73)))) begin
        data_AWLEN = 32'd10;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123))) begin
        data_AWLEN = 32'd450;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115))) begin
        data_AWLEN = 32'd8100;
    end else if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107))) begin
        data_AWLEN = 32'd103680;
    end else if (((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83)))) begin
        data_AWLEN = 32'd9;
    end else begin
        data_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83)) | (~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75)) | (~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73)))) begin
        data_AWVALID = 1'b1;
    end else begin
        data_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115)) | (~((icmp_ln215_reg_1499 == 1'd0) & (data_BVALID == 1'b0)) & (icmp_ln215_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_state131)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123)) | ((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state139)) | (~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83)))) begin
        data_BREADY = 1'b1;
    end else begin
        data_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln207_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln208_reg_1415 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln209_reg_1429 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln210_reg_1443 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln211_reg_1457 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln212_reg_1471 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln213_reg_1485 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        data_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state75) | (1'b1 == ap_CS_fsm_state74))) begin
        data_RREADY = grp_backward_fu_824_m_axi_lr_in_RREADY;
    end else begin
        data_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln229_reg_1612_pp13_iter1_reg == 1'd0) & (ap_enable_reg_pp13_iter2 == 1'b1) & (1'b0 == ap_block_pp13_stage0_01001))) begin
        data_WDATA = fc_hidden_layer3_loa_reg_1626;
    end else if (((icmp_ln228_reg_1593_pp12_iter1_reg == 1'd0) & (ap_enable_reg_pp12_iter2 == 1'b1) & (1'b0 == ap_block_pp12_stage0_01001))) begin
        data_WDATA = fc_hidden_layer2_loa_reg_1607;
    end else if (((icmp_ln227_reg_1574_pp11_iter1_reg == 1'd0) & (ap_enable_reg_pp11_iter2 == 1'b1) & (1'b0 == ap_block_pp11_stage0_01001))) begin
        data_WDATA = fc_hidden_layer1_loa_reg_1588;
    end else if (((icmp_ln226_reg_1555_pp10_iter1_reg == 1'd0) & (ap_enable_reg_pp10_iter2 == 1'b1) & (1'b0 == ap_block_pp10_stage0_01001))) begin
        data_WDATA = conv_kernel_3_load_reg_1569;
    end else if (((icmp_ln225_reg_1536_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_01001))) begin
        data_WDATA = conv_kernel_2_load_reg_1550;
    end else if (((icmp_ln224_reg_1517_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_01001))) begin
        data_WDATA = conv_kernel_1_load_reg_1531;
    end else if ((((icmp_ln222_reg_1503_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_01001)) | ((icmp_ln217_reg_1631_pp14_iter1_reg == 1'd0) & (ap_enable_reg_pp14_iter2 == 1'b1) & (1'b0 == ap_block_pp14_stage0_01001)))) begin
        data_WDATA = reg_862;
    end else begin
        data_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln224_reg_1517_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_11001)) | ((icmp_ln225_reg_1536_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_11001)) | ((icmp_ln226_reg_1555_pp10_iter1_reg == 1'd0) & (ap_enable_reg_pp10_iter2 == 1'b1) & (1'b0 == ap_block_pp10_stage0_11001)) | ((icmp_ln227_reg_1574_pp11_iter1_reg == 1'd0) & (ap_enable_reg_pp11_iter2 == 1'b1) & (1'b0 == ap_block_pp11_stage0_11001)) | ((icmp_ln228_reg_1593_pp12_iter1_reg == 1'd0) & (ap_enable_reg_pp12_iter2 == 1'b1) & (1'b0 == ap_block_pp12_stage0_11001)) | ((icmp_ln229_reg_1612_pp13_iter1_reg == 1'd0) & (ap_enable_reg_pp13_iter2 == 1'b1) & (1'b0 == ap_block_pp13_stage0_11001)) | ((1'b0 == ap_block_pp7_stage0_11001) & (icmp_ln222_reg_1503_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((1'b0 == ap_block_pp14_stage0_11001) & (icmp_ln217_reg_1631_pp14_iter1_reg == 1'd0) & (ap_enable_reg_pp14_iter2 == 1'b1)))) begin
        data_WVALID = 1'b1;
    end else begin
        data_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state62))) begin
        data_blk_n_AR = m_axi_data_ARREADY;
    end else begin
        data_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state75) | ((icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73)))) begin
        data_blk_n_AW = m_axi_data_AWREADY;
    end else begin
        data_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state107) | (1'b1 == ap_CS_fsm_state115) | (1'b1 == ap_CS_fsm_state123) | (1'b1 == ap_CS_fsm_state139) | (1'b1 == ap_CS_fsm_state83) | ((icmp_ln215_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_state131)))) begin
        data_blk_n_B = m_axi_data_BVALID;
    end else begin
        data_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (icmp_ln207_reg_1401 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln208_reg_1415 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp2_stage0) & (icmp_ln209_reg_1429 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp3_stage0) & (icmp_ln210_reg_1443 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((1'b0 == ap_block_pp4_stage0) & (icmp_ln211_reg_1457 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp5_stage0) & (icmp_ln212_reg_1471 == 1'd0) & (ap_enable_reg_pp5_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0)) | ((1'b0 == ap_block_pp6_stage0) & (icmp_ln213_reg_1485 == 1'd0) & (ap_enable_reg_pp6_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0)))) begin
        data_blk_n_R = m_axi_data_RVALID;
    end else begin
        data_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp8_stage0) & (icmp_ln224_reg_1517_pp8_iter1_reg == 1'd0) & (ap_enable_reg_pp8_iter2 == 1'b1)) | ((1'b0 == ap_block_pp9_stage0) & (icmp_ln225_reg_1536_pp9_iter1_reg == 1'd0) & (ap_enable_reg_pp9_iter2 == 1'b1)) | ((1'b0 == ap_block_pp10_stage0) & (icmp_ln226_reg_1555_pp10_iter1_reg == 1'd0) & (ap_enable_reg_pp10_iter2 == 1'b1)) | ((1'b0 == ap_block_pp11_stage0) & (icmp_ln227_reg_1574_pp11_iter1_reg == 1'd0) & (ap_enable_reg_pp11_iter2 == 1'b1)) | ((1'b0 == ap_block_pp12_stage0) & (icmp_ln228_reg_1593_pp12_iter1_reg == 1'd0) & (ap_enable_reg_pp12_iter2 == 1'b1)) | ((1'b0 == ap_block_pp13_stage0) & (icmp_ln229_reg_1612_pp13_iter1_reg == 1'd0) & (ap_enable_reg_pp13_iter2 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0) & (icmp_ln222_reg_1503_pp7_iter1_reg == 1'd0) & (ap_enable_reg_pp7_iter2 == 1'b1)) | ((icmp_ln217_reg_1631_pp14_iter1_reg == 1'd0) & (1'b0 == ap_block_pp14_stage0) & (ap_enable_reg_pp14_iter2 == 1'b1)))) begin
        data_blk_n_W = m_axi_data_WREADY;
    end else begin
        data_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp11_stage0) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0))) begin
        fc_hidden_layer1_address0 = zext_ln227_fu_1235_p1;
    end else if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        fc_hidden_layer1_address0 = zext_ln211_fu_1111_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer1_address0 = grp_backward_fu_824_fc_hidden_layer1_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_hidden_layer1_address0 = grp_forward_fu_786_fc_hidden_layer1_address0;
    end else begin
        fc_hidden_layer1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((ap_enable_reg_pp11_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp11_stage0) & (1'b0 == ap_block_pp11_stage0_11001)))) begin
        fc_hidden_layer1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer1_ce0 = grp_backward_fu_824_fc_hidden_layer1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_hidden_layer1_ce0 = grp_forward_fu_786_fc_hidden_layer1_ce0;
    end else begin
        fc_hidden_layer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        fc_hidden_layer1_d0 = data_addr_3_read_reg_1466;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer1_d0 = grp_backward_fu_824_fc_hidden_layer1_d0;
    end else begin
        fc_hidden_layer1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln211_reg_1457_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        fc_hidden_layer1_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer1_we0 = grp_backward_fu_824_fc_hidden_layer1_we0;
    end else begin
        fc_hidden_layer1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp12_stage0) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0))) begin
        fc_hidden_layer2_address0 = zext_ln228_fu_1252_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer2_address0 = grp_backward_fu_824_fc_hidden_layer2_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_hidden_layer2_address0 = grp_forward_fu_786_fc_hidden_layer2_address0;
    end else begin
        fc_hidden_layer2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        fc_hidden_layer2_address1 = zext_ln212_fu_1128_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer2_address1 = grp_backward_fu_824_fc_hidden_layer2_address1;
    end else begin
        fc_hidden_layer2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp12_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp12_stage0) & (1'b0 == ap_block_pp12_stage0_11001))) begin
        fc_hidden_layer2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer2_ce0 = grp_backward_fu_824_fc_hidden_layer2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_hidden_layer2_ce0 = grp_forward_fu_786_fc_hidden_layer2_ce0;
    end else begin
        fc_hidden_layer2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        fc_hidden_layer2_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer2_ce1 = grp_backward_fu_824_fc_hidden_layer2_ce1;
    end else begin
        fc_hidden_layer2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        fc_hidden_layer2_d1 = data_addr_2_read_reg_1480;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer2_d1 = grp_backward_fu_824_fc_hidden_layer2_d1;
    end else begin
        fc_hidden_layer2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (icmp_ln212_reg_1471_pp5_iter1_reg == 1'd0) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        fc_hidden_layer2_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer2_we1 = grp_backward_fu_824_fc_hidden_layer2_we1;
    end else begin
        fc_hidden_layer2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp13_stage0) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0))) begin
        fc_hidden_layer3_address0 = zext_ln229_fu_1269_p1;
    end else if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        fc_hidden_layer3_address0 = zext_ln213_fu_1145_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer3_address0 = grp_backward_fu_824_fc_hidden_layer3_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_hidden_layer3_address0 = grp_forward_fu_786_fc_hidden_layer3_address0;
    end else begin
        fc_hidden_layer3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1)) | ((ap_enable_reg_pp13_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp13_stage0) & (1'b0 == ap_block_pp13_stage0_11001)))) begin
        fc_hidden_layer3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer3_ce0 = grp_backward_fu_824_fc_hidden_layer3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_hidden_layer3_ce0 = grp_forward_fu_786_fc_hidden_layer3_ce0;
    end else begin
        fc_hidden_layer3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        fc_hidden_layer3_d0 = data_addr_1_read_reg_1494;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer3_d0 = grp_backward_fu_824_fc_hidden_layer3_d0;
    end else begin
        fc_hidden_layer3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (icmp_ln213_reg_1485_pp6_iter1_reg == 1'd0) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        fc_hidden_layer3_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_hidden_layer3_we0 = grp_backward_fu_824_fc_hidden_layer3_we0;
    end else begin
        fc_hidden_layer3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_in_1_0_address0 = grp_backward_fu_824_fc_in_1_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_1_0_address0 = grp_forward_fu_786_fc_in_1_0_address0;
    end else begin
        fc_in_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_in_1_0_ce0 = grp_backward_fu_824_fc_in_1_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_1_0_ce0 = grp_forward_fu_786_fc_in_1_0_ce0;
    end else begin
        fc_in_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_1_0_we0 = grp_forward_fu_786_fc_in_1_0_we0;
    end else begin
        fc_in_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_in_2_relu1_0_address0 = grp_backward_fu_824_fc_in_2_relu1_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_2_relu1_0_address0 = grp_forward_fu_786_fc_in_2_relu1_0_address0;
    end else begin
        fc_in_2_relu1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_in_2_relu1_0_ce0 = grp_backward_fu_824_fc_in_2_relu1_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_2_relu1_0_ce0 = grp_forward_fu_786_fc_in_2_relu1_0_ce0;
    end else begin
        fc_in_2_relu1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_2_relu1_0_we0 = grp_forward_fu_786_fc_in_2_relu1_0_we0;
    end else begin
        fc_in_2_relu1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_in_3_relu2_0_address0 = grp_backward_fu_824_fc_in_3_relu2_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_3_relu2_0_address0 = grp_forward_fu_786_fc_in_3_relu2_0_address0;
    end else begin
        fc_in_3_relu2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_in_3_relu2_0_ce0 = grp_backward_fu_824_fc_in_3_relu2_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_3_relu2_0_ce0 = grp_forward_fu_786_fc_in_3_relu2_0_ce0;
    end else begin
        fc_in_3_relu2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_in_3_relu2_0_we0 = grp_forward_fu_786_fc_in_3_relu2_0_we0;
    end else begin
        fc_in_3_relu2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_out_1_0_address0 = grp_backward_fu_824_fc_out_1_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_out_1_0_address0 = grp_forward_fu_786_fc_out_1_0_address0;
    end else begin
        fc_out_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_out_1_0_ce0 = grp_backward_fu_824_fc_out_1_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_out_1_0_ce0 = grp_forward_fu_786_fc_out_1_0_ce0;
    end else begin
        fc_out_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_out_1_0_we0 = grp_forward_fu_786_fc_out_1_0_we0;
    end else begin
        fc_out_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_out_2_0_address0 = grp_backward_fu_824_fc_out_2_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_out_2_0_address0 = grp_forward_fu_786_fc_out_2_0_address0;
    end else begin
        fc_out_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        fc_out_2_0_ce0 = grp_backward_fu_824_fc_out_2_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_out_2_0_ce0 = grp_forward_fu_786_fc_out_2_0_ce0;
    end else begin
        fc_out_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        fc_out_2_0_we0 = grp_forward_fu_786_fc_out_2_0_we0;
    end else begin
        fc_out_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mnist_data_address0 = zext_ln207_fu_1043_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        mnist_data_address0 = grp_backward_fu_824_mnist_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        mnist_data_address0 = grp_forward_fu_786_mnist_data_address0;
    end else begin
        mnist_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mnist_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        mnist_data_ce0 = grp_backward_fu_824_mnist_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        mnist_data_ce0 = grp_forward_fu_786_mnist_data_ce0;
    end else begin
        mnist_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln207_reg_1401_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        mnist_data_we0 = 1'b1;
    end else begin
        mnist_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp14_stage0) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter0 == 1'b1))) begin
        probability_result_address0 = zext_ln217_fu_1286_p1;
    end else if (((1'b0 == ap_block_pp7_stage0) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1))) begin
        probability_result_address0 = zext_ln222_fu_1167_p1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        probability_result_address0 = grp_backward_fu_824_probability_result_address0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        probability_result_address0 = grp_forward_fu_786_probability_result_address0;
    end else begin
        probability_result_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp14_stage0_11001) & (1'b1 == ap_CS_fsm_pp14_stage0) & (ap_enable_reg_pp14_iter0 == 1'b1)) | ((1'b0 == ap_block_pp7_stage0_11001) & (1'b1 == ap_CS_fsm_pp7_stage0) & (ap_enable_reg_pp7_iter0 == 1'b1)))) begin
        probability_result_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state75)) begin
        probability_result_ce0 = grp_backward_fu_824_probability_result_ce0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        probability_result_ce0 = grp_forward_fu_786_probability_result_ce0;
    end else begin
        probability_result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state73)) begin
        probability_result_we0 = grp_forward_fu_786_probability_result_we0;
    end else begin
        probability_result_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln207_fu_1031_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln207_fu_1031_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln208_fu_1048_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln208_fu_1048_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln209_fu_1065_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln209_fu_1065_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln210_fu_1082_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) & ~((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln210_fu_1082_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b0 == ap_block_pp3_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state42 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln211_fu_1099_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) & ~((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (icmp_ln211_fu_1099_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b0 == ap_block_pp4_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln212_fu_1116_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter2 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (icmp_ln212_fu_1116_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b0 == ap_block_pp5_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((data_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln213_fu_1133_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter2 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (icmp_ln213_fu_1133_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b0 == ap_block_pp6_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            if ((~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd1) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end else if ((~((grp_forward_fu_786_ap_done == 1'b0) | (1'b1 == ap_block_state73_io)) & (icmp_ln215_reg_1499 == 1'd0) & (1'b1 == ap_CS_fsm_state73))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if ((~((data_AWREADY == 1'b0) | (grp_backward_fu_824_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        ap_ST_fsm_pp7_stage0 : begin
            if ((~((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln222_fu_1155_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) & ~((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end else if ((((ap_enable_reg_pp7_iter1 == 1'b0) & (ap_enable_reg_pp7_iter2 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)) | ((ap_enable_reg_pp7_iter1 == 1'b0) & (icmp_ln222_fu_1155_p2 == 1'd1) & (ap_enable_reg_pp7_iter0 == 1'b1) & (1'b0 == ap_block_pp7_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp7_stage0;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_pp8_stage0 : begin
            if ((~((icmp_ln224_fu_1172_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)) & ~((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end else if ((((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)) | ((icmp_ln224_fu_1172_p2 == 1'd1) & (ap_enable_reg_pp8_iter0 == 1'b1) & (1'b0 == ap_block_pp8_stage0_subdone) & (ap_enable_reg_pp8_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state87;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp8_stage0;
            end
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state91))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state91;
            end
        end
        ap_ST_fsm_pp9_stage0 : begin
            if ((~((icmp_ln225_fu_1189_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)) & ~((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end else if ((((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)) | ((icmp_ln225_fu_1189_p2 == 1'd1) & (ap_enable_reg_pp9_iter0 == 1'b1) & (1'b0 == ap_block_pp9_stage0_subdone) & (ap_enable_reg_pp9_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp9_stage0;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state99))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_pp10_stage0 : begin
            if ((~((icmp_ln226_fu_1206_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter1 == 1'b0)) & ~((ap_enable_reg_pp10_iter2 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end else if ((((ap_enable_reg_pp10_iter2 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter1 == 1'b0)) | ((icmp_ln226_fu_1206_p2 == 1'd1) & (ap_enable_reg_pp10_iter0 == 1'b1) & (1'b0 == ap_block_pp10_stage0_subdone) & (ap_enable_reg_pp10_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state103;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp10_stage0;
            end
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state107))) begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state107;
            end
        end
        ap_ST_fsm_pp11_stage0 : begin
            if ((~((icmp_ln227_fu_1223_p2 == 1'd1) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b0 == ap_block_pp11_stage0_subdone) & (ap_enable_reg_pp11_iter1 == 1'b0)) & ~((ap_enable_reg_pp11_iter2 == 1'b1) & (1'b0 == ap_block_pp11_stage0_subdone) & (ap_enable_reg_pp11_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end else if ((((ap_enable_reg_pp11_iter2 == 1'b1) & (1'b0 == ap_block_pp11_stage0_subdone) & (ap_enable_reg_pp11_iter1 == 1'b0)) | ((icmp_ln227_fu_1223_p2 == 1'd1) & (ap_enable_reg_pp11_iter0 == 1'b1) & (1'b0 == ap_block_pp11_stage0_subdone) & (ap_enable_reg_pp11_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state111;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp11_stage0;
            end
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state115))) begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state115;
            end
        end
        ap_ST_fsm_pp12_stage0 : begin
            if ((~((icmp_ln228_fu_1240_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone) & (ap_enable_reg_pp12_iter1 == 1'b0)) & ~((ap_enable_reg_pp12_iter2 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone) & (ap_enable_reg_pp12_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end else if ((((ap_enable_reg_pp12_iter2 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone) & (ap_enable_reg_pp12_iter1 == 1'b0)) | ((icmp_ln228_fu_1240_p2 == 1'd1) & (ap_enable_reg_pp12_iter0 == 1'b1) & (1'b0 == ap_block_pp12_stage0_subdone) & (ap_enable_reg_pp12_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state119;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp12_stage0;
            end
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            if ((~((data_BVALID == 1'b0) | (data_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state123))) begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state123;
            end
        end
        ap_ST_fsm_pp13_stage0 : begin
            if ((~((icmp_ln229_fu_1257_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone) & (ap_enable_reg_pp13_iter1 == 1'b0)) & ~((ap_enable_reg_pp13_iter2 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone) & (ap_enable_reg_pp13_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end else if ((((ap_enable_reg_pp13_iter2 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone) & (ap_enable_reg_pp13_iter1 == 1'b0)) | ((icmp_ln229_fu_1257_p2 == 1'd1) & (ap_enable_reg_pp13_iter0 == 1'b1) & (1'b0 == ap_block_pp13_stage0_subdone) & (ap_enable_reg_pp13_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state127;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp13_stage0;
            end
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            if ((~((icmp_ln215_reg_1499 == 1'd0) & (data_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state131))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end
        end
        ap_ST_fsm_pp14_stage0 : begin
            if ((~((ap_enable_reg_pp14_iter1 == 1'b0) & (icmp_ln217_fu_1274_p2 == 1'd1) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone)) & ~((ap_enable_reg_pp14_iter1 == 1'b0) & (ap_enable_reg_pp14_iter2 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end else if ((((ap_enable_reg_pp14_iter1 == 1'b0) & (ap_enable_reg_pp14_iter2 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone)) | ((ap_enable_reg_pp14_iter1 == 1'b0) & (icmp_ln217_fu_1274_p2 == 1'd1) & (ap_enable_reg_pp14_iter0 == 1'b1) & (1'b0 == ap_block_pp14_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state135;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp14_stage0;
            end
        end
        ap_ST_fsm_state135 : begin
            ap_NS_fsm = ap_ST_fsm_state136;
        end
        ap_ST_fsm_state136 : begin
            ap_NS_fsm = ap_ST_fsm_state137;
        end
        ap_ST_fsm_state137 : begin
            ap_NS_fsm = ap_ST_fsm_state138;
        end
        ap_ST_fsm_state138 : begin
            ap_NS_fsm = ap_ST_fsm_state139;
        end
        ap_ST_fsm_state139 : begin
            if (((data_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state139))) begin
                ap_NS_fsm = ap_ST_fsm_state131;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state139;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln207_fu_1037_p2 = (ap_phi_mux_phi_ln207_phi_fu_618_p4 + 10'd1);

assign add_ln208_fu_1054_p2 = (ap_phi_mux_phi_ln208_phi_fu_630_p4 + 4'd1);

assign add_ln209_fu_1071_p2 = (ap_phi_mux_phi_ln209_phi_fu_642_p4 + 4'd1);

assign add_ln210_fu_1088_p2 = (ap_phi_mux_phi_ln210_phi_fu_654_p4 + 4'd1);

assign add_ln211_fu_1105_p2 = (ap_phi_mux_phi_ln211_phi_fu_666_p4 + 17'd1);

assign add_ln212_fu_1122_p2 = (ap_phi_mux_phi_ln212_phi_fu_678_p4 + 13'd1);

assign add_ln213_fu_1139_p2 = (ap_phi_mux_phi_ln213_phi_fu_690_p4 + 9'd1);

assign add_ln217_fu_1280_p2 = (phi_ln217_reg_775 + 4'd1);

assign add_ln222_fu_1161_p2 = (phi_ln222_reg_698 + 4'd1);

assign add_ln224_fu_1178_p2 = (phi_ln224_reg_709 + 4'd1);

assign add_ln225_fu_1195_p2 = (phi_ln225_reg_720 + 4'd1);

assign add_ln226_fu_1212_p2 = (phi_ln226_reg_731 + 4'd1);

assign add_ln227_fu_1229_p2 = (phi_ln227_reg_742 + 17'd1);

assign add_ln228_fu_1246_p2 = (phi_ln228_reg_753 + 13'd1);

assign add_ln229_fu_1263_p2 = (phi_ln229_reg_764 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp10_stage0 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_pp11_stage0 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_pp12_stage0 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_pp13_stage0 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_pp14_stage0 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_pp7_stage0 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_pp8_stage0 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_pp9_stage0 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state107 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state115 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state123 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state139 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd78];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln207_reg_1401 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln207_reg_1401 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp10_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp10_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp10_stage0_11001 = ((ap_enable_reg_pp10_iter2 == 1'b1) & (1'b1 == ap_block_state102_io));
end

always @ (*) begin
    ap_block_pp10_stage0_subdone = ((ap_enable_reg_pp10_iter2 == 1'b1) & (1'b1 == ap_block_state102_io));
end

assign ap_block_pp11_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp11_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp11_stage0_11001 = ((ap_enable_reg_pp11_iter2 == 1'b1) & (1'b1 == ap_block_state110_io));
end

always @ (*) begin
    ap_block_pp11_stage0_subdone = ((ap_enable_reg_pp11_iter2 == 1'b1) & (1'b1 == ap_block_state110_io));
end

assign ap_block_pp12_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp12_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp12_stage0_11001 = ((ap_enable_reg_pp12_iter2 == 1'b1) & (1'b1 == ap_block_state118_io));
end

always @ (*) begin
    ap_block_pp12_stage0_subdone = ((ap_enable_reg_pp12_iter2 == 1'b1) & (1'b1 == ap_block_state118_io));
end

assign ap_block_pp13_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp13_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp13_stage0_11001 = ((ap_enable_reg_pp13_iter2 == 1'b1) & (1'b1 == ap_block_state126_io));
end

always @ (*) begin
    ap_block_pp13_stage0_subdone = ((ap_enable_reg_pp13_iter2 == 1'b1) & (1'b1 == ap_block_state126_io));
end

assign ap_block_pp14_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp14_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp14_stage0_11001 = ((ap_enable_reg_pp14_iter2 == 1'b1) & (1'b1 == ap_block_state134_io));
end

always @ (*) begin
    ap_block_pp14_stage0_subdone = ((ap_enable_reg_pp14_iter2 == 1'b1) & (1'b1 == ap_block_state134_io));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln208_reg_1415 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln208_reg_1415 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln209_reg_1429 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln209_reg_1429 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((icmp_ln210_reg_1443 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((icmp_ln210_reg_1443 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((icmp_ln211_reg_1457 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((icmp_ln211_reg_1457 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b1));
end

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp5_stage0_11001 = ((icmp_ln212_reg_1471 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp5_stage0_subdone = ((icmp_ln212_reg_1471 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b1));
end

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp6_stage0_11001 = ((icmp_ln213_reg_1485 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp6_stage0_subdone = ((icmp_ln213_reg_1485 == 1'd0) & (data_RVALID == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b1));
end

assign ap_block_pp7_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp7_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp7_stage0_11001 = ((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_block_state78_io));
end

always @ (*) begin
    ap_block_pp7_stage0_subdone = ((ap_enable_reg_pp7_iter2 == 1'b1) & (1'b1 == ap_block_state78_io));
end

assign ap_block_pp8_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp8_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp8_stage0_11001 = ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b1 == ap_block_state86_io));
end

always @ (*) begin
    ap_block_pp8_stage0_subdone = ((ap_enable_reg_pp8_iter2 == 1'b1) & (1'b1 == ap_block_state86_io));
end

assign ap_block_pp9_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp9_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp9_stage0_11001 = ((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b1 == ap_block_state94_io));
end

always @ (*) begin
    ap_block_pp9_stage0_subdone = ((ap_enable_reg_pp9_iter2 == 1'b1) & (1'b1 == ap_block_state94_io));
end

assign ap_block_state100_pp10_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp10_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state102_io = ((icmp_ln226_reg_1555_pp10_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state102_pp10_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp11_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp11_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((icmp_ln207_reg_1401 == 1'd0) & (data_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state110_io = ((icmp_ln227_reg_1574_pp11_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state110_pp11_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp12_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp12_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state118_io = ((icmp_ln228_reg_1593_pp12_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state118_pp12_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp13_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp13_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state126_io = ((icmp_ln229_reg_1612_pp13_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state126_pp13_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state131 = ((icmp_ln215_reg_1499 == 1'd0) & (data_BVALID == 1'b0));
end

assign ap_block_state132_pp14_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp14_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state134_io = ((icmp_ln217_reg_1631_pp14_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state134_pp14_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp1_stage0_iter1 = ((icmp_ln208_reg_1415 == 1'd0) & (data_RVALID == 1'b0));
end

assign ap_block_state21_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp2_stage0_iter1 = ((icmp_ln209_reg_1429 == 1'd0) & (data_RVALID == 1'b0));
end

assign ap_block_state31_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp3_stage0_iter1 = ((icmp_ln210_reg_1443 == 1'd0) & (data_RVALID == 1'b0));
end

assign ap_block_state41_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50_pp4_stage0_iter1 = ((icmp_ln211_reg_1457 == 1'd0) & (data_RVALID == 1'b0));
end

assign ap_block_state51_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state60_pp5_stage0_iter1 = ((icmp_ln212_reg_1471 == 1'd0) & (data_RVALID == 1'b0));
end

assign ap_block_state61_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state70_pp6_stage0_iter1 = ((icmp_ln213_reg_1485 == 1'd0) & (data_RVALID == 1'b0));
end

assign ap_block_state71_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state73_io = ((icmp_ln215_reg_1499 == 1'd1) & (data_AWREADY == 1'b0));
end

assign ap_block_state76_pp7_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp7_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state78_io = ((icmp_ln222_reg_1503_pp7_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state78_pp7_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp8_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp8_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state86_io = ((icmp_ln224_reg_1517_pp8_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state86_pp8_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp9_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp9_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state94_io = ((icmp_ln225_reg_1536_pp9_iter1_reg == 1'd0) & (data_WREADY == 1'b0));
end

assign ap_block_state94_pp9_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp10 = (ap_idle_pp10 ^ 1'b1);

assign ap_enable_pp11 = (ap_idle_pp11 ^ 1'b1);

assign ap_enable_pp12 = (ap_idle_pp12 ^ 1'b1);

assign ap_enable_pp13 = (ap_idle_pp13 ^ 1'b1);

assign ap_enable_pp14 = (ap_idle_pp14 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_enable_pp7 = (ap_idle_pp7 ^ 1'b1);

assign ap_enable_pp8 = (ap_idle_pp8 ^ 1'b1);

assign ap_enable_pp9 = (ap_idle_pp9 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_23_fu_977_p1 = fc_reg_1311;

assign empty_24_fu_986_p1 = fc4_reg_1316;

assign empty_25_fu_995_p1 = fc5_reg_1321;

assign empty_26_fu_1004_p1 = conv_reg_1326;

assign empty_27_fu_1013_p1 = conv4_reg_1331;

assign empty_28_fu_1022_p1 = conv5_reg_1336;

assign empty_29_fu_958_p1 = in1_reg_1341;

assign empty_fu_968_p1 = out1_reg_1306;

assign grp_backward_fu_824_ap_start = grp_backward_fu_824_ap_start_reg;

assign grp_forward_fu_786_ap_start = grp_forward_fu_786_ap_start_reg;

assign icmp_ln207_fu_1031_p2 = ((ap_phi_mux_phi_ln207_phi_fu_618_p4 == 10'd900) ? 1'b1 : 1'b0);

assign icmp_ln208_fu_1048_p2 = ((ap_phi_mux_phi_ln208_phi_fu_630_p4 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln209_fu_1065_p2 = ((ap_phi_mux_phi_ln209_phi_fu_642_p4 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln210_fu_1082_p2 = ((ap_phi_mux_phi_ln210_phi_fu_654_p4 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_1099_p2 = ((ap_phi_mux_phi_ln211_phi_fu_666_p4 == 17'd103680) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_1116_p2 = ((ap_phi_mux_phi_ln212_phi_fu_678_p4 == 13'd8100) ? 1'b1 : 1'b0);

assign icmp_ln213_fu_1133_p2 = ((ap_phi_mux_phi_ln213_phi_fu_690_p4 == 9'd450) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_1150_p2 = ((flag_read_reg_1296 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln217_fu_1274_p2 = ((phi_ln217_reg_775 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln222_fu_1155_p2 = ((phi_ln222_reg_698 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln224_fu_1172_p2 = ((phi_ln224_reg_709 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln225_fu_1189_p2 = ((phi_ln225_reg_720 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln226_fu_1206_p2 = ((phi_ln226_reg_731 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1223_p2 = ((phi_ln227_reg_742 == 17'd103680) ? 1'b1 : 1'b0);

assign icmp_ln228_fu_1240_p2 = ((phi_ln228_reg_753 == 13'd8100) ? 1'b1 : 1'b0);

assign icmp_ln229_fu_1257_p2 = ((phi_ln229_reg_764 == 9'd450) ? 1'b1 : 1'b0);

assign zext_ln207_fu_1043_p1 = phi_ln207_reg_614_pp0_iter1_reg;

assign zext_ln208_fu_1060_p1 = phi_ln208_reg_626_pp1_iter1_reg;

assign zext_ln209_fu_1077_p1 = phi_ln209_reg_638_pp2_iter1_reg;

assign zext_ln210_fu_1094_p1 = phi_ln210_reg_650_pp3_iter1_reg;

assign zext_ln211_fu_1111_p1 = phi_ln211_reg_662_pp4_iter1_reg;

assign zext_ln212_fu_1128_p1 = phi_ln212_reg_674_pp5_iter1_reg;

assign zext_ln213_fu_1145_p1 = phi_ln213_reg_686_pp6_iter1_reg;

assign zext_ln217_fu_1286_p1 = phi_ln217_reg_775;

assign zext_ln222_fu_1167_p1 = phi_ln222_reg_698;

assign zext_ln224_fu_1184_p1 = phi_ln224_reg_709;

assign zext_ln225_fu_1201_p1 = phi_ln225_reg_720;

assign zext_ln226_fu_1218_p1 = phi_ln226_reg_731;

assign zext_ln227_fu_1235_p1 = phi_ln227_reg_742;

assign zext_ln228_fu_1252_p1 = phi_ln228_reg_753;

assign zext_ln229_fu_1269_p1 = phi_ln229_reg_764;

always @ (posedge ap_clk) begin
    data_addr_reg_1352[31:30] <= 2'b00;
    data_addr_1_reg_1359[31:30] <= 2'b00;
    data_addr_2_reg_1366[31:30] <= 2'b00;
    data_addr_3_reg_1373[31:30] <= 2'b00;
    data_addr_4_reg_1380[31:30] <= 2'b00;
    data_addr_5_reg_1387[31:30] <= 2'b00;
    data_addr_6_reg_1394[31:30] <= 2'b00;
end

endmodule //forw_back
