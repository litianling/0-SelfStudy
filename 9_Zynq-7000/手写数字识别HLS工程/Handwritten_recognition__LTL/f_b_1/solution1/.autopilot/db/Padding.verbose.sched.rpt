

================================================================
== Vivado HLS Report for 'Padding'
================================================================
* Date:           Fri Oct 28 14:10:00 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        f_b_1
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     5.064|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  902|  902|  902|  902|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                    |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Padding_label5_L  |  900|  900|         2|          1|          1|   900|    yes   |
        +--------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([8100 x float]* @fc_hidden_layer2, [1 x i8]* @p_str, [14 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)" [f_b_1/forw_back_LTL.c:89]   --->   Operation 5 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.75ns)   --->   "br label %1" [f_b_1/forw_back_LTL.c:89]   --->   Operation 6 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 5.06>
ST_2 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i10 [ 0, %0 ], [ %add_ln89, %ifBlock ]" [f_b_1/forw_back_LTL.c:89]   --->   Operation 7 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 8 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %0 ], [ %select_ln92_3, %ifBlock ]" [f_b_1/forw_back_LTL.c:92]   --->   Operation 8 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%j_0 = phi i5 [ 0, %0 ], [ %j, %ifBlock ]"   --->   Operation 9 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_1/forw_back_LTL.c:90]   --->   Operation 10 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%shl_ln = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %i_0, i5 0)" [f_b_1/forw_back_LTL.c:94]   --->   Operation 11 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln94_3 = zext i10 %shl_ln to i11" [f_b_1/forw_back_LTL.c:94]   --->   Operation 12 'zext' 'zext_ln94_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%shl_ln94_2 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %i_0, i1 false)" [f_b_1/forw_back_LTL.c:94]   --->   Operation 13 'bitconcatenate' 'shl_ln94_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln94_4 = zext i6 %shl_ln94_2 to i11" [f_b_1/forw_back_LTL.c:94]   --->   Operation 14 'zext' 'zext_ln94_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.93ns)   --->   "%sub_ln94 = sub i11 %zext_ln94_3, %zext_ln94_4" [f_b_1/forw_back_LTL.c:94]   --->   Operation 15 'sub' 'sub_ln94' <Predicate = true> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.87ns)   --->   "%icmp_ln91_1 = icmp ult i5 %i_0, -4" [f_b_1/forw_back_LTL.c:91]   --->   Operation 16 'icmp' 'icmp_ln91_1' <Predicate = true> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%tmp = call i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5 %i_0, i32 1, i32 4)" [f_b_1/forw_back_LTL.c:91]   --->   Operation 17 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.88ns)   --->   "%icmp_ln91 = icmp ne i4 %tmp, 0" [f_b_1/forw_back_LTL.c:91]   --->   Operation 18 'icmp' 'icmp_ln91' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.85ns)   --->   "%icmp_ln89 = icmp eq i10 %indvar_flatten, -124" [f_b_1/forw_back_LTL.c:89]   --->   Operation 19 'icmp' 'icmp_ln89' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.93ns)   --->   "%add_ln89 = add i10 %indvar_flatten, 1" [f_b_1/forw_back_LTL.c:89]   --->   Operation 20 'add' 'add_ln89' <Predicate = true> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "br i1 %icmp_ln89, label %3, label %.reset" [f_b_1/forw_back_LTL.c:89]   --->   Operation 21 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.87ns)   --->   "%i = add i5 %i_0, 1" [f_b_1/forw_back_LTL.c:89]   --->   Operation 22 'add' 'i' <Predicate = (!icmp_ln89)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.87ns)   --->   "%icmp_ln90 = icmp eq i5 %j_0, -2" [f_b_1/forw_back_LTL.c:90]   --->   Operation 23 'icmp' 'icmp_ln90' <Predicate = (!icmp_ln89)> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.48ns)   --->   "%select_ln92 = select i1 %icmp_ln90, i5 0, i5 %j_0" [f_b_1/forw_back_LTL.c:92]   --->   Operation 24 'select' 'select_ln92' <Predicate = (!icmp_ln89)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%shl_ln94_mid1 = call i10 @_ssdm_op_BitConcatenate.i10.i5.i5(i5 %i, i5 0)" [f_b_1/forw_back_LTL.c:94]   --->   Operation 25 'bitconcatenate' 'shl_ln94_mid1' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%zext_ln94_5 = zext i10 %shl_ln94_mid1 to i11" [f_b_1/forw_back_LTL.c:94]   --->   Operation 26 'zext' 'zext_ln94_5' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%shl_ln94_2_mid1 = call i6 @_ssdm_op_BitConcatenate.i6.i5.i1(i5 %i, i1 false)" [f_b_1/forw_back_LTL.c:94]   --->   Operation 27 'bitconcatenate' 'shl_ln94_2_mid1' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln94_6 = zext i6 %shl_ln94_2_mid1 to i11" [f_b_1/forw_back_LTL.c:94]   --->   Operation 28 'zext' 'zext_ln94_6' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.93ns)   --->   "%sub_ln94_2 = sub i11 %zext_ln94_5, %zext_ln94_6" [f_b_1/forw_back_LTL.c:94]   --->   Operation 29 'sub' 'sub_ln94_2' <Predicate = (!icmp_ln89)> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.45ns)   --->   "%select_ln92_1 = select i1 %icmp_ln90, i11 %sub_ln94_2, i11 %sub_ln94" [f_b_1/forw_back_LTL.c:92]   --->   Operation 30 'select' 'select_ln92_1' <Predicate = (!icmp_ln89)> <Delay = 0.45> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.87ns)   --->   "%icmp_ln91_6 = icmp ult i5 %i, -4" [f_b_1/forw_back_LTL.c:91]   --->   Operation 31 'icmp' 'icmp_ln91_6' <Predicate = (!icmp_ln89)> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node and_ln91_2)   --->   "%select_ln92_2 = select i1 %icmp_ln90, i1 %icmp_ln91_6, i1 %icmp_ln91_1" [f_b_1/forw_back_LTL.c:92]   --->   Operation 32 'select' 'select_ln92_2' <Predicate = (!icmp_ln89)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.48ns)   --->   "%select_ln92_3 = select i1 %icmp_ln90, i5 %i, i5 %i_0" [f_b_1/forw_back_LTL.c:92]   --->   Operation 33 'select' 'select_ln92_3' <Predicate = (!icmp_ln89)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln92_2 = zext i5 %select_ln92_3 to i10" [f_b_1/forw_back_LTL.c:92]   --->   Operation 34 'zext' 'zext_ln92_2' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.42ns)   --->   "%mul_ln92 = mul i10 %zext_ln92_2, 26" [f_b_1/forw_back_LTL.c:92]   --->   Operation 35 'mul' 'mul_ln92' <Predicate = (!icmp_ln89)> <Delay = 1.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_3 = call i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5 %i, i32 1, i32 4)" [f_b_1/forw_back_LTL.c:91]   --->   Operation 36 'partselect' 'tmp_3' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.88ns)   --->   "%icmp_ln91_7 = icmp ne i4 %tmp_3, 0" [f_b_1/forw_back_LTL.c:91]   --->   Operation 37 'icmp' 'icmp_ln91_7' <Predicate = (!icmp_ln89)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node and_ln91)   --->   "%select_ln92_4 = select i1 %icmp_ln90, i1 %icmp_ln91_7, i1 %icmp_ln91" [f_b_1/forw_back_LTL.c:92]   --->   Operation 38 'select' 'select_ln92_4' <Predicate = (!icmp_ln89)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln92_4 = zext i5 %select_ln92 to i11" [f_b_1/forw_back_LTL.c:92]   --->   Operation 39 'zext' 'zext_ln92_4' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_4 = call i4 @_ssdm_op_PartSelect.i4.i5.i32.i32(i5 %select_ln92, i32 1, i32 4)" [f_b_1/forw_back_LTL.c:91]   --->   Operation 40 'partselect' 'tmp_4' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.88ns)   --->   "%icmp_ln91_8 = icmp ne i4 %tmp_4, 0" [f_b_1/forw_back_LTL.c:91]   --->   Operation 41 'icmp' 'icmp_ln91_8' <Predicate = (!icmp_ln89)> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.87ns)   --->   "%icmp_ln91_3 = icmp ult i5 %select_ln92, -4" [f_b_1/forw_back_LTL.c:91]   --->   Operation 42 'icmp' 'icmp_ln91_3' <Predicate = (!icmp_ln89)> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln91 = and i1 %icmp_ln91_8, %select_ln92_4" [f_b_1/forw_back_LTL.c:91]   --->   Operation 43 'and' 'and_ln91' <Predicate = (!icmp_ln89)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node and_ln91_2)   --->   "%and_ln91_3 = and i1 %icmp_ln91_3, %select_ln92_2" [f_b_1/forw_back_LTL.c:91]   --->   Operation 44 'and' 'and_ln91_3' <Predicate = (!icmp_ln89)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln91_2 = and i1 %and_ln91_3, %and_ln91" [f_b_1/forw_back_LTL.c:91]   --->   Operation 45 'and' 'and_ln91_2' <Predicate = (!icmp_ln89)> <Delay = 0.33> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "br i1 %and_ln91_2, label %2, label %._crit_edge" [f_b_1/forw_back_LTL.c:91]   --->   Operation 46 'br' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.94ns)   --->   "%add_ln94 = add i11 %select_ln92_1, %zext_ln92_4" [f_b_1/forw_back_LTL.c:94]   --->   Operation 47 'add' 'add_ln94' <Predicate = (!icmp_ln89 & !and_ln91_2)> <Delay = 0.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%sext_ln94 = sext i11 %add_ln94 to i32" [f_b_1/forw_back_LTL.c:94]   --->   Operation 48 'sext' 'sext_ln94' <Predicate = (!icmp_ln89 & !and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln94 = zext i32 %sext_ln94 to i64" [f_b_1/forw_back_LTL.c:94]   --->   Operation 49 'zext' 'zext_ln94' <Predicate = (!icmp_ln89 & !and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%output_matrix_addr_2 = getelementptr [900 x float]* %output_matrix, i64 0, i64 %zext_ln94" [f_b_1/forw_back_LTL.c:94]   --->   Operation 50 'getelementptr' 'output_matrix_addr_2' <Predicate = (!icmp_ln89 & !and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (1.35ns)   --->   "store float 0.000000e+00, float* %output_matrix_addr_2, align 4" [f_b_1/forw_back_LTL.c:94]   --->   Operation 51 'store' <Predicate = (!icmp_ln89 & !and_ln91_2)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 900> <RAM>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln90 = zext i5 %j_0 to i7" [f_b_1/forw_back_LTL.c:90]   --->   Operation 52 'zext' 'zext_ln90' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.89ns)   --->   "%add_ln92 = add i7 %zext_ln90, -54" [f_b_1/forw_back_LTL.c:92]   --->   Operation 53 'add' 'add_ln92' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.89> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node add_ln92_2)   --->   "%select_ln92_5 = select i1 %icmp_ln90, i7 -54, i7 %add_ln92" [f_b_1/forw_back_LTL.c:92]   --->   Operation 54 'select' 'select_ln92_5' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.42> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node add_ln92_2)   --->   "%sext_ln92_3 = sext i7 %select_ln92_5 to i10" [f_b_1/forw_back_LTL.c:92]   --->   Operation 55 'sext' 'sext_ln92_3' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.93ns) (out node of the LUT)   --->   "%add_ln92_2 = add i10 %sext_ln92_3, %mul_ln92" [f_b_1/forw_back_LTL.c:92]   --->   Operation 56 'add' 'add_ln92_2' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln92_3 = zext i10 %add_ln92_2 to i64" [f_b_1/forw_back_LTL.c:92]   --->   Operation 57 'zext' 'zext_ln92_3' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%input_matrix_addr = getelementptr [676 x float]* %input_matrix, i64 0, i64 %zext_ln92_3" [f_b_1/forw_back_LTL.c:92]   --->   Operation 58 'getelementptr' 'input_matrix_addr' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.00>
ST_2 : Operation 59 [2/2] (1.35ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:92]   --->   Operation 59 'load' 'input_matrix_load' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 900> <RAM>
ST_2 : Operation 60 [1/1] (0.94ns)   --->   "%add_ln92_3 = add i11 %zext_ln92_4, %select_ln92_1" [f_b_1/forw_back_LTL.c:92]   --->   Operation 60 'add' 'add_ln92_3' <Predicate = (!icmp_ln89 & and_ln91_2)> <Delay = 0.94> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.87ns)   --->   "%j = add i5 %select_ln92, 1" [f_b_1/forw_back_LTL.c:90]   --->   Operation 61 'add' 'j' <Predicate = (!icmp_ln89)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 2.70>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_1/forw_back_LTL.c:90]   --->   Operation 62 'specpipeline' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @Padding_label5_L_str)"   --->   Operation 63 'specloopname' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 900, i64 900, i64 900)"   --->   Operation 64 'speclooptripcount' 'empty' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_1/forw_back_LTL.c:90]   --->   Operation 65 'specpipeline' <Predicate = (!icmp_ln89)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "br label %ifBlock"   --->   Operation 66 'br' <Predicate = (!and_ln91_2)> <Delay = 0.00>
ST_3 : Operation 67 [1/2] (1.35ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:92]   --->   Operation 67 'load' 'input_matrix_load' <Predicate = (and_ln91_2)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 900> <RAM>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln92 = zext i11 %add_ln92_3 to i64" [f_b_1/forw_back_LTL.c:92]   --->   Operation 68 'zext' 'zext_ln92' <Predicate = (and_ln91_2)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%output_matrix_addr = getelementptr [900 x float]* %output_matrix, i64 0, i64 %zext_ln92" [f_b_1/forw_back_LTL.c:92]   --->   Operation 69 'getelementptr' 'output_matrix_addr' <Predicate = (and_ln91_2)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (1.35ns)   --->   "store float %input_matrix_load, float* %output_matrix_addr, align 4" [f_b_1/forw_back_LTL.c:92]   --->   Operation 70 'store' <Predicate = (and_ln91_2)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 900> <RAM>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "br label %ifBlock" [f_b_1/forw_back_LTL.c:92]   --->   Operation 71 'br' <Predicate = (and_ln91_2)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "br label %1"   --->   Operation 72 'br' <Predicate = (!icmp_ln89)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "ret void" [f_b_1/forw_back_LTL.c:96]   --->   Operation 73 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', f_b_1/forw_back_LTL.c:89) with incoming values : ('add_ln89', f_b_1/forw_back_LTL.c:89) [6]  (0.755 ns)

 <State 2>: 5.06ns
The critical path consists of the following:
	'phi' operation ('i_0', f_b_1/forw_back_LTL.c:92) with incoming values : ('select_ln92_3', f_b_1/forw_back_LTL.c:92) [7]  (0 ns)
	'add' operation ('i', f_b_1/forw_back_LTL.c:89) [22]  (0.878 ns)
	'select' operation ('select_ln92_3', f_b_1/forw_back_LTL.c:92) [37]  (0.48 ns)
	'mul' operation ('mul_ln92', f_b_1/forw_back_LTL.c:92) [39]  (1.42 ns)
	'add' operation ('add_ln92_2', f_b_1/forw_back_LTL.c:92) [63]  (0.934 ns)
	'getelementptr' operation ('input_matrix_addr', f_b_1/forw_back_LTL.c:92) [65]  (0 ns)
	'load' operation ('input_matrix_load', f_b_1/forw_back_LTL.c:92) on array 'input_matrix' [66]  (1.35 ns)

 <State 3>: 2.7ns
The critical path consists of the following:
	'load' operation ('input_matrix_load', f_b_1/forw_back_LTL.c:92) on array 'input_matrix' [66]  (1.35 ns)
	'store' operation ('store_ln92', f_b_1/forw_back_LTL.c:92) of variable 'input_matrix_load', f_b_1/forw_back_LTL.c:92 on array 'output_matrix' [70]  (1.35 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
