// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Conv2d2_HH_
#define _Conv2d2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "forw_back_fadd_32bkb.h"
#include "forw_back_fmul_32cud.h"
#include "forw_back_mac_muldEe.h"

namespace ap_rtl {

struct Conv2d2 : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<10> > input_matrix_address0;
    sc_out< sc_logic > input_matrix_ce0;
    sc_in< sc_lv<32> > input_matrix_q0;
    sc_out< sc_lv<4> > kernel_address0;
    sc_out< sc_logic > kernel_ce0;
    sc_in< sc_lv<32> > kernel_q0;
    sc_out< sc_lv<10> > out_matrix_address0;
    sc_out< sc_logic > out_matrix_ce0;
    sc_out< sc_logic > out_matrix_we0;
    sc_out< sc_lv<32> > out_matrix_d0;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Conv2d2(sc_module_name name);
    SC_HAS_PROCESS(Conv2d2);

    ~Conv2d2();

    sc_trace_file* mVcdFile;

    forw_back_fadd_32bkb<1,4,32,32,32>* forw_back_fadd_32bkb_U8;
    forw_back_fmul_32cud<1,3,32,32,32>* forw_back_fmul_32cud_U9;
    forw_back_mac_muldEe<1,1,5,6,5,10>* forw_back_mac_muldEe_U10;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > indvar_flatten_reg_197;
    sc_signal< sc_lv<32> > row_0_reg_208;
    sc_signal< sc_lv<32> > empty_reg_217;
    sc_signal< sc_lv<32> > col_0_reg_229;
    sc_signal< sc_lv<1> > icmp_ln42_fu_247_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > add_ln42_fu_253_p2;
    sc_signal< sc_lv<10> > add_ln42_reg_653;
    sc_signal< sc_lv<32> > select_ln42_fu_289_p3;
    sc_signal< sc_lv<32> > select_ln42_reg_658;
    sc_signal< sc_lv<32> > select_ln42_1_fu_297_p3;
    sc_signal< sc_lv<32> > select_ln42_1_reg_663;
    sc_signal< sc_lv<32> > select_ln42_2_fu_305_p3;
    sc_signal< sc_lv<32> > select_ln42_2_reg_668;
    sc_signal< sc_lv<5> > select_ln42_3_fu_313_p3;
    sc_signal< sc_lv<5> > select_ln42_3_reg_673;
    sc_signal< sc_lv<5> > select_ln42_6_fu_369_p3;
    sc_signal< sc_lv<5> > select_ln42_6_reg_678;
    sc_signal< sc_lv<32> > zext_ln42_fu_377_p1;
    sc_signal< sc_lv<32> > zext_ln42_reg_683;
    sc_signal< sc_lv<32> > select_ln42_7_fu_385_p3;
    sc_signal< sc_lv<32> > select_ln42_7_reg_690;
    sc_signal< sc_lv<32> > select_ln42_8_fu_393_p3;
    sc_signal< sc_lv<32> > select_ln42_8_reg_695;
    sc_signal< sc_lv<32> > select_ln42_9_fu_401_p3;
    sc_signal< sc_lv<32> > select_ln42_9_reg_700;
    sc_signal< sc_lv<32> > zext_ln43_1_fu_433_p1;
    sc_signal< sc_lv<32> > zext_ln43_1_reg_705;
    sc_signal< sc_lv<10> > out_matrix_addr_reg_712;
    sc_signal< sc_lv<32> > zext_ln46_fu_447_p1;
    sc_signal< sc_lv<32> > zext_ln46_reg_717;
    sc_signal< sc_lv<64> > mul_ln44_fu_459_p2;
    sc_signal< sc_lv<64> > mul_ln44_reg_722;
    sc_signal< sc_lv<1> > icmp_ln45_fu_500_p2;
    sc_signal< sc_lv<1> > icmp_ln45_reg_727;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln45_reg_727_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln45_reg_727_pp0_iter2_reg;
    sc_signal< sc_lv<64> > add_ln45_fu_505_p2;
    sc_signal< sc_lv<64> > add_ln45_reg_731;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > select_ln46_fu_522_p3;
    sc_signal< sc_lv<32> > select_ln46_reg_736;
    sc_signal< sc_lv<32> > select_ln45_fu_585_p3;
    sc_signal< sc_lv<32> > select_ln45_reg_741;
    sc_signal< sc_lv<32> > input_matrix_load_reg_756;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state4_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state8_pp0_stage1_iter1;
    sc_signal< bool > ap_block_state12_pp0_stage1_iter2;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<32> > kernel_load_reg_761;
    sc_signal< sc_lv<32> > col_4_fu_615_p2;
    sc_signal< sc_lv<32> > col_4_reg_766;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage3;
    sc_signal< bool > ap_block_state6_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state10_pp0_stage3_iter1;
    sc_signal< bool > ap_block_pp0_stage3_11001;
    sc_signal< sc_lv<32> > grp_fu_243_p2;
    sc_signal< sc_lv<32> > tmp_reg_771;
    sc_signal< sc_lv<32> > grp_fu_238_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_776;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<5> > j_fu_620_p2;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > add_ln43_2_fu_625_p2;
    sc_signal< sc_lv<32> > add_ln43_3_fu_630_p2;
    sc_signal< sc_lv<32> > add_ln43_4_fu_635_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage3_subdone;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_lv<10> > indvar_flatten42_reg_98;
    sc_signal< sc_lv<32> > phi_ln42_reg_109;
    sc_signal< sc_lv<32> > phi_ln42_1_reg_120;
    sc_signal< sc_lv<32> > indvars_iv12_reg_131;
    sc_signal< sc_lv<5> > row_reg_142;
    sc_signal< sc_lv<32> > phi_ln43_reg_153;
    sc_signal< sc_lv<32> > phi_ln43_1_reg_164;
    sc_signal< sc_lv<32> > indvars_iv19_reg_175;
    sc_signal< sc_lv<5> > col_reg_186;
    sc_signal< sc_lv<64> > ap_phi_mux_indvar_flatten_phi_fu_201_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<32> > ap_phi_mux_row_0_phi_fu_211_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_empty_phi_fu_221_p4;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<32> > ap_phi_mux_col_0_phi_fu_232_p4;
    sc_signal< sc_lv<64> > zext_ln44_fu_437_p1;
    sc_signal< sc_lv<64> > sext_ln47_fu_599_p1;
    sc_signal< sc_lv<64> > sext_ln47_1_fu_610_p1;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage2;
    sc_signal< bool > ap_block_pp0_stage2;
    sc_signal< sc_lv<1> > icmp_ln43_fu_283_p2;
    sc_signal< sc_lv<32> > add_ln42_2_fu_265_p2;
    sc_signal< sc_lv<32> > add_ln42_3_fu_271_p2;
    sc_signal< sc_lv<1> > icmp_ln42_1_fu_321_p2;
    sc_signal< sc_lv<32> > add_ln42_4_fu_277_p2;
    sc_signal< sc_lv<32> > select_ln42_4_fu_327_p3;
    sc_signal< sc_lv<1> > icmp_ln42_2_fu_341_p2;
    sc_signal< sc_lv<32> > select_ln4234_fu_347_p3;
    sc_signal< sc_lv<32> > add_ln42_5_fu_335_p2;
    sc_signal< sc_lv<32> > add_ln4233_fu_355_p2;
    sc_signal< sc_lv<5> > i_fu_259_p2;
    sc_signal< sc_lv<1> > icmp_ln43_1_fu_409_p2;
    sc_signal< sc_lv<32> > select_ln43_fu_415_p3;
    sc_signal< sc_lv<10> > grp_fu_640_p3;
    sc_signal< sc_lv<5> > add_ln46_fu_441_p2;
    sc_signal< sc_lv<32> > select_ln42_5_fu_361_p3;
    sc_signal< sc_lv<32> > add_ln43_fu_423_p2;
    sc_signal< sc_lv<32> > mul_ln44_fu_459_p0;
    sc_signal< sc_lv<32> > mul_ln44_fu_459_p1;
    sc_signal< sc_lv<32> > shl_ln47_fu_465_p2;
    sc_signal< sc_lv<32> > shl_ln47_1_fu_471_p2;
    sc_signal< sc_lv<32> > sub_ln47_fu_483_p2;
    sc_signal< sc_lv<32> > shl_ln47_2_fu_488_p2;
    sc_signal< sc_lv<1> > icmp_ln46_fu_517_p2;
    sc_signal< sc_lv<32> > row_9_fu_511_p2;
    sc_signal< sc_lv<32> > shl_ln47_3_fu_529_p2;
    sc_signal< sc_lv<32> > shl_ln47_4_fu_535_p2;
    sc_signal< sc_lv<32> > sub_ln47_1_fu_477_p2;
    sc_signal< sc_lv<32> > sub_ln47_3_fu_541_p2;
    sc_signal< sc_lv<32> > sub_ln47_4_fu_555_p2;
    sc_signal< sc_lv<32> > shl_ln47_5_fu_560_p2;
    sc_signal< sc_lv<32> > sub_ln47_2_fu_494_p2;
    sc_signal< sc_lv<32> > sub_ln47_5_fu_566_p2;
    sc_signal< sc_lv<32> > select_ln46_2_fu_572_p3;
    sc_signal< sc_lv<32> > select_ln46_1_fu_547_p3;
    sc_signal< sc_lv<32> > add_ln47_fu_593_p2;
    sc_signal< sc_lv<32> > sub_ln46_fu_580_p2;
    sc_signal< sc_lv<32> > add_ln47_1_fu_604_p2;
    sc_signal< bool > ap_block_pp0_stage3;
    sc_signal< sc_lv<5> > grp_fu_640_p0;
    sc_signal< sc_lv<6> > grp_fu_640_p1;
    sc_signal< sc_lv<5> > grp_fu_640_p2;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< bool > ap_block_state5_pp0_stage2_iter0;
    sc_signal< bool > ap_block_state9_pp0_stage2_iter1;
    sc_signal< bool > ap_block_pp0_stage2_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<10> > grp_fu_640_p00;
    sc_signal< sc_lv<10> > grp_fu_640_p20;
    sc_signal< sc_lv<64> > mul_ln44_fu_459_p00;
    sc_signal< sc_lv<64> > mul_ln44_fu_459_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_pp0_stage1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage3;
    static const sc_lv<7> ap_ST_fsm_state13;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<10> ap_const_lv10_2A4;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<5> ap_const_lv5_1A;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<10> ap_const_lv10_1A;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln4233_fu_355_p2();
    void thread_add_ln42_2_fu_265_p2();
    void thread_add_ln42_3_fu_271_p2();
    void thread_add_ln42_4_fu_277_p2();
    void thread_add_ln42_5_fu_335_p2();
    void thread_add_ln42_fu_253_p2();
    void thread_add_ln43_2_fu_625_p2();
    void thread_add_ln43_3_fu_630_p2();
    void thread_add_ln43_4_fu_635_p2();
    void thread_add_ln43_fu_423_p2();
    void thread_add_ln45_fu_505_p2();
    void thread_add_ln46_fu_441_p2();
    void thread_add_ln47_1_fu_604_p2();
    void thread_add_ln47_fu_593_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp0_stage2();
    void thread_ap_CS_fsm_pp0_stage3();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp0_stage2();
    void thread_ap_block_pp0_stage2_subdone();
    void thread_ap_block_pp0_stage3();
    void thread_ap_block_pp0_stage3_11001();
    void thread_ap_block_pp0_stage3_subdone();
    void thread_ap_block_state10_pp0_stage3_iter1();
    void thread_ap_block_state11_pp0_stage0_iter2();
    void thread_ap_block_state12_pp0_stage1_iter2();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage1_iter0();
    void thread_ap_block_state5_pp0_stage2_iter0();
    void thread_ap_block_state6_pp0_stage3_iter0();
    void thread_ap_block_state7_pp0_stage0_iter1();
    void thread_ap_block_state8_pp0_stage1_iter1();
    void thread_ap_block_state9_pp0_stage2_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_col_0_phi_fu_232_p4();
    void thread_ap_phi_mux_empty_phi_fu_221_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_201_p4();
    void thread_ap_phi_mux_row_0_phi_fu_211_p4();
    void thread_ap_ready();
    void thread_col_4_fu_615_p2();
    void thread_grp_fu_640_p0();
    void thread_grp_fu_640_p00();
    void thread_grp_fu_640_p1();
    void thread_grp_fu_640_p2();
    void thread_grp_fu_640_p20();
    void thread_i_fu_259_p2();
    void thread_icmp_ln42_1_fu_321_p2();
    void thread_icmp_ln42_2_fu_341_p2();
    void thread_icmp_ln42_fu_247_p2();
    void thread_icmp_ln43_1_fu_409_p2();
    void thread_icmp_ln43_fu_283_p2();
    void thread_icmp_ln45_fu_500_p2();
    void thread_icmp_ln46_fu_517_p2();
    void thread_input_matrix_address0();
    void thread_input_matrix_ce0();
    void thread_j_fu_620_p2();
    void thread_kernel_address0();
    void thread_kernel_ce0();
    void thread_mul_ln44_fu_459_p0();
    void thread_mul_ln44_fu_459_p00();
    void thread_mul_ln44_fu_459_p1();
    void thread_mul_ln44_fu_459_p10();
    void thread_mul_ln44_fu_459_p2();
    void thread_out_matrix_address0();
    void thread_out_matrix_ce0();
    void thread_out_matrix_d0();
    void thread_out_matrix_we0();
    void thread_row_9_fu_511_p2();
    void thread_select_ln4234_fu_347_p3();
    void thread_select_ln42_1_fu_297_p3();
    void thread_select_ln42_2_fu_305_p3();
    void thread_select_ln42_3_fu_313_p3();
    void thread_select_ln42_4_fu_327_p3();
    void thread_select_ln42_5_fu_361_p3();
    void thread_select_ln42_6_fu_369_p3();
    void thread_select_ln42_7_fu_385_p3();
    void thread_select_ln42_8_fu_393_p3();
    void thread_select_ln42_9_fu_401_p3();
    void thread_select_ln42_fu_289_p3();
    void thread_select_ln43_fu_415_p3();
    void thread_select_ln45_fu_585_p3();
    void thread_select_ln46_1_fu_547_p3();
    void thread_select_ln46_2_fu_572_p3();
    void thread_select_ln46_fu_522_p3();
    void thread_sext_ln47_1_fu_610_p1();
    void thread_sext_ln47_fu_599_p1();
    void thread_shl_ln47_1_fu_471_p2();
    void thread_shl_ln47_2_fu_488_p2();
    void thread_shl_ln47_3_fu_529_p2();
    void thread_shl_ln47_4_fu_535_p2();
    void thread_shl_ln47_5_fu_560_p2();
    void thread_shl_ln47_fu_465_p2();
    void thread_sub_ln46_fu_580_p2();
    void thread_sub_ln47_1_fu_477_p2();
    void thread_sub_ln47_2_fu_494_p2();
    void thread_sub_ln47_3_fu_541_p2();
    void thread_sub_ln47_4_fu_555_p2();
    void thread_sub_ln47_5_fu_566_p2();
    void thread_sub_ln47_fu_483_p2();
    void thread_zext_ln42_fu_377_p1();
    void thread_zext_ln43_1_fu_433_p1();
    void thread_zext_ln44_fu_437_p1();
    void thread_zext_ln46_fu_447_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
