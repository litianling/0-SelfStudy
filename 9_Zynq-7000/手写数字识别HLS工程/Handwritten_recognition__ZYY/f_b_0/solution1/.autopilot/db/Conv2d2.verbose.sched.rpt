

================================================================
== Vivado HLS Report for 'Conv2d2'
================================================================
* Date:           Wed Oct 26 23:36:06 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        f_b_0
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.286|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1             |    ?|    ?|         ?|          -|          -|   676|    no    |
        | + Conv2d2_label1_L  |    ?|    ?|        10|          4|          1|     ?|    yes   |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 1
  Pipeline-0 : II = 4, D = 10, States = { 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 13 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 3 
13 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([8100 x float]* @fc_hidden_layer2, [1 x i8]* @p_str, [14 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)" [f_b_0/forw_back.c:42]   --->   Operation 14 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.75ns)   --->   "br label %.preheader" [f_b_0/forw_back.c:42]   --->   Operation 15 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 7.92>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten42 = phi i10 [ 0, %0 ], [ %add_ln42, %2 ]" [f_b_0/forw_back.c:42]   --->   Operation 16 'phi' 'indvar_flatten42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%phi_ln42 = phi i32 [ 0, %0 ], [ %select_ln42_7, %2 ]" [f_b_0/forw_back.c:42]   --->   Operation 17 'phi' 'phi_ln42' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%phi_ln42_1 = phi i32 [ 0, %0 ], [ %select_ln42_8, %2 ]" [f_b_0/forw_back.c:42]   --->   Operation 18 'phi' 'phi_ln42_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%indvars_iv12 = phi i32 [ 3, %0 ], [ %select_ln42_9, %2 ]" [f_b_0/forw_back.c:42]   --->   Operation 19 'phi' 'indvars_iv12' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%row = phi i5 [ 0, %0 ], [ %select_ln42_6, %2 ]" [f_b_0/forw_back.c:42]   --->   Operation 20 'phi' 'row' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%phi_ln43 = phi i32 [ 0, %0 ], [ %add_ln43_4, %2 ]" [f_b_0/forw_back.c:43]   --->   Operation 21 'phi' 'phi_ln43' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%phi_ln43_1 = phi i32 [ 0, %0 ], [ %add_ln43_3, %2 ]" [f_b_0/forw_back.c:43]   --->   Operation 22 'phi' 'phi_ln43_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%indvars_iv19 = phi i32 [ 3, %0 ], [ %add_ln43_2, %2 ]" [f_b_0/forw_back.c:43]   --->   Operation 23 'phi' 'indvars_iv19' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%col = phi i5 [ 0, %0 ], [ %j, %2 ]"   --->   Operation 24 'phi' 'col' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.85ns)   --->   "%icmp_ln42 = icmp eq i10 %indvar_flatten42, -348" [f_b_0/forw_back.c:42]   --->   Operation 25 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.85> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.93ns)   --->   "%add_ln42 = add i10 %indvar_flatten42, 1" [f_b_0/forw_back.c:42]   --->   Operation 26 'add' 'add_ln42' <Predicate = true> <Delay = 0.93> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "br i1 %icmp_ln42, label %3, label %.preheader.preheader" [f_b_0/forw_back.c:42]   --->   Operation 27 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.87ns)   --->   "%i = add i5 %row, 1" [f_b_0/forw_back.c:42]   --->   Operation 28 'add' 'i' <Predicate = (!icmp_ln42)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.20ns)   --->   "%add_ln42_2 = add i32 %indvars_iv12, 1" [f_b_0/forw_back.c:42]   --->   Operation 29 'add' 'add_ln42_2' <Predicate = (!icmp_ln42)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (1.20ns)   --->   "%add_ln42_3 = add i32 %phi_ln42_1, 1" [f_b_0/forw_back.c:42]   --->   Operation 30 'add' 'add_ln42_3' <Predicate = (!icmp_ln42)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.20ns)   --->   "%add_ln42_4 = add i32 %phi_ln42, -1" [f_b_0/forw_back.c:42]   --->   Operation 31 'add' 'add_ln42_4' <Predicate = (!icmp_ln42)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty_135 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 676, i64 676, i64 676)"   --->   Operation 32 'speclooptripcount' 'empty_135' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.87ns)   --->   "%icmp_ln43 = icmp eq i5 %col, -6" [f_b_0/forw_back.c:43]   --->   Operation 33 'icmp' 'icmp_ln43' <Predicate = (!icmp_ln42)> <Delay = 0.87> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.52ns)   --->   "%select_ln42 = select i1 %icmp_ln43, i32 0, i32 %phi_ln43" [f_b_0/forw_back.c:42]   --->   Operation 34 'select' 'select_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.52ns)   --->   "%select_ln42_1 = select i1 %icmp_ln43, i32 0, i32 %phi_ln43_1" [f_b_0/forw_back.c:42]   --->   Operation 35 'select' 'select_ln42_1' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.52ns)   --->   "%select_ln42_2 = select i1 %icmp_ln43, i32 3, i32 %indvars_iv19" [f_b_0/forw_back.c:42]   --->   Operation 36 'select' 'select_ln42_2' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.48ns)   --->   "%select_ln42_3 = select i1 %icmp_ln43, i5 0, i5 %col" [f_b_0/forw_back.c:42]   --->   Operation 37 'select' 'select_ln42_3' <Predicate = (!icmp_ln42)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (1.11ns)   --->   "%icmp_ln42_1 = icmp sgt i32 %add_ln42_2, %add_ln42_3" [f_b_0/forw_back.c:42]   --->   Operation 38 'icmp' 'icmp_ln42_1' <Predicate = (!icmp_ln42)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln42_5)   --->   "%select_ln42_4 = select i1 %icmp_ln42_1, i32 %add_ln42_2, i32 %add_ln42_3" [f_b_0/forw_back.c:42]   --->   Operation 39 'select' 'select_ln42_4' <Predicate = (!icmp_ln42)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln42_5 = add i32 %add_ln42_4, %select_ln42_4" [f_b_0/forw_back.c:42]   --->   Operation 40 'add' 'add_ln42_5' <Predicate = (!icmp_ln42)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (1.11ns)   --->   "%icmp_ln42_2 = icmp sgt i32 %indvars_iv12, %phi_ln42_1" [f_b_0/forw_back.c:42]   --->   Operation 41 'icmp' 'icmp_ln42_2' <Predicate = (!icmp_ln42)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node add_ln4233)   --->   "%select_ln4234 = select i1 %icmp_ln42_2, i32 %indvars_iv12, i32 %phi_ln42_1" [f_b_0/forw_back.c:42]   --->   Operation 42 'select' 'select_ln4234' <Predicate = (!icmp_ln42)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln4233 = add i32 %phi_ln42, %select_ln4234" [f_b_0/forw_back.c:42]   --->   Operation 43 'add' 'add_ln4233' <Predicate = (!icmp_ln42)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.52ns)   --->   "%select_ln42_5 = select i1 %icmp_ln43, i32 %add_ln42_5, i32 %add_ln4233" [f_b_0/forw_back.c:42]   --->   Operation 44 'select' 'select_ln42_5' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.48ns)   --->   "%select_ln42_6 = select i1 %icmp_ln43, i5 %i, i5 %row" [f_b_0/forw_back.c:42]   --->   Operation 45 'select' 'select_ln42_6' <Predicate = (!icmp_ln42)> <Delay = 0.48> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i5 %select_ln42_6 to i32" [f_b_0/forw_back.c:42]   --->   Operation 46 'zext' 'zext_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln42_1 = zext i5 %select_ln42_6 to i10" [f_b_0/forw_back.c:42]   --->   Operation 47 'zext' 'zext_ln42_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 48 [1/1] (0.63ns) (grouped into DSP with root node add_ln44)   --->   "%mul_ln42 = mul i10 %zext_ln42_1, 26" [f_b_0/forw_back.c:42]   --->   Operation 48 'mul' 'mul_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.63> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 49 [1/1] (0.52ns)   --->   "%select_ln42_7 = select i1 %icmp_ln43, i32 %add_ln42_4, i32 %phi_ln42" [f_b_0/forw_back.c:42]   --->   Operation 49 'select' 'select_ln42_7' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.52ns)   --->   "%select_ln42_8 = select i1 %icmp_ln43, i32 %add_ln42_3, i32 %phi_ln42_1" [f_b_0/forw_back.c:42]   --->   Operation 50 'select' 'select_ln42_8' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (0.52ns)   --->   "%select_ln42_9 = select i1 %icmp_ln43, i32 %add_ln42_2, i32 %indvars_iv12" [f_b_0/forw_back.c:42]   --->   Operation 51 'select' 'select_ln42_9' <Predicate = (!icmp_ln42)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.11ns)   --->   "%icmp_ln43_1 = icmp sgt i32 %select_ln42_2, %select_ln42_1" [f_b_0/forw_back.c:43]   --->   Operation 52 'icmp' 'icmp_ln43_1' <Predicate = (!icmp_ln42)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node add_ln43)   --->   "%select_ln43 = select i1 %icmp_ln43_1, i32 %select_ln42_2, i32 %select_ln42_1" [f_b_0/forw_back.c:43]   --->   Operation 53 'select' 'select_ln43' <Predicate = (!icmp_ln42)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln43 = add i32 %select_ln42, %select_ln43" [f_b_0/forw_back.c:43]   --->   Operation 54 'add' 'add_ln43' <Predicate = (!icmp_ln42)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln43 = zext i5 %select_ln42_3 to i10" [f_b_0/forw_back.c:43]   --->   Operation 55 'zext' 'zext_ln43' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln43_1 = zext i5 %select_ln42_3 to i32" [f_b_0/forw_back.c:43]   --->   Operation 56 'zext' 'zext_ln43_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (2.20ns) (root node of the DSP)   --->   "%add_ln44 = add i10 %mul_ln42, %zext_ln43" [f_b_0/forw_back.c:44]   --->   Operation 57 'add' 'add_ln44' <Predicate = (!icmp_ln42)> <Delay = 2.20> <Core = "DSP48">   --->   Core 88 'DSP48' <Latency = 0> <II = 1> <Delay = 2.84> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i10 %add_ln44 to i64" [f_b_0/forw_back.c:44]   --->   Operation 58 'zext' 'zext_ln44' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%out_matrix_addr = getelementptr [676 x float]* %out_matrix, i64 0, i64 %zext_ln44" [f_b_0/forw_back.c:44]   --->   Operation 59 'getelementptr' 'out_matrix_addr' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (1.35ns)   --->   "store float 0.000000e+00, float* %out_matrix_addr, align 4" [f_b_0/forw_back.c:44]   --->   Operation 60 'store' <Predicate = (!icmp_ln42)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_2 : Operation 61 [1/1] (0.87ns)   --->   "%add_ln46 = add i5 %select_ln42_3, 3" [f_b_0/forw_back.c:46]   --->   Operation 61 'add' 'add_ln46' <Predicate = (!icmp_ln42)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i5 %add_ln46 to i32" [f_b_0/forw_back.c:46]   --->   Operation 62 'zext' 'zext_ln46' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln44_1 = zext i32 %select_ln42_5 to i64" [f_b_0/forw_back.c:44]   --->   Operation 63 'zext' 'zext_ln44_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln44_2 = zext i32 %add_ln43 to i64" [f_b_0/forw_back.c:44]   --->   Operation 64 'zext' 'zext_ln44_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (3.88ns)   --->   "%mul_ln44 = mul i64 %zext_ln44_2, %zext_ln44_1" [f_b_0/forw_back.c:44]   --->   Operation 65 'mul' 'mul_ln44' <Predicate = (!icmp_ln42)> <Delay = 3.88> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.88> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.75ns)   --->   "br label %1" [f_b_0/forw_back.c:45]   --->   Operation 66 'br' <Predicate = (!icmp_ln42)> <Delay = 0.75>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "ret void" [f_b_0/forw_back.c:49]   --->   Operation 67 'ret' <Predicate = (icmp_ln42)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 5.81>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %.preheader.preheader ], [ %add_ln45, %.reset ]" [f_b_0/forw_back.c:45]   --->   Operation 68 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%row_0 = phi i32 [ %zext_ln42, %.preheader.preheader ], [ %select_ln45, %.reset ]" [f_b_0/forw_back.c:42]   --->   Operation 69 'phi' 'row_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%empty = phi float [ 0.000000e+00, %.preheader.preheader ], [ %tmp_s, %.reset ]" [f_b_0/forw_back.c:47]   --->   Operation 70 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%col_0 = phi i32 [ %zext_ln43_1, %.preheader.preheader ], [ %col_4, %.reset ]"   --->   Operation 71 'phi' 'col_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_0/forw_back.c:46]   --->   Operation 72 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node sub_ln47_1)   --->   "%shl_ln47 = shl i32 %row_0, 5" [f_b_0/forw_back.c:47]   --->   Operation 73 'shl' 'shl_ln47' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node sub_ln47_1)   --->   "%shl_ln47_1 = shl i32 %row_0, 2" [f_b_0/forw_back.c:47]   --->   Operation 74 'shl' 'shl_ln47_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln47_1 = sub i32 %shl_ln47, %shl_ln47_1" [f_b_0/forw_back.c:47]   --->   Operation 75 'sub' 'sub_ln47_1' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (1.20ns)   --->   "%sub_ln47 = sub nsw i32 %row_0, %zext_ln42" [f_b_0/forw_back.c:47]   --->   Operation 76 'sub' 'sub_ln47' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node sub_ln47_2)   --->   "%shl_ln47_2 = shl i32 %sub_ln47, 2" [f_b_0/forw_back.c:47]   --->   Operation 77 'shl' 'shl_ln47_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln47_2 = sub i32 %shl_ln47_2, %sub_ln47" [f_b_0/forw_back.c:47]   --->   Operation 78 'sub' 'sub_ln47_2' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 79 [1/1] (1.48ns)   --->   "%icmp_ln45 = icmp eq i64 %indvar_flatten, %mul_ln44" [f_b_0/forw_back.c:45]   --->   Operation 79 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (1.47ns)   --->   "%add_ln45 = add i64 1, %indvar_flatten" [f_b_0/forw_back.c:45]   --->   Operation 80 'add' 'add_ln45' <Predicate = true> <Delay = 1.47> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %icmp_ln45, label %2, label %.reset" [f_b_0/forw_back.c:45]   --->   Operation 81 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (1.20ns)   --->   "%row_9 = add nsw i32 1, %row_0" [f_b_0/forw_back.c:45]   --->   Operation 82 'add' 'row_9' <Predicate = (!icmp_ln45)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (1.11ns)   --->   "%icmp_ln46 = icmp slt i32 %col_0, %zext_ln46" [f_b_0/forw_back.c:46]   --->   Operation 83 'icmp' 'icmp_ln46' <Predicate = (!icmp_ln45)> <Delay = 1.11> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.52ns)   --->   "%select_ln46 = select i1 %icmp_ln46, i32 %col_0, i32 %zext_ln43_1" [f_b_0/forw_back.c:46]   --->   Operation 84 'select' 'select_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node sub_ln47_3)   --->   "%shl_ln47_3 = shl i32 %row_9, 5" [f_b_0/forw_back.c:47]   --->   Operation 85 'shl' 'shl_ln47_3' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node sub_ln47_3)   --->   "%shl_ln47_4 = shl i32 %row_9, 2" [f_b_0/forw_back.c:47]   --->   Operation 86 'shl' 'shl_ln47_4' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln47_3 = sub i32 %shl_ln47_3, %shl_ln47_4" [f_b_0/forw_back.c:47]   --->   Operation 87 'sub' 'sub_ln47_3' <Predicate = (!icmp_ln45)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node add_ln47)   --->   "%select_ln46_1 = select i1 %icmp_ln46, i32 %sub_ln47_1, i32 %sub_ln47_3" [f_b_0/forw_back.c:46]   --->   Operation 88 'select' 'select_ln46_1' <Predicate = (!icmp_ln45)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (1.20ns)   --->   "%sub_ln47_4 = sub nsw i32 %row_9, %zext_ln42" [f_b_0/forw_back.c:47]   --->   Operation 89 'sub' 'sub_ln47_4' <Predicate = (!icmp_ln45)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node sub_ln47_5)   --->   "%shl_ln47_5 = shl i32 %sub_ln47_4, 2" [f_b_0/forw_back.c:47]   --->   Operation 90 'shl' 'shl_ln47_5' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (1.20ns) (out node of the LUT)   --->   "%sub_ln47_5 = sub i32 %shl_ln47_5, %sub_ln47_4" [f_b_0/forw_back.c:47]   --->   Operation 91 'sub' 'sub_ln47_5' <Predicate = (!icmp_ln45)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.52ns)   --->   "%select_ln46_2 = select i1 %icmp_ln46, i32 %sub_ln47_2, i32 %sub_ln47_5" [f_b_0/forw_back.c:46]   --->   Operation 92 'select' 'select_ln46_2' <Predicate = (!icmp_ln45)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln46 = sub i32 %select_ln46_2, %zext_ln43_1" [f_b_0/forw_back.c:46]   --->   Operation 93 'sub' 'sub_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 94 [1/1] (0.52ns)   --->   "%select_ln45 = select i1 %icmp_ln46, i32 %row_0, i32 %row_9" [f_b_0/forw_back.c:45]   --->   Operation 94 'select' 'select_ln45' <Predicate = (!icmp_ln45)> <Delay = 0.52> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 95 [1/1] (1.20ns) (out node of the LUT)   --->   "%add_ln47 = add nsw i32 %select_ln46, %select_ln46_1" [f_b_0/forw_back.c:47]   --->   Operation 95 'add' 'add_ln47' <Predicate = (!icmp_ln45)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.00ns)   --->   "%sext_ln47 = sext i32 %add_ln47 to i64" [f_b_0/forw_back.c:47]   --->   Operation 96 'sext' 'sext_ln47' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 97 [1/1] (0.00ns)   --->   "%input_matrix_addr = getelementptr [784 x float]* %input_matrix, i64 0, i64 %sext_ln47" [f_b_0/forw_back.c:47]   --->   Operation 97 'getelementptr' 'input_matrix_addr' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 98 [2/2] (1.35ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_0/forw_back.c:47]   --->   Operation 98 'load' 'input_matrix_load' <Predicate = (!icmp_ln45)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_3 : Operation 99 [1/1] (0.88ns) (root node of TernaryAdder)   --->   "%add_ln47_1 = add i32 %sub_ln46, %select_ln46" [f_b_0/forw_back.c:47]   --->   Operation 99 'add' 'add_ln47_1' <Predicate = (!icmp_ln45)> <Delay = 0.88> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.44> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln47_1 = sext i32 %add_ln47_1 to i64" [f_b_0/forw_back.c:47]   --->   Operation 100 'sext' 'sext_ln47_1' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 101 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [9 x float]* %kernel, i64 0, i64 %sext_ln47_1" [f_b_0/forw_back.c:47]   --->   Operation 101 'getelementptr' 'kernel_addr' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 102 [2/2] (0.79ns)   --->   "%kernel_load = load float* %kernel_addr, align 4" [f_b_0/forw_back.c:47]   --->   Operation 102 'load' 'kernel_load' <Predicate = (!icmp_ln45)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>

State 4 <SV = 3> <Delay = 1.35>
ST_4 : Operation 103 [1/2] (1.35ns)   --->   "%input_matrix_load = load float* %input_matrix_addr, align 4" [f_b_0/forw_back.c:47]   --->   Operation 103 'load' 'input_matrix_load' <Predicate = (!icmp_ln45)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_4 : Operation 104 [1/2] (0.79ns)   --->   "%kernel_load = load float* %kernel_addr, align 4" [f_b_0/forw_back.c:47]   --->   Operation 104 'load' 'kernel_load' <Predicate = (!icmp_ln45)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>

State 5 <SV = 4> <Delay = 8.28>
ST_5 : Operation 105 [3/3] (8.28ns)   --->   "%tmp = fmul float %input_matrix_load, %kernel_load" [f_b_0/forw_back.c:47]   --->   Operation 105 'fmul' 'tmp' <Predicate = (!icmp_ln45)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 8.28>
ST_6 : Operation 106 [2/3] (8.28ns)   --->   "%tmp = fmul float %input_matrix_load, %kernel_load" [f_b_0/forw_back.c:47]   --->   Operation 106 'fmul' 'tmp' <Predicate = (!icmp_ln45)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 107 [1/1] (1.20ns)   --->   "%col_4 = add nsw i32 1, %select_ln46" [f_b_0/forw_back.c:46]   --->   Operation 107 'add' 'col_4' <Predicate = (!icmp_ln45)> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.28>
ST_7 : Operation 108 [1/3] (8.28ns)   --->   "%tmp = fmul float %input_matrix_load, %kernel_load" [f_b_0/forw_back.c:47]   --->   Operation 108 'fmul' 'tmp' <Predicate = (!icmp_ln45)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.71>
ST_8 : Operation 109 [4/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_0/forw_back.c:47]   --->   Operation 109 'fadd' 'tmp_s' <Predicate = (!icmp_ln45)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.71>
ST_9 : Operation 110 [3/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_0/forw_back.c:47]   --->   Operation 110 'fadd' 'tmp_s' <Predicate = (!icmp_ln45)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.71>
ST_10 : Operation 111 [2/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_0/forw_back.c:47]   --->   Operation 111 'fadd' 'tmp_s' <Predicate = (!icmp_ln45)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.71>
ST_11 : Operation 112 [1/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp" [f_b_0/forw_back.c:47]   --->   Operation 112 'fadd' 'tmp_s' <Predicate = (!icmp_ln45)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 1.35>
ST_12 : Operation 113 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_0/forw_back.c:46]   --->   Operation 113 'specpipeline' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_12 : Operation 114 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @Conv2d2_label1_L_str)"   --->   Operation 114 'specloopname' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_12 : Operation 115 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_0/forw_back.c:46]   --->   Operation 115 'specpipeline' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_12 : Operation 116 [1/1] (1.35ns)   --->   "store float %tmp_s, float* %out_matrix_addr, align 4" [f_b_0/forw_back.c:47]   --->   Operation 116 'store' <Predicate = (!icmp_ln45)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 676> <RAM>
ST_12 : Operation 117 [1/1] (0.00ns)   --->   "br label %1" [f_b_0/forw_back.c:46]   --->   Operation 117 'br' <Predicate = (!icmp_ln45)> <Delay = 0.00>

State 13 <SV = 3> <Delay = 1.20>
ST_13 : Operation 118 [1/1] (0.87ns)   --->   "%j = add i5 %select_ln42_3, 1" [f_b_0/forw_back.c:43]   --->   Operation 118 'add' 'j' <Predicate = true> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 119 [1/1] (1.20ns)   --->   "%add_ln43_2 = add i32 %select_ln42_2, 1" [f_b_0/forw_back.c:43]   --->   Operation 119 'add' 'add_ln43_2' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 120 [1/1] (1.20ns)   --->   "%add_ln43_3 = add i32 %select_ln42_1, 1" [f_b_0/forw_back.c:43]   --->   Operation 120 'add' 'add_ln43_3' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 121 [1/1] (1.20ns)   --->   "%add_ln43_4 = add i32 %select_ln42, -1" [f_b_0/forw_back.c:43]   --->   Operation 121 'add' 'add_ln43_4' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.20> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 122 [1/1] (0.00ns)   --->   "br label %.preheader" [f_b_0/forw_back.c:43]   --->   Operation 122 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten42', f_b_0/forw_back.c:42) with incoming values : ('add_ln42', f_b_0/forw_back.c:42) [7]  (0.755 ns)

 <State 2>: 7.92ns
The critical path consists of the following:
	'phi' operation ('phi_ln42_1', f_b_0/forw_back.c:42) with incoming values : ('select_ln42_8', f_b_0/forw_back.c:42) [9]  (0 ns)
	'add' operation ('add_ln42_3', f_b_0/forw_back.c:42) [22]  (1.2 ns)
	'icmp' operation ('icmp_ln42_1', f_b_0/forw_back.c:42) [30]  (1.11 ns)
	'select' operation ('select_ln42_4', f_b_0/forw_back.c:42) [31]  (0 ns)
	'add' operation ('add_ln42_5', f_b_0/forw_back.c:42) [32]  (1.2 ns)
	'select' operation ('select_ln42_5', f_b_0/forw_back.c:42) [36]  (0.525 ns)
	'mul' operation ('mul_ln44', f_b_0/forw_back.c:44) [57]  (3.88 ns)

 <State 3>: 5.81ns
The critical path consists of the following:
	'phi' operation ('row_0', f_b_0/forw_back.c:42) with incoming values : ('zext_ln42', f_b_0/forw_back.c:42) ('select_ln45', f_b_0/forw_back.c:45) [61]  (0 ns)
	'add' operation ('row', f_b_0/forw_back.c:45) [75]  (1.2 ns)
	'sub' operation ('sub_ln47_4', f_b_0/forw_back.c:47) [85]  (1.2 ns)
	'sub' operation ('sub_ln47_5', f_b_0/forw_back.c:47) [87]  (1.2 ns)
	'select' operation ('select_ln46_2', f_b_0/forw_back.c:46) [88]  (0.525 ns)
	'sub' operation ('sub_ln46', f_b_0/forw_back.c:46) [89]  (0 ns)
	'add' operation ('add_ln47_1', f_b_0/forw_back.c:47) [95]  (0.889 ns)
	'getelementptr' operation ('kernel_addr', f_b_0/forw_back.c:47) [97]  (0 ns)
	'load' operation ('kernel_load', f_b_0/forw_back.c:47) on array 'kernel' [98]  (0.79 ns)

 <State 4>: 1.35ns
The critical path consists of the following:
	'load' operation ('input_matrix_load', f_b_0/forw_back.c:47) on array 'input_matrix' [94]  (1.35 ns)

 <State 5>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp', f_b_0/forw_back.c:47) [99]  (8.29 ns)

 <State 6>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp', f_b_0/forw_back.c:47) [99]  (8.29 ns)

 <State 7>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp', f_b_0/forw_back.c:47) [99]  (8.29 ns)

 <State 8>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_0/forw_back.c:47) [100]  (7.72 ns)

 <State 9>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_0/forw_back.c:47) [100]  (7.72 ns)

 <State 10>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_0/forw_back.c:47) [100]  (7.72 ns)

 <State 11>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_0/forw_back.c:47) [100]  (7.72 ns)

 <State 12>: 1.35ns
The critical path consists of the following:
	'store' operation ('store_ln47', f_b_0/forw_back.c:47) of variable 'tmp_s', f_b_0/forw_back.c:47 on array 'out_matrix' [101]  (1.35 ns)

 <State 13>: 1.2ns
The critical path consists of the following:
	'add' operation ('add_ln43_2', f_b_0/forw_back.c:43) [106]  (1.2 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
