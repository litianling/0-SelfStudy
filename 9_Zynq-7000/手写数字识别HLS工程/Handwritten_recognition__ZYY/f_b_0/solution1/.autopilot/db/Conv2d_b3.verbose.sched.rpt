

================================================================
== Vivado HLS Report for 'Conv2d_b3'
================================================================
* Date:           Wed Oct 26 23:36:10 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        f_b_0
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.507|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  388|  388|  388|  388|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1             |  387|  387|        43|          -|          -|     9|    no    |
        | + Conv2d_b3_label6  |   40|   40|        17|         12|          1|     3|    yes   |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 12, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 12, D = 17, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 20 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 3 
20 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.75>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([8100 x float]* @fc_hidden_layer2, [1 x i8]* @p_str, [14 x i8]* @p_str1, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)" [f_b_0/forw_back.c:120]   --->   Operation 21 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.75ns)   --->   "br label %.preheader" [f_b_0/forw_back.c:120]   --->   Operation 22 'br' <Predicate = true> <Delay = 0.75>

State 2 <SV = 1> <Delay = 3.16>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i4 [ 0, %0 ], [ %add_ln120_1, %2 ]" [f_b_0/forw_back.c:120]   --->   Operation 23 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%indvars_iv1 = phi i3 [ 3, %0 ], [ %select_ln120_3, %2 ]" [f_b_0/forw_back.c:120]   --->   Operation 24 'phi' 'indvars_iv1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%row = phi i2 [ 0, %0 ], [ %select_ln120_1, %2 ]" [f_b_0/forw_back.c:120]   --->   Operation 25 'phi' 'row' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%indvars_iv = phi i3 [ 3, %0 ], [ %select_ln121, %2 ]" [f_b_0/forw_back.c:121]   --->   Operation 26 'phi' 'indvars_iv' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%col = phi i2 [ 0, %0 ], [ %j, %2 ]"   --->   Operation 27 'phi' 'col' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln120 = zext i2 %row to i5" [f_b_0/forw_back.c:120]   --->   Operation 28 'zext' 'zext_ln120' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %row, i2 0)" [f_b_0/forw_back.c:122]   --->   Operation 29 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln122_1 = zext i4 %shl_ln to i5" [f_b_0/forw_back.c:122]   --->   Operation 30 'zext' 'zext_ln122_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.86ns)   --->   "%sub_ln122 = sub i5 %zext_ln122_1, %zext_ln120" [f_b_0/forw_back.c:122]   --->   Operation 31 'sub' 'sub_ln122' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.88ns)   --->   "%icmp_ln120 = icmp eq i4 %indvar_flatten, -7" [f_b_0/forw_back.c:120]   --->   Operation 32 'icmp' 'icmp_ln120' <Predicate = true> <Delay = 0.88> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.86ns)   --->   "%add_ln120_1 = add i4 %indvar_flatten, 1" [f_b_0/forw_back.c:120]   --->   Operation 33 'add' 'add_ln120_1' <Predicate = true> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln120, label %3, label %.preheader.preheader" [f_b_0/forw_back.c:120]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.62ns)   --->   "%i = add i2 %row, 1" [f_b_0/forw_back.c:120]   --->   Operation 35 'add' 'i' <Predicate = (!icmp_ln120)> <Delay = 0.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.74ns)   --->   "%add_ln120 = add i3 %indvars_iv1, 1" [f_b_0/forw_back.c:120]   --->   Operation 36 'add' 'add_ln120' <Predicate = (!icmp_ln120)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%empty_127 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 9, i64 9, i64 9)"   --->   Operation 37 'speclooptripcount' 'empty_127' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.69ns)   --->   "%icmp_ln121 = icmp eq i3 %indvars_iv, -2" [f_b_0/forw_back.c:121]   --->   Operation 38 'icmp' 'icmp_ln121' <Predicate = (!icmp_ln120)> <Delay = 0.69> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.26ns)   --->   "%select_ln120 = select i1 %icmp_ln121, i2 0, i2 %col" [f_b_0/forw_back.c:120]   --->   Operation 39 'select' 'select_ln120' <Predicate = (!icmp_ln120)> <Delay = 0.26> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.26ns)   --->   "%select_ln120_1 = select i1 %icmp_ln121, i2 %i, i2 %row" [f_b_0/forw_back.c:120]   --->   Operation 40 'select' 'select_ln120_1' <Predicate = (!icmp_ln120)> <Delay = 0.26> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln120_1 = zext i2 %select_ln120_1 to i3" [f_b_0/forw_back.c:120]   --->   Operation 41 'zext' 'zext_ln120_1' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln120_2 = zext i2 %i to i5" [f_b_0/forw_back.c:120]   --->   Operation 42 'zext' 'zext_ln120_2' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln120_3 = zext i2 %select_ln120_1 to i4" [f_b_0/forw_back.c:120]   --->   Operation 43 'zext' 'zext_ln120_3' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%shl_ln122_mid1 = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 %i, i2 0)" [f_b_0/forw_back.c:122]   --->   Operation 44 'bitconcatenate' 'shl_ln122_mid1' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%zext_ln122_2 = zext i4 %shl_ln122_mid1 to i5" [f_b_0/forw_back.c:122]   --->   Operation 45 'zext' 'zext_ln122_2' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.86ns)   --->   "%sub_ln122_1 = sub i5 %zext_ln122_2, %zext_ln120_2" [f_b_0/forw_back.c:122]   --->   Operation 46 'sub' 'sub_ln122_1' <Predicate = (!icmp_ln120)> <Delay = 0.86> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node add_ln122)   --->   "%select_ln120_2 = select i1 %icmp_ln121, i5 %sub_ln122_1, i5 %sub_ln122" [f_b_0/forw_back.c:120]   --->   Operation 47 'select' 'select_ln120_2' <Predicate = (!icmp_ln120)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.27ns)   --->   "%select_ln120_3 = select i1 %icmp_ln121, i3 %add_ln120, i3 %indvars_iv1" [f_b_0/forw_back.c:120]   --->   Operation 48 'select' 'select_ln120_3' <Predicate = (!icmp_ln120)> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln121 = zext i2 %select_ln120 to i10" [f_b_0/forw_back.c:121]   --->   Operation 49 'zext' 'zext_ln121' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node add_ln122)   --->   "%zext_ln121_1 = zext i2 %select_ln120 to i5" [f_b_0/forw_back.c:121]   --->   Operation 50 'zext' 'zext_ln121_1' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.87ns) (out node of the LUT)   --->   "%add_ln122 = add i5 %select_ln120_2, %zext_ln121_1" [f_b_0/forw_back.c:122]   --->   Operation 51 'add' 'add_ln122' <Predicate = (!icmp_ln120)> <Delay = 0.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "%sext_ln122 = sext i5 %add_ln122 to i32" [f_b_0/forw_back.c:122]   --->   Operation 52 'sext' 'sext_ln122' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln122 = zext i32 %sext_ln122 to i64" [f_b_0/forw_back.c:122]   --->   Operation 53 'zext' 'zext_ln122' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%out_matrix_addr = getelementptr [9 x float]* %out_matrix, i64 0, i64 %zext_ln122" [f_b_0/forw_back.c:122]   --->   Operation 54 'getelementptr' 'out_matrix_addr' <Predicate = (!icmp_ln120)> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.79ns)   --->   "store float 0.000000e+00, float* %out_matrix_addr, align 4" [f_b_0/forw_back.c:122]   --->   Operation 55 'store' <Predicate = (!icmp_ln120)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_2 : Operation 56 [1/1] (0.62ns)   --->   "%j = add i2 %select_ln120, 1" [f_b_0/forw_back.c:124]   --->   Operation 56 'add' 'j' <Predicate = (!icmp_ln120)> <Delay = 0.62> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.75ns)   --->   "br label %1" [f_b_0/forw_back.c:123]   --->   Operation 57 'br' <Predicate = (!icmp_ln120)> <Delay = 0.75>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "ret void" [f_b_0/forw_back.c:127]   --->   Operation 58 'ret' <Predicate = (icmp_ln120)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.51>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%empty = phi float [ 0.000000e+00, %.preheader.preheader ], [ %tmp_2_125, %Conv2d_b3_label6 ]" [f_b_0/forw_back.c:125]   --->   Operation 59 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%row_0 = phi i3 [ %zext_ln120_1, %.preheader.preheader ], [ %row_4, %Conv2d_b3_label6 ]"   --->   Operation 60 'phi' 'row_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.69ns)   --->   "%icmp_ln123 = icmp eq i3 %row_0, %select_ln120_3" [f_b_0/forw_back.c:123]   --->   Operation 61 'icmp' 'icmp_ln123' <Predicate = true> <Delay = 0.69> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%empty_123 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 62 'speclooptripcount' 'empty_123' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %icmp_ln123, label %2, label %Conv2d_b3_label6" [f_b_0/forw_back.c:123]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i3 %row_0 to i4" [f_b_0/forw_back.c:123]   --->   Operation 64 'zext' 'zext_ln123' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%shl_ln8 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %row_0, i5 0)" [f_b_0/forw_back.c:125]   --->   Operation 65 'bitconcatenate' 'shl_ln8' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln125_3 = zext i8 %shl_ln8 to i9" [f_b_0/forw_back.c:125]   --->   Operation 66 'zext' 'zext_ln125_3' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%shl_ln125_1 = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %row_0, i2 0)" [f_b_0/forw_back.c:125]   --->   Operation 67 'bitconcatenate' 'shl_ln125_1' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln125_4 = zext i5 %shl_ln125_1 to i9" [f_b_0/forw_back.c:125]   --->   Operation 68 'zext' 'zext_ln125_4' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.90ns)   --->   "%sub_ln125_1 = sub i9 %zext_ln125_3, %zext_ln125_4" [f_b_0/forw_back.c:125]   --->   Operation 69 'sub' 'sub_ln125_1' <Predicate = (!icmp_ln123)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.74ns)   --->   "%sub_ln125 = sub i4 %zext_ln123, %zext_ln120_3" [f_b_0/forw_back.c:125]   --->   Operation 70 'sub' 'sub_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%sext_ln125_3 = sext i4 %sub_ln125 to i10" [f_b_0/forw_back.c:125]   --->   Operation 71 'sext' 'sext_ln125_3' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (1.42ns)   --->   "%mul_ln125 = mul i10 26, %sext_ln125_3" [f_b_0/forw_back.c:125]   --->   Operation 72 'mul' 'mul_ln125' <Predicate = (!icmp_ln123)> <Delay = 1.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%sext_ln125_4 = sext i10 %mul_ln125 to i32" [f_b_0/forw_back.c:125]   --->   Operation 73 'sext' 'sext_ln125_4' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i10 %mul_ln125 to i8" [f_b_0/forw_back.c:125]   --->   Operation 74 'trunc' 'trunc_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_16 = call i7 @_ssdm_op_PartSelect.i7.i9.i32.i32(i9 %sub_ln125_1, i32 2, i32 8)" [f_b_0/forw_back.c:125]   --->   Operation 75 'partselect' 'tmp_16' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%add_ln = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %tmp_16, i2 %select_ln120)" [f_b_0/forw_back.c:125]   --->   Operation 76 'bitconcatenate' 'add_ln' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%sext_ln125_5 = sext i9 %add_ln to i32" [f_b_0/forw_back.c:125]   --->   Operation 77 'sext' 'sext_ln125_5' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i32 %sext_ln125_5 to i64" [f_b_0/forw_back.c:125]   --->   Operation 78 'zext' 'zext_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%first_conv1_addr = getelementptr [784 x float]* @first_conv1, i64 0, i64 %zext_ln125" [f_b_0/forw_back.c:125]   --->   Operation 79 'getelementptr' 'first_conv1_addr' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 80 [2/2] (1.35ns)   --->   "%first_conv1_load = load float* %first_conv1_addr, align 4" [f_b_0/forw_back.c:125]   --->   Operation 80 'load' 'first_conv1_load' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%sext_ln125 = sext i10 %mul_ln125 to i64" [f_b_0/forw_back.c:125]   --->   Operation 81 'sext' 'sext_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%kernel_addr = getelementptr [676 x float]* %kernel, i64 0, i64 %sext_ln125" [f_b_0/forw_back.c:125]   --->   Operation 82 'getelementptr' 'kernel_addr' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 83 [2/2] (1.35ns)   --->   "%kernel_load = load float* %kernel_addr, align 4" [f_b_0/forw_back.c:125]   --->   Operation 83 'load' 'kernel_load' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 84 [1/1] (0.00ns)   --->   "%add_ln125_1 = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %tmp_16, i2 %j)" [f_b_0/forw_back.c:125]   --->   Operation 84 'bitconcatenate' 'add_ln125_1' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%sext_ln125_6 = sext i9 %add_ln125_1 to i32" [f_b_0/forw_back.c:125]   --->   Operation 85 'sext' 'sext_ln125_6' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln125_1 = zext i32 %sext_ln125_6 to i64" [f_b_0/forw_back.c:125]   --->   Operation 86 'zext' 'zext_ln125_1' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%first_conv1_addr_1 = getelementptr [784 x float]* @first_conv1, i64 0, i64 %zext_ln125_1" [f_b_0/forw_back.c:125]   --->   Operation 87 'getelementptr' 'first_conv1_addr_1' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 88 [2/2] (1.35ns)   --->   "%first_conv1_load_1 = load float* %first_conv1_addr_1, align 4" [f_b_0/forw_back.c:125]   --->   Operation 88 'load' 'first_conv1_load_1' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%or_ln125 = or i32 %sext_ln125_4, 1" [f_b_0/forw_back.c:125]   --->   Operation 89 'or' 'or_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 90 [1/1] (0.00ns)   --->   "%sext_ln125_1 = sext i32 %or_ln125 to i64" [f_b_0/forw_back.c:125]   --->   Operation 90 'sext' 'sext_ln125_1' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 91 [1/1] (0.00ns)   --->   "%kernel_addr_3 = getelementptr [676 x float]* %kernel, i64 0, i64 %sext_ln125_1" [f_b_0/forw_back.c:125]   --->   Operation 91 'getelementptr' 'kernel_addr_3' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 92 [2/2] (1.35ns)   --->   "%kernel_load_1 = load float* %kernel_addr_3, align 4" [f_b_0/forw_back.c:125]   --->   Operation 92 'load' 'kernel_load_1' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_3 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node add_ln125)   --->   "%or_ln125_1 = or i9 %sub_ln125_1, 2" [f_b_0/forw_back.c:125]   --->   Operation 93 'or' 'or_ln125_1' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node add_ln125)   --->   "%sext_ln125_7 = sext i9 %or_ln125_1 to i10" [f_b_0/forw_back.c:125]   --->   Operation 94 'sext' 'sext_ln125_7' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_3 : Operation 95 [1/1] (0.92ns) (out node of the LUT)   --->   "%add_ln125 = add i10 %sext_ln125_7, %zext_ln121" [f_b_0/forw_back.c:125]   --->   Operation 95 'add' 'add_ln125' <Predicate = (!icmp_ln123)> <Delay = 0.92> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 2.25>
ST_4 : Operation 96 [1/2] (1.35ns)   --->   "%first_conv1_load = load float* %first_conv1_addr, align 4" [f_b_0/forw_back.c:125]   --->   Operation 96 'load' 'first_conv1_load' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 97 [1/2] (1.35ns)   --->   "%kernel_load = load float* %kernel_addr, align 4" [f_b_0/forw_back.c:125]   --->   Operation 97 'load' 'kernel_load' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 98 [1/2] (1.35ns)   --->   "%first_conv1_load_1 = load float* %first_conv1_addr_1, align 4" [f_b_0/forw_back.c:125]   --->   Operation 98 'load' 'first_conv1_load_1' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 99 [1/2] (1.35ns)   --->   "%kernel_load_1 = load float* %kernel_addr_3, align 4" [f_b_0/forw_back.c:125]   --->   Operation 99 'load' 'kernel_load_1' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln125_8 = sext i10 %add_ln125 to i32" [f_b_0/forw_back.c:125]   --->   Operation 100 'sext' 'sext_ln125_8' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 101 [1/1] (0.00ns)   --->   "%zext_ln125_2 = zext i32 %sext_ln125_8 to i64" [f_b_0/forw_back.c:125]   --->   Operation 101 'zext' 'zext_ln125_2' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns)   --->   "%first_conv1_addr_2 = getelementptr [784 x float]* @first_conv1, i64 0, i64 %zext_ln125_2" [f_b_0/forw_back.c:125]   --->   Operation 102 'getelementptr' 'first_conv1_addr_2' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 103 [2/2] (1.35ns)   --->   "%first_conv1_load_2 = load float* %first_conv1_addr_2, align 4" [f_b_0/forw_back.c:125]   --->   Operation 103 'load' 'first_conv1_load_2' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_4 : Operation 104 [1/1] (0.90ns)   --->   "%add_ln125_2 = add i8 2, %trunc_ln125" [f_b_0/forw_back.c:125]   --->   Operation 104 'add' 'add_ln125_2' <Predicate = (!icmp_ln123)> <Delay = 0.90> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 105 [1/1] (0.00ns)   --->   "%sext_ln125_2 = sext i8 %add_ln125_2 to i64" [f_b_0/forw_back.c:125]   --->   Operation 105 'sext' 'sext_ln125_2' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 106 [1/1] (0.00ns)   --->   "%kernel_addr_4 = getelementptr [676 x float]* %kernel, i64 0, i64 %sext_ln125_2" [f_b_0/forw_back.c:125]   --->   Operation 106 'getelementptr' 'kernel_addr_4' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_4 : Operation 107 [2/2] (1.35ns)   --->   "%kernel_load_2 = load float* %kernel_addr_4, align 4" [f_b_0/forw_back.c:125]   --->   Operation 107 'load' 'kernel_load_2' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 5 <SV = 4> <Delay = 8.28>
ST_5 : Operation 108 [3/3] (8.28ns)   --->   "%tmp3 = fmul float %first_conv1_load, %kernel_load" [f_b_0/forw_back.c:125]   --->   Operation 108 'fmul' 'tmp3' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 109 [1/2] (1.35ns)   --->   "%first_conv1_load_2 = load float* %first_conv1_addr_2, align 4" [f_b_0/forw_back.c:125]   --->   Operation 109 'load' 'first_conv1_load_2' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_5 : Operation 110 [1/2] (1.35ns)   --->   "%kernel_load_2 = load float* %kernel_addr_4, align 4" [f_b_0/forw_back.c:125]   --->   Operation 110 'load' 'kernel_load_2' <Predicate = (!icmp_ln123)> <Delay = 1.35> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>

State 6 <SV = 5> <Delay = 8.28>
ST_6 : Operation 111 [2/3] (8.28ns)   --->   "%tmp3 = fmul float %first_conv1_load, %kernel_load" [f_b_0/forw_back.c:125]   --->   Operation 111 'fmul' 'tmp3' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 112 [3/3] (8.28ns)   --->   "%tmp_1 = fmul float %first_conv1_load_1, %kernel_load_1" [f_b_0/forw_back.c:125]   --->   Operation 112 'fmul' 'tmp_1' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 8.28>
ST_7 : Operation 113 [1/3] (8.28ns)   --->   "%tmp3 = fmul float %first_conv1_load, %kernel_load" [f_b_0/forw_back.c:125]   --->   Operation 113 'fmul' 'tmp3' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 114 [2/3] (8.28ns)   --->   "%tmp_1 = fmul float %first_conv1_load_1, %kernel_load_1" [f_b_0/forw_back.c:125]   --->   Operation 114 'fmul' 'tmp_1' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 115 [3/3] (8.28ns)   --->   "%tmp_2 = fmul float %first_conv1_load_2, %kernel_load_2" [f_b_0/forw_back.c:125]   --->   Operation 115 'fmul' 'tmp_2' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 8.28>
ST_8 : Operation 116 [4/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp3" [f_b_0/forw_back.c:125]   --->   Operation 116 'fadd' 'tmp_s' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [1/3] (8.28ns)   --->   "%tmp_1 = fmul float %first_conv1_load_1, %kernel_load_1" [f_b_0/forw_back.c:125]   --->   Operation 117 'fmul' 'tmp_1' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 118 [2/3] (8.28ns)   --->   "%tmp_2 = fmul float %first_conv1_load_2, %kernel_load_2" [f_b_0/forw_back.c:125]   --->   Operation 118 'fmul' 'tmp_2' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 8.28>
ST_9 : Operation 119 [3/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp3" [f_b_0/forw_back.c:125]   --->   Operation 119 'fadd' 'tmp_s' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 120 [1/3] (8.28ns)   --->   "%tmp_2 = fmul float %first_conv1_load_2, %kernel_load_2" [f_b_0/forw_back.c:125]   --->   Operation 120 'fmul' 'tmp_2' <Predicate = (!icmp_ln123)> <Delay = 8.28> <Core = "FMul">   --->   Core 106 'FMul' <Latency = 2> <II = 1> <Delay = 8.28> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.71>
ST_10 : Operation 121 [2/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp3" [f_b_0/forw_back.c:125]   --->   Operation 121 'fadd' 'tmp_s' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.71>
ST_11 : Operation 122 [1/4] (7.71ns)   --->   "%tmp_s = fadd float %empty, %tmp3" [f_b_0/forw_back.c:125]   --->   Operation 122 'fadd' 'tmp_s' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.71>
ST_12 : Operation 123 [4/4] (7.71ns)   --->   "%tmp_1_124 = fadd float %tmp_s, %tmp_1" [f_b_0/forw_back.c:125]   --->   Operation 123 'fadd' 'tmp_1_124' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.71>
ST_13 : Operation 124 [3/4] (7.71ns)   --->   "%tmp_1_124 = fadd float %tmp_s, %tmp_1" [f_b_0/forw_back.c:125]   --->   Operation 124 'fadd' 'tmp_1_124' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.71>
ST_14 : Operation 125 [2/4] (7.71ns)   --->   "%tmp_1_124 = fadd float %tmp_s, %tmp_1" [f_b_0/forw_back.c:125]   --->   Operation 125 'fadd' 'tmp_1_124' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 126 [1/1] (0.74ns)   --->   "%row_4 = add i3 1, %row_0" [f_b_0/forw_back.c:123]   --->   Operation 126 'add' 'row_4' <Predicate = (!icmp_ln123)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.71>
ST_15 : Operation 127 [1/4] (7.71ns)   --->   "%tmp_1_124 = fadd float %tmp_s, %tmp_1" [f_b_0/forw_back.c:125]   --->   Operation 127 'fadd' 'tmp_1_124' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.71>
ST_16 : Operation 128 [4/4] (7.71ns)   --->   "%tmp_2_125 = fadd float %tmp_1_124, %tmp_2" [f_b_0/forw_back.c:125]   --->   Operation 128 'fadd' 'tmp_2_125' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.71>
ST_17 : Operation 129 [3/4] (7.71ns)   --->   "%tmp_2_125 = fadd float %tmp_1_124, %tmp_2" [f_b_0/forw_back.c:125]   --->   Operation 129 'fadd' 'tmp_2_125' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.71>
ST_18 : Operation 130 [2/4] (7.71ns)   --->   "%tmp_2_125 = fadd float %tmp_1_124, %tmp_2" [f_b_0/forw_back.c:125]   --->   Operation 130 'fadd' 'tmp_2_125' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 8.50>
ST_19 : Operation 131 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str9) nounwind" [f_b_0/forw_back.c:124]   --->   Operation 131 'specloopname' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_19 : Operation 132 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str9)" [f_b_0/forw_back.c:124]   --->   Operation 132 'specregionbegin' 'tmp' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_19 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [f_b_0/forw_back.c:124]   --->   Operation 133 'specpipeline' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_19 : Operation 134 [1/4] (7.71ns)   --->   "%tmp_2_125 = fadd float %tmp_1_124, %tmp_2" [f_b_0/forw_back.c:125]   --->   Operation 134 'fadd' 'tmp_2_125' <Predicate = (!icmp_ln123)> <Delay = 7.71> <Core = "FAddSub">   --->   Core 105 'FAddSub' <Latency = 3> <II = 1> <Delay = 7.71> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 135 [1/1] (0.79ns)   --->   "store float %tmp_2_125, float* %out_matrix_addr, align 4" [f_b_0/forw_back.c:125]   --->   Operation 135 'store' <Predicate = (!icmp_ln123)> <Delay = 0.79> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 9> <RAM>
ST_19 : Operation 136 [1/1] (0.00ns)   --->   "%empty_126 = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str9, i32 %tmp)" [f_b_0/forw_back.c:125]   --->   Operation 136 'specregionend' 'empty_126' <Predicate = (!icmp_ln123)> <Delay = 0.00>
ST_19 : Operation 137 [1/1] (0.00ns)   --->   "br label %1" [f_b_0/forw_back.c:123]   --->   Operation 137 'br' <Predicate = (!icmp_ln123)> <Delay = 0.00>

State 20 <SV = 3> <Delay = 1.02>
ST_20 : Operation 138 [1/1] (0.74ns)   --->   "%add_ln121 = add i3 %indvars_iv, 1" [f_b_0/forw_back.c:121]   --->   Operation 138 'add' 'add_ln121' <Predicate = (!icmp_ln121)> <Delay = 0.74> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.74> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 139 [1/1] (0.27ns)   --->   "%select_ln121 = select i1 %icmp_ln121, i3 -4, i3 %add_ln121" [f_b_0/forw_back.c:121]   --->   Operation 139 'select' 'select_ln121' <Predicate = true> <Delay = 0.27> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.27> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 140 [1/1] (0.00ns)   --->   "br label %.preheader" [f_b_0/forw_back.c:121]   --->   Operation 140 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten', f_b_0/forw_back.c:120) with incoming values : ('add_ln120_1', f_b_0/forw_back.c:120) [7]  (0.755 ns)

 <State 2>: 3.16ns
The critical path consists of the following:
	'phi' operation ('row', f_b_0/forw_back.c:120) with incoming values : ('select_ln120_1', f_b_0/forw_back.c:120) [9]  (0 ns)
	'add' operation ('i', f_b_0/forw_back.c:120) [20]  (0.625 ns)
	'sub' operation ('sub_ln122_1', f_b_0/forw_back.c:122) [31]  (0.868 ns)
	'select' operation ('select_ln120_2', f_b_0/forw_back.c:120) [32]  (0 ns)
	'add' operation ('add_ln122', f_b_0/forw_back.c:122) [36]  (0.878 ns)
	'getelementptr' operation ('out_matrix_addr', f_b_0/forw_back.c:122) [39]  (0 ns)
	'store' operation ('store_ln122', f_b_0/forw_back.c:122) of constant 0 on array 'out_matrix' [40]  (0.79 ns)

 <State 3>: 3.52ns
The critical path consists of the following:
	'phi' operation ('row') with incoming values : ('zext_ln120_1', f_b_0/forw_back.c:120) ('row', f_b_0/forw_back.c:123) [45]  (0 ns)
	'sub' operation ('sub_ln125', f_b_0/forw_back.c:125) [59]  (0.746 ns)
	'mul' operation ('mul_ln125', f_b_0/forw_back.c:125) [61]  (1.42 ns)
	'getelementptr' operation ('kernel_addr', f_b_0/forw_back.c:125) [71]  (0 ns)
	'load' operation ('kernel_load', f_b_0/forw_back.c:125) on array 'kernel' [72]  (1.35 ns)

 <State 4>: 2.26ns
The critical path consists of the following:
	'add' operation ('add_ln125_2', f_b_0/forw_back.c:125) [93]  (0.907 ns)
	'getelementptr' operation ('kernel_addr_4', f_b_0/forw_back.c:125) [95]  (0 ns)
	'load' operation ('kernel_load_2', f_b_0/forw_back.c:125) on array 'kernel' [96]  (1.35 ns)

 <State 5>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp3', f_b_0/forw_back.c:125) [73]  (8.29 ns)

 <State 6>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp3', f_b_0/forw_back.c:125) [73]  (8.29 ns)

 <State 7>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp3', f_b_0/forw_back.c:125) [73]  (8.29 ns)

 <State 8>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp_1', f_b_0/forw_back.c:125) [84]  (8.29 ns)

 <State 9>: 8.29ns
The critical path consists of the following:
	'fmul' operation ('tmp_2', f_b_0/forw_back.c:125) [97]  (8.29 ns)

 <State 10>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_0/forw_back.c:125) [74]  (7.72 ns)

 <State 11>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_s', f_b_0/forw_back.c:125) [74]  (7.72 ns)

 <State 12>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_124', f_b_0/forw_back.c:125) [85]  (7.72 ns)

 <State 13>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_124', f_b_0/forw_back.c:125) [85]  (7.72 ns)

 <State 14>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_124', f_b_0/forw_back.c:125) [85]  (7.72 ns)

 <State 15>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_1_124', f_b_0/forw_back.c:125) [85]  (7.72 ns)

 <State 16>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_2_125', f_b_0/forw_back.c:125) [98]  (7.72 ns)

 <State 17>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_2_125', f_b_0/forw_back.c:125) [98]  (7.72 ns)

 <State 18>: 7.72ns
The critical path consists of the following:
	'fadd' operation ('tmp_2_125', f_b_0/forw_back.c:125) [98]  (7.72 ns)

 <State 19>: 8.51ns
The critical path consists of the following:
	'fadd' operation ('tmp_2_125', f_b_0/forw_back.c:125) [98]  (7.72 ns)
	'store' operation ('store_ln125', f_b_0/forw_back.c:125) of variable 'tmp_2_125', f_b_0/forw_back.c:125 on array 'out_matrix' [99]  (0.79 ns)

 <State 20>: 1.02ns
The critical path consists of the following:
	'add' operation ('add_ln121', f_b_0/forw_back.c:121) [104]  (0.746 ns)
	'select' operation ('select_ln121', f_b_0/forw_back.c:121) [105]  (0.275 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
