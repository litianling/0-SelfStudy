// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module backward (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        label_r,
        m_axi_lr_in_AWVALID,
        m_axi_lr_in_AWREADY,
        m_axi_lr_in_AWADDR,
        m_axi_lr_in_AWID,
        m_axi_lr_in_AWLEN,
        m_axi_lr_in_AWSIZE,
        m_axi_lr_in_AWBURST,
        m_axi_lr_in_AWLOCK,
        m_axi_lr_in_AWCACHE,
        m_axi_lr_in_AWPROT,
        m_axi_lr_in_AWQOS,
        m_axi_lr_in_AWREGION,
        m_axi_lr_in_AWUSER,
        m_axi_lr_in_WVALID,
        m_axi_lr_in_WREADY,
        m_axi_lr_in_WDATA,
        m_axi_lr_in_WSTRB,
        m_axi_lr_in_WLAST,
        m_axi_lr_in_WID,
        m_axi_lr_in_WUSER,
        m_axi_lr_in_ARVALID,
        m_axi_lr_in_ARREADY,
        m_axi_lr_in_ARADDR,
        m_axi_lr_in_ARID,
        m_axi_lr_in_ARLEN,
        m_axi_lr_in_ARSIZE,
        m_axi_lr_in_ARBURST,
        m_axi_lr_in_ARLOCK,
        m_axi_lr_in_ARCACHE,
        m_axi_lr_in_ARPROT,
        m_axi_lr_in_ARQOS,
        m_axi_lr_in_ARREGION,
        m_axi_lr_in_ARUSER,
        m_axi_lr_in_RVALID,
        m_axi_lr_in_RREADY,
        m_axi_lr_in_RDATA,
        m_axi_lr_in_RLAST,
        m_axi_lr_in_RID,
        m_axi_lr_in_RUSER,
        m_axi_lr_in_RRESP,
        m_axi_lr_in_BVALID,
        m_axi_lr_in_BREADY,
        m_axi_lr_in_BRESP,
        m_axi_lr_in_BID,
        m_axi_lr_in_BUSER,
        lr_in_offset,
        probability_result_address0,
        probability_result_ce0,
        probability_result_q0,
        fc_in_2_relu1_0_address0,
        fc_in_2_relu1_0_ce0,
        fc_in_2_relu1_0_q0,
        fc_hidden_layer2_address0,
        fc_hidden_layer2_ce0,
        fc_hidden_layer2_we0,
        fc_hidden_layer2_d0,
        fc_hidden_layer2_q0,
        fc_out_1_0_address0,
        fc_out_1_0_ce0,
        fc_out_1_0_q0,
        fc_in_1_0_address0,
        fc_in_1_0_ce0,
        fc_in_1_0_q0,
        fc_hidden_layer1_address0,
        fc_hidden_layer1_ce0,
        fc_hidden_layer1_we0,
        fc_hidden_layer1_d0,
        fc_hidden_layer1_q0,
        max_poo_locate_2_address0,
        max_poo_locate_2_ce0,
        max_poo_locate_2_q0,
        max_poo_out_1_address0,
        max_poo_out_1_ce0,
        max_poo_out_1_q0,
        conv_kernel_2_address0,
        conv_kernel_2_ce0,
        conv_kernel_2_we0,
        conv_kernel_2_d0,
        conv_kernel_2_q0,
        max_poo_locate_1_address0,
        max_poo_locate_1_ce0,
        max_poo_locate_1_q0,
        mnist_data_address0,
        mnist_data_ce0,
        mnist_data_q0,
        conv_kernel_1_address0,
        conv_kernel_1_ce0,
        conv_kernel_1_we0,
        conv_kernel_1_d0,
        conv_kernel_1_q0
);

parameter    ap_ST_fsm_state1 = 109'd1;
parameter    ap_ST_fsm_state2 = 109'd2;
parameter    ap_ST_fsm_state3 = 109'd4;
parameter    ap_ST_fsm_state4 = 109'd8;
parameter    ap_ST_fsm_state5 = 109'd16;
parameter    ap_ST_fsm_state6 = 109'd32;
parameter    ap_ST_fsm_state7 = 109'd64;
parameter    ap_ST_fsm_state8 = 109'd128;
parameter    ap_ST_fsm_state9 = 109'd256;
parameter    ap_ST_fsm_state10 = 109'd512;
parameter    ap_ST_fsm_state11 = 109'd1024;
parameter    ap_ST_fsm_state12 = 109'd2048;
parameter    ap_ST_fsm_state13 = 109'd4096;
parameter    ap_ST_fsm_state14 = 109'd8192;
parameter    ap_ST_fsm_state15 = 109'd16384;
parameter    ap_ST_fsm_state16 = 109'd32768;
parameter    ap_ST_fsm_state17 = 109'd65536;
parameter    ap_ST_fsm_state18 = 109'd131072;
parameter    ap_ST_fsm_state19 = 109'd262144;
parameter    ap_ST_fsm_state20 = 109'd524288;
parameter    ap_ST_fsm_state21 = 109'd1048576;
parameter    ap_ST_fsm_state22 = 109'd2097152;
parameter    ap_ST_fsm_state23 = 109'd4194304;
parameter    ap_ST_fsm_state24 = 109'd8388608;
parameter    ap_ST_fsm_state25 = 109'd16777216;
parameter    ap_ST_fsm_state26 = 109'd33554432;
parameter    ap_ST_fsm_state27 = 109'd67108864;
parameter    ap_ST_fsm_state28 = 109'd134217728;
parameter    ap_ST_fsm_state29 = 109'd268435456;
parameter    ap_ST_fsm_state30 = 109'd536870912;
parameter    ap_ST_fsm_state31 = 109'd1073741824;
parameter    ap_ST_fsm_state32 = 109'd2147483648;
parameter    ap_ST_fsm_state33 = 109'd4294967296;
parameter    ap_ST_fsm_state34 = 109'd8589934592;
parameter    ap_ST_fsm_state35 = 109'd17179869184;
parameter    ap_ST_fsm_state36 = 109'd34359738368;
parameter    ap_ST_fsm_state37 = 109'd68719476736;
parameter    ap_ST_fsm_state38 = 109'd137438953472;
parameter    ap_ST_fsm_state39 = 109'd274877906944;
parameter    ap_ST_fsm_state40 = 109'd549755813888;
parameter    ap_ST_fsm_state41 = 109'd1099511627776;
parameter    ap_ST_fsm_state42 = 109'd2199023255552;
parameter    ap_ST_fsm_state43 = 109'd4398046511104;
parameter    ap_ST_fsm_state44 = 109'd8796093022208;
parameter    ap_ST_fsm_state45 = 109'd17592186044416;
parameter    ap_ST_fsm_state46 = 109'd35184372088832;
parameter    ap_ST_fsm_state47 = 109'd70368744177664;
parameter    ap_ST_fsm_state48 = 109'd140737488355328;
parameter    ap_ST_fsm_state49 = 109'd281474976710656;
parameter    ap_ST_fsm_state50 = 109'd562949953421312;
parameter    ap_ST_fsm_state51 = 109'd1125899906842624;
parameter    ap_ST_fsm_state52 = 109'd2251799813685248;
parameter    ap_ST_fsm_state53 = 109'd4503599627370496;
parameter    ap_ST_fsm_state54 = 109'd9007199254740992;
parameter    ap_ST_fsm_state55 = 109'd18014398509481984;
parameter    ap_ST_fsm_state56 = 109'd36028797018963968;
parameter    ap_ST_fsm_state57 = 109'd72057594037927936;
parameter    ap_ST_fsm_state58 = 109'd144115188075855872;
parameter    ap_ST_fsm_state59 = 109'd288230376151711744;
parameter    ap_ST_fsm_state60 = 109'd576460752303423488;
parameter    ap_ST_fsm_state61 = 109'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 109'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 109'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 109'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 109'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 109'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 109'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 109'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 109'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 109'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 109'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 109'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 109'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 109'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 109'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 109'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 109'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 109'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 109'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 109'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 109'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 109'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 109'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 109'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 109'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 109'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 109'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 109'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 109'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 109'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 109'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 109'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 109'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 109'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 109'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 109'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 109'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 109'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 109'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 109'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 109'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 109'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 109'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 109'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 109'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 109'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 109'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 109'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 109'd324518553658426726783156020576256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] label_r;
output   m_axi_lr_in_AWVALID;
input   m_axi_lr_in_AWREADY;
output  [31:0] m_axi_lr_in_AWADDR;
output  [0:0] m_axi_lr_in_AWID;
output  [31:0] m_axi_lr_in_AWLEN;
output  [2:0] m_axi_lr_in_AWSIZE;
output  [1:0] m_axi_lr_in_AWBURST;
output  [1:0] m_axi_lr_in_AWLOCK;
output  [3:0] m_axi_lr_in_AWCACHE;
output  [2:0] m_axi_lr_in_AWPROT;
output  [3:0] m_axi_lr_in_AWQOS;
output  [3:0] m_axi_lr_in_AWREGION;
output  [0:0] m_axi_lr_in_AWUSER;
output   m_axi_lr_in_WVALID;
input   m_axi_lr_in_WREADY;
output  [31:0] m_axi_lr_in_WDATA;
output  [3:0] m_axi_lr_in_WSTRB;
output   m_axi_lr_in_WLAST;
output  [0:0] m_axi_lr_in_WID;
output  [0:0] m_axi_lr_in_WUSER;
output   m_axi_lr_in_ARVALID;
input   m_axi_lr_in_ARREADY;
output  [31:0] m_axi_lr_in_ARADDR;
output  [0:0] m_axi_lr_in_ARID;
output  [31:0] m_axi_lr_in_ARLEN;
output  [2:0] m_axi_lr_in_ARSIZE;
output  [1:0] m_axi_lr_in_ARBURST;
output  [1:0] m_axi_lr_in_ARLOCK;
output  [3:0] m_axi_lr_in_ARCACHE;
output  [2:0] m_axi_lr_in_ARPROT;
output  [3:0] m_axi_lr_in_ARQOS;
output  [3:0] m_axi_lr_in_ARREGION;
output  [0:0] m_axi_lr_in_ARUSER;
input   m_axi_lr_in_RVALID;
output   m_axi_lr_in_RREADY;
input  [31:0] m_axi_lr_in_RDATA;
input   m_axi_lr_in_RLAST;
input  [0:0] m_axi_lr_in_RID;
input  [0:0] m_axi_lr_in_RUSER;
input  [1:0] m_axi_lr_in_RRESP;
input   m_axi_lr_in_BVALID;
output   m_axi_lr_in_BREADY;
input  [1:0] m_axi_lr_in_BRESP;
input  [0:0] m_axi_lr_in_BID;
input  [0:0] m_axi_lr_in_BUSER;
input  [29:0] lr_in_offset;
output  [3:0] probability_result_address0;
output   probability_result_ce0;
input  [31:0] probability_result_q0;
output  [4:0] fc_in_2_relu1_0_address0;
output   fc_in_2_relu1_0_ce0;
input  [31:0] fc_in_2_relu1_0_q0;
output  [7:0] fc_hidden_layer2_address0;
output   fc_hidden_layer2_ce0;
output   fc_hidden_layer2_we0;
output  [31:0] fc_hidden_layer2_d0;
input  [31:0] fc_hidden_layer2_q0;
output  [4:0] fc_out_1_0_address0;
output   fc_out_1_0_ce0;
input  [31:0] fc_out_1_0_q0;
output  [5:0] fc_in_1_0_address0;
output   fc_in_1_0_ce0;
input  [31:0] fc_in_1_0_q0;
output  [9:0] fc_hidden_layer1_address0;
output   fc_hidden_layer1_ce0;
output   fc_hidden_layer1_we0;
output  [31:0] fc_hidden_layer1_d0;
input  [31:0] fc_hidden_layer1_q0;
output  [5:0] max_poo_locate_2_address0;
output   max_poo_locate_2_ce0;
input  [31:0] max_poo_locate_2_q0;
output  [7:0] max_poo_out_1_address0;
output   max_poo_out_1_ce0;
input  [31:0] max_poo_out_1_q0;
output  [3:0] conv_kernel_2_address0;
output   conv_kernel_2_ce0;
output   conv_kernel_2_we0;
output  [31:0] conv_kernel_2_d0;
input  [31:0] conv_kernel_2_q0;
output  [7:0] max_poo_locate_1_address0;
output   max_poo_locate_1_ce0;
input  [31:0] max_poo_locate_1_q0;
output  [9:0] mnist_data_address0;
output   mnist_data_ce0;
input  [31:0] mnist_data_q0;
output  [3:0] conv_kernel_1_address0;
output   conv_kernel_1_ce0;
output   conv_kernel_1_we0;
output  [31:0] conv_kernel_1_d0;
input  [31:0] conv_kernel_1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_lr_in_ARVALID;
reg m_axi_lr_in_RREADY;
reg[3:0] probability_result_address0;
reg probability_result_ce0;
reg fc_in_2_relu1_0_ce0;
reg[7:0] fc_hidden_layer2_address0;
reg fc_hidden_layer2_ce0;
reg fc_hidden_layer2_we0;
reg fc_out_1_0_ce0;
reg fc_in_1_0_ce0;
reg[9:0] fc_hidden_layer1_address0;
reg fc_hidden_layer1_ce0;
reg fc_hidden_layer1_we0;
reg[3:0] conv_kernel_2_address0;
reg conv_kernel_2_ce0;
reg conv_kernel_2_we0;
reg conv_kernel_1_ce0;
reg conv_kernel_1_we0;

(* fsm_encoding = "none" *) reg   [108:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    lr_in_blk_n_AR;
wire    ap_CS_fsm_state69;
wire   [0:0] icmp_ln107_fu_1210_p2;
reg    lr_in_blk_n_R;
wire    ap_CS_fsm_state78;
wire    ap_CS_fsm_state72;
wire    ap_CS_fsm_state79;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state83;
wire   [31:0] grp_fu_739_p2;
reg   [31:0] reg_771;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state95;
wire    ap_CS_fsm_state108;
wire   [31:0] grad_2_q0;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state21;
wire   [31:0] grp_fu_746_p2;
reg   [31:0] reg_787;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state90;
wire    ap_CS_fsm_state103;
reg   [31:0] reg_794;
wire    ap_CS_fsm_state20;
wire   [31:0] grad_1_q0;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state54;
reg   [31:0] reg_805;
wire    ap_CS_fsm_state53;
reg   [31:0] reg_811;
wire    grp_MatrixBackPropagatio_fu_708_ap_ready;
wire    grp_MatrixBackPropagatio_fu_708_ap_done;
reg   [3:0] grad_2_addr_reg_1455;
reg   [31:0] probability_result_l_reg_1460;
wire    ap_CS_fsm_state2;
reg   [31:0] lr_in_addr_reg_1465;
wire   [3:0] i_4_fu_843_p2;
reg   [3:0] i_4_reg_1474;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln155_fu_849_p2;
reg   [0:0] icmp_ln155_reg_1479;
wire   [0:0] icmp_ln154_fu_837_p2;
wire   [63:0] zext_ln156_fu_854_p1;
reg   [63:0] zext_ln156_reg_1483;
wire   [4:0] i_fu_865_p2;
reg   [4:0] i_reg_1496;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln73_fu_859_p2;
wire   [7:0] shl_ln_fu_876_p3;
reg   [7:0] shl_ln_reg_1506;
wire    ap_CS_fsm_state11;
wire   [5:0] shl_ln75_1_fu_884_p3;
reg   [5:0] shl_ln75_1_reg_1511;
reg   [31:0] fc_in_2_relu1_0_load_reg_1516;
wire   [3:0] j_fu_902_p2;
reg   [3:0] j_reg_1524;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln74_fu_896_p2;
wire   [7:0] add_ln75_1_fu_922_p2;
reg   [7:0] add_ln75_1_reg_1534;
wire   [4:0] i_5_fu_937_p2;
reg   [4:0] i_5_reg_1542;
wire    ap_CS_fsm_state18;
reg   [4:0] rgrad_1_addr_reg_1547;
wire   [0:0] icmp_ln79_fu_931_p2;
wire   [7:0] shl_ln2_fu_948_p3;
reg   [7:0] shl_ln2_reg_1552;
wire   [5:0] shl_ln82_1_fu_956_p3;
reg   [5:0] shl_ln82_1_reg_1557;
wire   [3:0] j_11_fu_974_p2;
reg   [3:0] j_11_reg_1565;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln81_fu_968_p2;
wire   [4:0] i_7_fu_1010_p2;
reg   [4:0] i_7_reg_1583;
wire    ap_CS_fsm_state31;
wire   [63:0] zext_ln88_fu_1016_p1;
reg   [63:0] zext_ln88_reg_1588;
wire   [0:0] icmp_ln87_fu_1004_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] icmp_ln88_fu_1039_p2;
reg   [0:0] icmp_ln88_reg_1605;
wire   [0:0] icmp_ln88_1_fu_1045_p2;
reg   [0:0] icmp_ln88_1_reg_1610;
wire   [0:0] and_ln88_fu_1055_p2;
reg   [0:0] and_ln88_reg_1620;
wire    ap_CS_fsm_state33;
wire   [31:0] rgrad_1_q0;
wire   [63:0] grp_fu_756_p1;
reg   [63:0] tmp_i3_reg_1629;
wire    ap_CS_fsm_state34;
wire   [63:0] grp_fu_766_p2;
reg   [63:0] tmp_2_i_reg_1634;
wire    ap_CS_fsm_state40;
wire   [5:0] i_6_fu_1067_p2;
reg   [5:0] i_6_reg_1642;
wire    ap_CS_fsm_state43;
wire   [0:0] icmp_ln73_1_fu_1061_p2;
wire   [9:0] shl_ln75_2_fu_1078_p3;
reg   [9:0] shl_ln75_2_reg_1652;
wire    ap_CS_fsm_state44;
wire   [7:0] shl_ln75_3_fu_1086_p3;
reg   [7:0] shl_ln75_3_reg_1657;
reg   [31:0] fc_in_1_0_load_reg_1662;
wire   [4:0] j_12_fu_1104_p2;
reg   [4:0] j_12_reg_1670;
wire    ap_CS_fsm_state45;
wire   [0:0] icmp_ln74_1_fu_1098_p2;
wire   [9:0] add_ln75_3_fu_1124_p2;
reg   [9:0] add_ln75_3_reg_1680;
wire   [5:0] i_8_fu_1139_p2;
reg   [5:0] i_8_reg_1688;
wire    ap_CS_fsm_state51;
reg   [5:0] grad_0_addr_reg_1693;
wire   [0:0] icmp_ln79_1_fu_1133_p2;
wire   [9:0] shl_ln82_2_fu_1150_p3;
reg   [9:0] shl_ln82_2_reg_1698;
wire   [7:0] shl_ln82_3_fu_1158_p3;
reg   [7:0] shl_ln82_3_reg_1703;
wire   [4:0] j_13_fu_1176_p2;
reg   [4:0] j_13_reg_1711;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln81_1_fu_1170_p2;
wire   [1:0] i_9_fu_1216_p2;
reg   [1:0] i_9_reg_1729;
reg    ap_block_state69_io;
wire   [4:0] sub_ln109_fu_1234_p2;
reg   [4:0] sub_ln109_reg_1734;
wire   [4:0] add_ln109_fu_1268_p2;
reg   [4:0] add_ln109_reg_1739;
wire   [1:0] j_14_fu_1284_p2;
reg   [1:0] j_14_reg_1747;
wire    ap_CS_fsm_state70;
wire   [0:0] icmp_ln108_fu_1278_p2;
wire   [4:0] sub_ln109_3_fu_1304_p2;
reg   [4:0] sub_ln109_3_reg_1757;
reg   [31:0] lr_in_addr_read_1_reg_1762;
wire    grp_MaxPooBackPropagatio_1_fu_717_ap_ready;
wire    grp_MaxPooBackPropagatio_1_fu_717_ap_done;
wire   [5:0] i_10_fu_1323_p2;
reg   [5:0] i_10_reg_1770;
wire    ap_CS_fsm_state84;
wire   [9:0] shl_ln4_fu_1329_p3;
reg   [9:0] shl_ln4_reg_1775;
wire   [0:0] icmp_ln123_fu_1317_p2;
wire   [7:0] shl_ln125_1_fu_1337_p3;
reg   [7:0] shl_ln125_1_reg_1780;
wire   [4:0] j_15_fu_1355_p2;
reg   [4:0] j_15_reg_1788;
wire    ap_CS_fsm_state85;
reg   [9:0] fc_hidden_layer1_add_2_reg_1793;
wire   [0:0] icmp_ln124_fu_1349_p2;
wire   [31:0] wgrad_1_q0;
reg   [31:0] wgrad_1_load_reg_1803;
wire    ap_CS_fsm_state86;
wire   [4:0] i_11_fu_1387_p2;
reg   [4:0] i_11_reg_1811;
wire    ap_CS_fsm_state97;
wire   [7:0] shl_ln125_2_fu_1393_p3;
reg   [7:0] shl_ln125_2_reg_1816;
wire   [0:0] icmp_ln123_1_fu_1381_p2;
wire   [5:0] shl_ln125_3_fu_1401_p3;
reg   [5:0] shl_ln125_3_reg_1821;
wire   [3:0] j_16_fu_1419_p2;
reg   [3:0] j_16_reg_1829;
wire    ap_CS_fsm_state98;
reg   [7:0] fc_hidden_layer2_add_2_reg_1834;
wire   [0:0] icmp_ln124_1_fu_1413_p2;
wire   [31:0] wgrad_2_q0;
reg   [31:0] wgrad_2_load_reg_1844;
wire    ap_CS_fsm_state99;
reg   [3:0] grad_2_address0;
reg    grad_2_ce0;
reg    grad_2_we0;
reg   [31:0] grad_2_d0;
reg   [8:0] wgrad_2_address0;
reg    wgrad_2_ce0;
reg    wgrad_2_we0;
reg   [4:0] rgrad_1_address0;
reg    rgrad_1_ce0;
reg    rgrad_1_we0;
reg   [31:0] rgrad_1_d0;
reg   [4:0] grad_1_address0;
reg    grad_1_ce0;
reg    grad_1_we0;
reg   [31:0] grad_1_d0;
reg   [9:0] wgrad_1_address0;
reg    wgrad_1_ce0;
reg    wgrad_1_we0;
reg   [5:0] grad_0_address0;
reg    grad_0_ce0;
reg    grad_0_we0;
reg   [31:0] grad_0_d0;
wire   [31:0] grad_0_q0;
reg   [7:0] conv_grad_2_address0;
reg    conv_grad_2_ce0;
reg    conv_grad_2_we0;
wire   [31:0] conv_grad_2_q0;
reg   [3:0] kernel_grad_2_address0;
reg    kernel_grad_2_ce0;
reg    kernel_grad_2_we0;
wire   [31:0] kernel_grad_2_q0;
reg   [7:0] conv_grad_2_padding_address0;
reg    conv_grad_2_padding_ce0;
reg    conv_grad_2_padding_we0;
wire   [31:0] conv_grad_2_padding_q0;
reg   [3:0] kernel_grad_2_overtu_address0;
reg    kernel_grad_2_overtu_ce0;
reg    kernel_grad_2_overtu_we0;
wire   [31:0] kernel_grad_2_overtu_q0;
reg   [7:0] pool_grad_1_address0;
reg    pool_grad_1_ce0;
reg    pool_grad_1_we0;
wire   [31:0] pool_grad_1_q0;
reg   [9:0] conv_grad_1_address0;
reg    conv_grad_1_ce0;
reg    conv_grad_1_we0;
wire   [31:0] conv_grad_1_q0;
reg   [3:0] kernel_grad_1_address0;
reg    kernel_grad_1_ce0;
reg    kernel_grad_1_we0;
wire   [31:0] kernel_grad_1_q0;
wire    grp_Conv2d_1_fu_685_ap_start;
wire    grp_Conv2d_1_fu_685_ap_done;
wire    grp_Conv2d_1_fu_685_ap_idle;
wire    grp_Conv2d_1_fu_685_ap_ready;
wire   [7:0] grp_Conv2d_1_fu_685_input_matrix_address0;
wire    grp_Conv2d_1_fu_685_input_matrix_ce0;
wire   [3:0] grp_Conv2d_1_fu_685_kernel_address0;
wire    grp_Conv2d_1_fu_685_kernel_ce0;
wire   [7:0] grp_Conv2d_1_fu_685_out_matrix_address0;
wire    grp_Conv2d_1_fu_685_out_matrix_ce0;
wire    grp_Conv2d_1_fu_685_out_matrix_we0;
wire   [31:0] grp_Conv2d_1_fu_685_out_matrix_d0;
wire    grp_Conv2d_fu_692_ap_start;
wire    grp_Conv2d_fu_692_ap_done;
wire    grp_Conv2d_fu_692_ap_idle;
wire    grp_Conv2d_fu_692_ap_ready;
wire   [9:0] grp_Conv2d_fu_692_input_matrix_address0;
wire    grp_Conv2d_fu_692_input_matrix_ce0;
wire   [9:0] grp_Conv2d_fu_692_kernel_address0;
wire    grp_Conv2d_fu_692_kernel_ce0;
wire   [3:0] grp_Conv2d_fu_692_out_matrix_address0;
wire    grp_Conv2d_fu_692_out_matrix_ce0;
wire    grp_Conv2d_fu_692_out_matrix_we0;
wire   [31:0] grp_Conv2d_fu_692_out_matrix_d0;
wire    grp_Conv2d_2_fu_700_ap_start;
wire    grp_Conv2d_2_fu_700_ap_done;
wire    grp_Conv2d_2_fu_700_ap_idle;
wire    grp_Conv2d_2_fu_700_ap_ready;
wire   [7:0] grp_Conv2d_2_fu_700_kernel_address0;
wire    grp_Conv2d_2_fu_700_kernel_ce0;
wire   [3:0] grp_Conv2d_2_fu_700_out_matrix_address0;
wire    grp_Conv2d_2_fu_700_out_matrix_ce0;
wire    grp_Conv2d_2_fu_700_out_matrix_we0;
wire   [31:0] grp_Conv2d_2_fu_700_out_matrix_d0;
wire   [7:0] grp_Conv2d_2_fu_700_max_poo_out_1_address0;
wire    grp_Conv2d_2_fu_700_max_poo_out_1_ce0;
wire    grp_MatrixBackPropagatio_fu_708_ap_start;
wire    grp_MatrixBackPropagatio_fu_708_ap_idle;
wire   [3:0] grp_MatrixBackPropagatio_fu_708_input_matrix_address0;
wire    grp_MatrixBackPropagatio_fu_708_input_matrix_ce0;
reg   [31:0] grp_MatrixBackPropagatio_fu_708_input_matrix_q0;
wire   [3:0] grp_MatrixBackPropagatio_fu_708_output_matrix_address0;
wire    grp_MatrixBackPropagatio_fu_708_output_matrix_ce0;
wire    grp_MatrixBackPropagatio_fu_708_output_matrix_we0;
wire   [31:0] grp_MatrixBackPropagatio_fu_708_output_matrix_d0;
reg   [31:0] grp_MatrixBackPropagatio_fu_708_output_matrix_q0;
reg   [31:0] grp_MatrixBackPropagatio_fu_708_lr;
wire    grp_MaxPooBackPropagatio_1_fu_717_ap_start;
wire    grp_MaxPooBackPropagatio_1_fu_717_ap_idle;
wire   [7:0] grp_MaxPooBackPropagatio_1_fu_717_input_matrix_address0;
wire    grp_MaxPooBackPropagatio_1_fu_717_input_matrix_ce0;
wire   [9:0] grp_MaxPooBackPropagatio_1_fu_717_output_matrix_address0;
wire    grp_MaxPooBackPropagatio_1_fu_717_output_matrix_ce0;
wire    grp_MaxPooBackPropagatio_1_fu_717_output_matrix_we0;
wire   [31:0] grp_MaxPooBackPropagatio_1_fu_717_output_matrix_d0;
wire   [7:0] grp_MaxPooBackPropagatio_1_fu_717_max_poo_locate_1_address0;
wire    grp_MaxPooBackPropagatio_1_fu_717_max_poo_locate_1_ce0;
wire    grp_MaxPooBackPropagatio_fu_725_ap_start;
wire    grp_MaxPooBackPropagatio_fu_725_ap_done;
wire    grp_MaxPooBackPropagatio_fu_725_ap_idle;
wire    grp_MaxPooBackPropagatio_fu_725_ap_ready;
wire   [5:0] grp_MaxPooBackPropagatio_fu_725_input_matrix_address0;
wire    grp_MaxPooBackPropagatio_fu_725_input_matrix_ce0;
wire   [7:0] grp_MaxPooBackPropagatio_fu_725_output_matrix_address0;
wire    grp_MaxPooBackPropagatio_fu_725_output_matrix_ce0;
wire    grp_MaxPooBackPropagatio_fu_725_output_matrix_we0;
wire   [31:0] grp_MaxPooBackPropagatio_fu_725_output_matrix_d0;
wire   [5:0] grp_MaxPooBackPropagatio_fu_725_max_poo_locate_2_address0;
wire    grp_MaxPooBackPropagatio_fu_725_max_poo_locate_2_ce0;
wire    grp_Padding_fu_733_ap_start;
wire    grp_Padding_fu_733_ap_done;
wire    grp_Padding_fu_733_ap_idle;
wire    grp_Padding_fu_733_ap_ready;
wire   [7:0] grp_Padding_fu_733_input_matrix_address0;
wire    grp_Padding_fu_733_input_matrix_ce0;
wire   [7:0] grp_Padding_fu_733_output_matrix_address0;
wire    grp_Padding_fu_733_output_matrix_ce0;
wire    grp_Padding_fu_733_output_matrix_we0;
wire   [31:0] grp_Padding_fu_733_output_matrix_d0;
reg   [3:0] i_0_reg_481;
wire    ap_CS_fsm_state9;
reg   [4:0] i_0_i_reg_492;
reg   [3:0] j_0_i_reg_504;
wire    ap_CS_fsm_state17;
reg   [4:0] i_0_i1_reg_515;
reg   [31:0] empty_49_reg_526;
wire    ap_CS_fsm_state30;
reg   [3:0] j_0_i2_reg_538;
reg   [4:0] i_0_i8_reg_550;
wire    ap_CS_fsm_state42;
reg   [5:0] i_0_i15_reg_561;
reg   [4:0] j_0_i20_reg_573;
wire    ap_CS_fsm_state50;
reg   [5:0] i_0_i31_reg_584;
reg   [31:0] empty_57_reg_595;
wire    ap_CS_fsm_state63;
reg   [4:0] j_0_i36_reg_607;
reg   [1:0] i_0_i49_reg_619;
wire    ap_CS_fsm_state68;
reg   [1:0] j_0_i51_reg_630;
wire    ap_CS_fsm_state71;
reg   [5:0] i_0_i58_reg_641;
reg   [4:0] j_0_i60_reg_652;
wire    ap_CS_fsm_state96;
reg   [4:0] i_0_i69_reg_663;
reg   [3:0] j_0_i73_reg_674;
wire    ap_CS_fsm_state109;
reg    grp_Conv2d_1_fu_685_ap_start_reg;
wire    ap_CS_fsm_state77;
reg    grp_Conv2d_fu_692_ap_start_reg;
wire    ap_CS_fsm_state80;
wire    ap_CS_fsm_state81;
reg    grp_Conv2d_2_fu_700_ap_start_reg;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
reg    grp_MatrixBackPropagatio_fu_708_ap_start_reg;
wire    ap_CS_fsm_state82;
reg    grp_MaxPooBackPropagatio_1_fu_717_ap_start_reg;
reg    grp_MaxPooBackPropagatio_fu_725_ap_start_reg;
wire    ap_CS_fsm_state64;
reg    grp_Padding_fu_733_ap_start_reg;
wire    ap_CS_fsm_state67;
wire   [63:0] zext_ln155_fu_817_p1;
wire   [63:0] zext_ln75_fu_871_p1;
wire   [63:0] zext_ln75_1_fu_908_p1;
wire   [63:0] zext_ln75_2_fu_927_p1;
wire   [63:0] zext_ln80_fu_943_p1;
wire   [63:0] zext_ln82_fu_994_p1;
wire   [63:0] zext_ln82_1_fu_999_p1;
wire   [4:0] grad_1_addr_1_gep_fu_355_p3;
wire   [63:0] zext_ln75_3_fu_1073_p1;
wire   [63:0] zext_ln75_4_fu_1110_p1;
wire   [63:0] zext_ln75_5_fu_1129_p1;
wire   [63:0] zext_ln80_1_fu_1145_p1;
wire   [63:0] zext_ln82_2_fu_1196_p1;
wire   [63:0] zext_ln82_3_fu_1201_p1;
wire   [63:0] zext_ln109_fu_1299_p1;
wire   [63:0] zext_ln109_1_fu_1312_p1;
wire   [63:0] zext_ln125_fu_1375_p1;
wire   [63:0] zext_ln125_1_fu_1439_p1;
wire   [63:0] zext_ln152_fu_823_p1;
wire    ap_CS_fsm_state102;
wire   [31:0] grp_fu_752_p1;
wire    ap_CS_fsm_state89;
reg   [31:0] grp_fu_739_p0;
reg   [31:0] grp_fu_739_p1;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state91;
wire    ap_CS_fsm_state104;
reg   [31:0] grp_fu_746_p0;
reg   [31:0] grp_fu_746_p1;
wire    ap_CS_fsm_state87;
wire    ap_CS_fsm_state100;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state35;
wire   [31:0] zext_ln154_fu_833_p1;
wire   [5:0] j_0_i_cast20_fu_892_p1;
wire   [5:0] add_ln75_fu_913_p2;
wire   [7:0] zext_ln75_6_fu_918_p1;
wire   [5:0] j_0_i2_cast17_fu_964_p1;
wire   [5:0] add_ln82_fu_980_p2;
wire   [7:0] zext_ln82_4_fu_985_p1;
wire   [7:0] add_ln82_1_fu_989_p2;
wire   [31:0] bitcast_ln88_fu_1021_p1;
wire   [7:0] tmp_s_fu_1025_p4;
wire   [22:0] trunc_ln88_fu_1035_p1;
wire   [0:0] or_ln88_fu_1051_p2;
wire   [0:0] grp_fu_760_p2;
wire   [7:0] j_0_i20_cast14_fu_1094_p1;
wire   [7:0] add_ln75_2_fu_1115_p2;
wire   [9:0] zext_ln75_7_fu_1120_p1;
wire   [7:0] j_0_i36_cast11_fu_1166_p1;
wire   [7:0] add_ln82_2_fu_1182_p2;
wire   [9:0] zext_ln82_5_fu_1187_p1;
wire   [9:0] add_ln82_3_fu_1191_p2;
wire   [3:0] shl_ln3_fu_1222_p3;
wire   [4:0] zext_ln109_2_fu_1230_p1;
wire   [4:0] zext_ln107_fu_1206_p1;
wire   [1:0] sub_ln109_1_fu_1240_p2;
wire   [3:0] shl_ln109_1_fu_1250_p3;
wire   [4:0] zext_ln109_4_fu_1258_p1;
wire   [4:0] zext_ln109_3_fu_1246_p1;
wire   [4:0] sub_ln109_2_fu_1262_p2;
wire   [4:0] zext_ln108_fu_1274_p1;
wire   [4:0] add_ln109_1_fu_1290_p2;
wire  signed [31:0] sext_ln109_fu_1295_p1;
wire  signed [31:0] sext_ln109_1_fu_1309_p1;
wire   [7:0] j_0_i60_cast_fu_1345_p1;
wire   [7:0] add_ln125_fu_1361_p2;
wire   [9:0] zext_ln125_2_fu_1366_p1;
wire   [9:0] add_ln125_1_fu_1370_p2;
wire   [5:0] j_0_i73_cast_fu_1409_p1;
wire   [5:0] add_ln125_2_fu_1425_p2;
wire   [7:0] zext_ln125_3_fu_1430_p1;
wire   [7:0] add_ln125_3_fu_1434_p2;
reg   [1:0] grp_fu_739_opcode;
reg   [108:0] ap_NS_fsm;
reg    ap_block_state81_on_subcall_done;

// power-on initialization
initial begin
#0 ap_CS_fsm = 109'd1;
#0 grp_Conv2d_1_fu_685_ap_start_reg = 1'b0;
#0 grp_Conv2d_fu_692_ap_start_reg = 1'b0;
#0 grp_Conv2d_2_fu_700_ap_start_reg = 1'b0;
#0 grp_MatrixBackPropagatio_fu_708_ap_start_reg = 1'b0;
#0 grp_MaxPooBackPropagatio_1_fu_717_ap_start_reg = 1'b0;
#0 grp_MaxPooBackPropagatio_fu_725_ap_start_reg = 1'b0;
#0 grp_Padding_fu_733_ap_start_reg = 1'b0;
end

backward_grad_2 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
grad_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_2_address0),
    .ce0(grad_2_ce0),
    .we0(grad_2_we0),
    .d0(grad_2_d0),
    .q0(grad_2_q0)
);

backward_wgrad_2 #(
    .DataWidth( 32 ),
    .AddressRange( 300 ),
    .AddressWidth( 9 ))
wgrad_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(wgrad_2_address0),
    .ce0(wgrad_2_ce0),
    .we0(wgrad_2_we0),
    .d0(reg_787),
    .q0(wgrad_2_q0)
);

backward_rgrad_1 #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
rgrad_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rgrad_1_address0),
    .ce0(rgrad_1_ce0),
    .we0(rgrad_1_we0),
    .d0(rgrad_1_d0),
    .q0(rgrad_1_q0)
);

backward_rgrad_1 #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
grad_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_1_address0),
    .ce0(grad_1_ce0),
    .we0(grad_1_we0),
    .d0(grad_1_d0),
    .q0(grad_1_q0)
);

backward_wgrad_1 #(
    .DataWidth( 32 ),
    .AddressRange( 720 ),
    .AddressWidth( 10 ))
wgrad_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(wgrad_1_address0),
    .ce0(wgrad_1_ce0),
    .we0(wgrad_1_we0),
    .d0(reg_787),
    .q0(wgrad_1_q0)
);

backward_grad_0 #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
grad_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grad_0_address0),
    .ce0(grad_0_ce0),
    .we0(grad_0_we0),
    .d0(grad_0_d0),
    .q0(grad_0_q0)
);

backward_conv_grancg #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_grad_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_grad_2_address0),
    .ce0(conv_grad_2_ce0),
    .we0(conv_grad_2_we0),
    .d0(grp_MaxPooBackPropagatio_fu_725_output_matrix_d0),
    .q0(conv_grad_2_q0)
);

backward_kernel_gocq #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_grad_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_grad_2_address0),
    .ce0(kernel_grad_2_ce0),
    .we0(kernel_grad_2_we0),
    .d0(grp_Conv2d_2_fu_700_out_matrix_d0),
    .q0(kernel_grad_2_q0)
);

backward_conv_grapcA #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
conv_grad_2_padding_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_grad_2_padding_address0),
    .ce0(conv_grad_2_padding_ce0),
    .we0(conv_grad_2_padding_we0),
    .d0(grp_Padding_fu_733_output_matrix_d0),
    .q0(conv_grad_2_padding_q0)
);

backward_kernel_gocq #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_grad_2_overtu_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_grad_2_overtu_address0),
    .ce0(kernel_grad_2_overtu_ce0),
    .we0(kernel_grad_2_overtu_we0),
    .d0(conv_kernel_2_q0),
    .q0(kernel_grad_2_overtu_q0)
);

backward_pool_grarcU #(
    .DataWidth( 32 ),
    .AddressRange( 196 ),
    .AddressWidth( 8 ))
pool_grad_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(pool_grad_1_address0),
    .ce0(pool_grad_1_ce0),
    .we0(pool_grad_1_we0),
    .d0(grp_Conv2d_1_fu_685_out_matrix_d0),
    .q0(pool_grad_1_q0)
);

backward_conv_grasc4 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_grad_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_grad_1_address0),
    .ce0(conv_grad_1_ce0),
    .we0(conv_grad_1_we0),
    .d0(grp_MaxPooBackPropagatio_1_fu_717_output_matrix_d0),
    .q0(conv_grad_1_q0)
);

backward_kernel_gocq #(
    .DataWidth( 32 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
kernel_grad_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(kernel_grad_1_address0),
    .ce0(kernel_grad_1_ce0),
    .we0(kernel_grad_1_we0),
    .d0(grp_Conv2d_fu_692_out_matrix_d0),
    .q0(kernel_grad_1_q0)
);

Conv2d_1 grp_Conv2d_1_fu_685(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv2d_1_fu_685_ap_start),
    .ap_done(grp_Conv2d_1_fu_685_ap_done),
    .ap_idle(grp_Conv2d_1_fu_685_ap_idle),
    .ap_ready(grp_Conv2d_1_fu_685_ap_ready),
    .input_matrix_address0(grp_Conv2d_1_fu_685_input_matrix_address0),
    .input_matrix_ce0(grp_Conv2d_1_fu_685_input_matrix_ce0),
    .input_matrix_q0(conv_grad_2_padding_q0),
    .kernel_address0(grp_Conv2d_1_fu_685_kernel_address0),
    .kernel_ce0(grp_Conv2d_1_fu_685_kernel_ce0),
    .kernel_q0(kernel_grad_2_overtu_q0),
    .out_matrix_address0(grp_Conv2d_1_fu_685_out_matrix_address0),
    .out_matrix_ce0(grp_Conv2d_1_fu_685_out_matrix_ce0),
    .out_matrix_we0(grp_Conv2d_1_fu_685_out_matrix_we0),
    .out_matrix_d0(grp_Conv2d_1_fu_685_out_matrix_d0)
);

Conv2d grp_Conv2d_fu_692(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv2d_fu_692_ap_start),
    .ap_done(grp_Conv2d_fu_692_ap_done),
    .ap_idle(grp_Conv2d_fu_692_ap_idle),
    .ap_ready(grp_Conv2d_fu_692_ap_ready),
    .input_matrix_address0(grp_Conv2d_fu_692_input_matrix_address0),
    .input_matrix_ce0(grp_Conv2d_fu_692_input_matrix_ce0),
    .input_matrix_q0(mnist_data_q0),
    .kernel_address0(grp_Conv2d_fu_692_kernel_address0),
    .kernel_ce0(grp_Conv2d_fu_692_kernel_ce0),
    .kernel_q0(conv_grad_1_q0),
    .out_matrix_address0(grp_Conv2d_fu_692_out_matrix_address0),
    .out_matrix_ce0(grp_Conv2d_fu_692_out_matrix_ce0),
    .out_matrix_we0(grp_Conv2d_fu_692_out_matrix_we0),
    .out_matrix_d0(grp_Conv2d_fu_692_out_matrix_d0)
);

Conv2d_2 grp_Conv2d_2_fu_700(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv2d_2_fu_700_ap_start),
    .ap_done(grp_Conv2d_2_fu_700_ap_done),
    .ap_idle(grp_Conv2d_2_fu_700_ap_idle),
    .ap_ready(grp_Conv2d_2_fu_700_ap_ready),
    .kernel_address0(grp_Conv2d_2_fu_700_kernel_address0),
    .kernel_ce0(grp_Conv2d_2_fu_700_kernel_ce0),
    .kernel_q0(conv_grad_2_q0),
    .out_matrix_address0(grp_Conv2d_2_fu_700_out_matrix_address0),
    .out_matrix_ce0(grp_Conv2d_2_fu_700_out_matrix_ce0),
    .out_matrix_we0(grp_Conv2d_2_fu_700_out_matrix_we0),
    .out_matrix_d0(grp_Conv2d_2_fu_700_out_matrix_d0),
    .max_poo_out_1_address0(grp_Conv2d_2_fu_700_max_poo_out_1_address0),
    .max_poo_out_1_ce0(grp_Conv2d_2_fu_700_max_poo_out_1_ce0),
    .max_poo_out_1_q0(max_poo_out_1_q0)
);

MatrixBackPropagatio grp_MatrixBackPropagatio_fu_708(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MatrixBackPropagatio_fu_708_ap_start),
    .ap_done(grp_MatrixBackPropagatio_fu_708_ap_done),
    .ap_idle(grp_MatrixBackPropagatio_fu_708_ap_idle),
    .ap_ready(grp_MatrixBackPropagatio_fu_708_ap_ready),
    .input_matrix_address0(grp_MatrixBackPropagatio_fu_708_input_matrix_address0),
    .input_matrix_ce0(grp_MatrixBackPropagatio_fu_708_input_matrix_ce0),
    .input_matrix_q0(grp_MatrixBackPropagatio_fu_708_input_matrix_q0),
    .output_matrix_address0(grp_MatrixBackPropagatio_fu_708_output_matrix_address0),
    .output_matrix_ce0(grp_MatrixBackPropagatio_fu_708_output_matrix_ce0),
    .output_matrix_we0(grp_MatrixBackPropagatio_fu_708_output_matrix_we0),
    .output_matrix_d0(grp_MatrixBackPropagatio_fu_708_output_matrix_d0),
    .output_matrix_q0(grp_MatrixBackPropagatio_fu_708_output_matrix_q0),
    .lr(grp_MatrixBackPropagatio_fu_708_lr)
);

MaxPooBackPropagatio_1 grp_MaxPooBackPropagatio_1_fu_717(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MaxPooBackPropagatio_1_fu_717_ap_start),
    .ap_done(grp_MaxPooBackPropagatio_1_fu_717_ap_done),
    .ap_idle(grp_MaxPooBackPropagatio_1_fu_717_ap_idle),
    .ap_ready(grp_MaxPooBackPropagatio_1_fu_717_ap_ready),
    .input_matrix_address0(grp_MaxPooBackPropagatio_1_fu_717_input_matrix_address0),
    .input_matrix_ce0(grp_MaxPooBackPropagatio_1_fu_717_input_matrix_ce0),
    .input_matrix_q0(pool_grad_1_q0),
    .output_matrix_address0(grp_MaxPooBackPropagatio_1_fu_717_output_matrix_address0),
    .output_matrix_ce0(grp_MaxPooBackPropagatio_1_fu_717_output_matrix_ce0),
    .output_matrix_we0(grp_MaxPooBackPropagatio_1_fu_717_output_matrix_we0),
    .output_matrix_d0(grp_MaxPooBackPropagatio_1_fu_717_output_matrix_d0),
    .max_poo_locate_1_address0(grp_MaxPooBackPropagatio_1_fu_717_max_poo_locate_1_address0),
    .max_poo_locate_1_ce0(grp_MaxPooBackPropagatio_1_fu_717_max_poo_locate_1_ce0),
    .max_poo_locate_1_q0(max_poo_locate_1_q0)
);

MaxPooBackPropagatio grp_MaxPooBackPropagatio_fu_725(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MaxPooBackPropagatio_fu_725_ap_start),
    .ap_done(grp_MaxPooBackPropagatio_fu_725_ap_done),
    .ap_idle(grp_MaxPooBackPropagatio_fu_725_ap_idle),
    .ap_ready(grp_MaxPooBackPropagatio_fu_725_ap_ready),
    .input_matrix_address0(grp_MaxPooBackPropagatio_fu_725_input_matrix_address0),
    .input_matrix_ce0(grp_MaxPooBackPropagatio_fu_725_input_matrix_ce0),
    .input_matrix_q0(grad_0_q0),
    .output_matrix_address0(grp_MaxPooBackPropagatio_fu_725_output_matrix_address0),
    .output_matrix_ce0(grp_MaxPooBackPropagatio_fu_725_output_matrix_ce0),
    .output_matrix_we0(grp_MaxPooBackPropagatio_fu_725_output_matrix_we0),
    .output_matrix_d0(grp_MaxPooBackPropagatio_fu_725_output_matrix_d0),
    .max_poo_locate_2_address0(grp_MaxPooBackPropagatio_fu_725_max_poo_locate_2_address0),
    .max_poo_locate_2_ce0(grp_MaxPooBackPropagatio_fu_725_max_poo_locate_2_ce0),
    .max_poo_locate_2_q0(max_poo_locate_2_q0)
);

Padding grp_Padding_fu_733(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Padding_fu_733_ap_start),
    .ap_done(grp_Padding_fu_733_ap_done),
    .ap_idle(grp_Padding_fu_733_ap_idle),
    .ap_ready(grp_Padding_fu_733_ap_ready),
    .input_matrix_address0(grp_Padding_fu_733_input_matrix_address0),
    .input_matrix_ce0(grp_Padding_fu_733_input_matrix_ce0),
    .input_matrix_q0(conv_grad_2_q0),
    .output_matrix_address0(grp_Padding_fu_733_output_matrix_address0),
    .output_matrix_ce0(grp_Padding_fu_733_output_matrix_ce0),
    .output_matrix_we0(grp_Padding_fu_733_output_matrix_we0),
    .output_matrix_d0(grp_Padding_fu_733_output_matrix_d0)
);

forw_back_faddfsuudo #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
forw_back_faddfsuudo_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_739_p0),
    .din1(grp_fu_739_p1),
    .opcode(grp_fu_739_opcode),
    .ce(1'b1),
    .dout(grp_fu_739_p2)
);

forw_back_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
forw_back_fmul_32cud_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_746_p0),
    .din1(grp_fu_746_p1),
    .ce(1'b1),
    .dout(grp_fu_746_p2)
);

forw_back_fptruncg8j #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
forw_back_fptruncg8j_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_2_i_reg_1634),
    .ce(1'b1),
    .dout(grp_fu_752_p1)
);

forw_back_fpext_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
forw_back_fpext_3hbi_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rgrad_1_q0),
    .ce(1'b1),
    .dout(grp_fu_756_p1)
);

forw_back_fcmp_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
forw_back_fcmp_32eOg_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fc_out_1_0_q0),
    .din1(32'd0),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_760_p2)
);

forw_back_dmul_64jbC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
forw_back_dmul_64jbC_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i3_reg_1629),
    .din1(64'd4587366580439587226),
    .ce(1'b1),
    .dout(grp_fu_766_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv2d_1_fu_685_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state76) & (m_axi_lr_in_ARREADY == 1'b1))) begin
            grp_Conv2d_1_fu_685_ap_start_reg <= 1'b1;
        end else if ((grp_Conv2d_1_fu_685_ap_ready == 1'b1)) begin
            grp_Conv2d_1_fu_685_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv2d_2_fu_700_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state65)) begin
            grp_Conv2d_2_fu_700_ap_start_reg <= 1'b1;
        end else if ((grp_Conv2d_2_fu_700_ap_ready == 1'b1)) begin
            grp_Conv2d_2_fu_700_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv2d_fu_692_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state80)) begin
            grp_Conv2d_fu_692_ap_start_reg <= 1'b1;
        end else if ((grp_Conv2d_fu_692_ap_ready == 1'b1)) begin
            grp_Conv2d_fu_692_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MatrixBackPropagatio_fu_708_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state82) | (1'b1 == ap_CS_fsm_state80))) begin
            grp_MatrixBackPropagatio_fu_708_ap_start_reg <= 1'b1;
        end else if ((grp_MatrixBackPropagatio_fu_708_ap_ready == 1'b1)) begin
            grp_MatrixBackPropagatio_fu_708_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MaxPooBackPropagatio_1_fu_717_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state78) & (m_axi_lr_in_RVALID == 1'b1))) begin
            grp_MaxPooBackPropagatio_1_fu_717_ap_start_reg <= 1'b1;
        end else if ((grp_MaxPooBackPropagatio_1_fu_717_ap_ready == 1'b1)) begin
            grp_MaxPooBackPropagatio_1_fu_717_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MaxPooBackPropagatio_fu_725_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln79_1_fu_1133_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
            grp_MaxPooBackPropagatio_fu_725_ap_start_reg <= 1'b1;
        end else if ((grp_MaxPooBackPropagatio_fu_725_ap_ready == 1'b1)) begin
            grp_MaxPooBackPropagatio_fu_725_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Padding_fu_733_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state67)) begin
            grp_Padding_fu_733_ap_start_reg <= 1'b1;
        end else if ((grp_Padding_fu_733_ap_ready == 1'b1)) begin
            grp_Padding_fu_733_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        empty_49_reg_526 <= reg_771;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln79_fu_931_p2 == 1'd0))) begin
        empty_49_reg_526 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        empty_57_reg_595 <= reg_771;
    end else if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0))) begin
        empty_57_reg_595 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_1004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        i_0_i15_reg_561 <= 6'd0;
    end else if (((icmp_ln74_1_fu_1098_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        i_0_i15_reg_561 <= i_6_reg_1642;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_fu_859_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i1_reg_515 <= 5'd0;
    end else if (((icmp_ln81_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        i_0_i1_reg_515 <= i_5_reg_1542;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln73_1_fu_1061_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
        i_0_i31_reg_584 <= 6'd0;
    end else if (((icmp_ln81_1_fu_1170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
        i_0_i31_reg_584 <= i_8_reg_1688;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        i_0_i49_reg_619 <= i_9_reg_1729;
    end else if (((grp_Padding_fu_733_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
        i_0_i49_reg_619 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_1349_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
        i_0_i58_reg_641 <= i_10_reg_1770;
    end else if ((~((grp_MatrixBackPropagatio_fu_708_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
        i_0_i58_reg_641 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_fu_1317_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        i_0_i69_reg_663 <= 5'd0;
    end else if (((icmp_ln124_1_fu_1413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state98))) begin
        i_0_i69_reg_663 <= i_11_reg_1811;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        i_0_i8_reg_550 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        i_0_i8_reg_550 <= i_7_reg_1583;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln154_fu_837_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_i_reg_492 <= 5'd0;
    end else if (((icmp_ln74_fu_896_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i_reg_492 <= i_reg_1496;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_0_reg_481 <= i_4_reg_1474;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_reg_481 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        j_0_i20_reg_573 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        j_0_i20_reg_573 <= j_12_reg_1670;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        j_0_i2_reg_538 <= j_11_reg_1565;
    end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln79_fu_931_p2 == 1'd0))) begin
        j_0_i2_reg_538 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        j_0_i36_reg_607 <= j_13_reg_1711;
    end else if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0))) begin
        j_0_i36_reg_607 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state69_io) & (1'b1 == ap_CS_fsm_state69) & (icmp_ln107_fu_1210_p2 == 1'd0))) begin
        j_0_i51_reg_630 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        j_0_i51_reg_630 <= j_14_reg_1747;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln123_fu_1317_p2 == 1'd0))) begin
        j_0_i60_reg_652 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state96)) begin
        j_0_i60_reg_652 <= j_15_reg_1788;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & (icmp_ln123_1_fu_1381_p2 == 1'd0))) begin
        j_0_i73_reg_674 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state109)) begin
        j_0_i73_reg_674 <= j_16_reg_1829;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_0_i_reg_504 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        j_0_i_reg_504 <= j_reg_1524;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state69_io) & (1'b1 == ap_CS_fsm_state69) & (icmp_ln107_fu_1210_p2 == 1'd0))) begin
        add_ln109_reg_1739 <= add_ln109_fu_1268_p2;
        sub_ln109_reg_1734 <= sub_ln109_fu_1234_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln74_fu_896_p2 == 1'd0))) begin
        add_ln75_1_reg_1534 <= add_ln75_1_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state45) & (icmp_ln74_1_fu_1098_p2 == 1'd0))) begin
        add_ln75_3_reg_1680 <= add_ln75_3_fu_1124_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        and_ln88_reg_1620 <= and_ln88_fu_1055_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state85) & (icmp_ln124_fu_1349_p2 == 1'd0))) begin
        fc_hidden_layer1_add_2_reg_1793 <= zext_ln125_fu_1375_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state98) & (icmp_ln124_1_fu_1413_p2 == 1'd0))) begin
        fc_hidden_layer2_add_2_reg_1834 <= zext_ln125_1_fu_1439_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        fc_in_1_0_load_reg_1662 <= fc_in_1_0_q0;
        shl_ln75_2_reg_1652[9 : 4] <= shl_ln75_2_fu_1078_p3[9 : 4];
        shl_ln75_3_reg_1657[7 : 2] <= shl_ln75_3_fu_1086_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_in_2_relu1_0_load_reg_1516 <= fc_in_2_relu1_0_q0;
        shl_ln75_1_reg_1511[5 : 1] <= shl_ln75_1_fu_884_p3[5 : 1];
        shl_ln_reg_1506[7 : 3] <= shl_ln_fu_876_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0))) begin
        grad_0_addr_reg_1693 <= zext_ln80_1_fu_1145_p1;
        shl_ln82_2_reg_1698[9 : 4] <= shl_ln82_2_fu_1150_p3[9 : 4];
        shl_ln82_3_reg_1703[7 : 2] <= shl_ln82_3_fu_1158_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grad_2_addr_reg_1455 <= zext_ln155_fu_817_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        i_10_reg_1770 <= i_10_fu_1323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state97)) begin
        i_11_reg_1811 <= i_11_fu_1387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_4_reg_1474 <= i_4_fu_843_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        i_5_reg_1542 <= i_5_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        i_6_reg_1642 <= i_6_fu_1067_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        i_7_reg_1583 <= i_7_fu_1010_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        i_8_reg_1688 <= i_8_fu_1139_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state69_io) & (1'b1 == ap_CS_fsm_state69))) begin
        i_9_reg_1729 <= i_9_fu_1216_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_1496 <= i_fu_865_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln154_fu_837_p2 == 1'd0))) begin
        icmp_ln155_reg_1479 <= icmp_ln155_fu_849_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        icmp_ln88_1_reg_1610 <= icmp_ln88_1_fu_1045_p2;
        icmp_ln88_reg_1605 <= icmp_ln88_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_11_reg_1565 <= j_11_fu_974_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        j_12_reg_1670 <= j_12_fu_1104_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        j_13_reg_1711 <= j_13_fu_1176_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        j_14_reg_1747 <= j_14_fu_1284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        j_15_reg_1788 <= j_15_fu_1355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        j_16_reg_1829 <= j_16_fu_1419_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_reg_1524 <= j_fu_902_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_MaxPooBackPropagatio_1_fu_717_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state79))) begin
        lr_in_addr_read_1_reg_1762 <= m_axi_lr_in_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lr_in_addr_reg_1465[29 : 0] <= zext_ln152_fu_823_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        probability_result_l_reg_1460 <= probability_result_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state108) | (1'b1 == ap_CS_fsm_state95) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_771 <= grp_fu_739_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state103) | (1'b1 == ap_CS_fsm_state90) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_787 <= grp_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state103))) begin
        reg_794 <= fc_hidden_layer2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state90))) begin
        reg_805 <= fc_hidden_layer1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((~((grp_MatrixBackPropagatio_fu_708_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state83)) | ((1'b1 == ap_CS_fsm_state78) & (m_axi_lr_in_RVALID == 1'b1)))) begin
        reg_811 <= m_axi_lr_in_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln79_fu_931_p2 == 1'd0))) begin
        rgrad_1_addr_reg_1547 <= zext_ln80_fu_943_p1;
        shl_ln2_reg_1552[7 : 3] <= shl_ln2_fu_948_p3[7 : 3];
        shl_ln82_1_reg_1557[5 : 1] <= shl_ln82_1_fu_956_p3[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state84) & (icmp_ln123_fu_1317_p2 == 1'd0))) begin
        shl_ln125_1_reg_1780[7 : 2] <= shl_ln125_1_fu_1337_p3[7 : 2];
        shl_ln4_reg_1775[9 : 4] <= shl_ln4_fu_1329_p3[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state97) & (icmp_ln123_1_fu_1381_p2 == 1'd0))) begin
        shl_ln125_2_reg_1816[7 : 3] <= shl_ln125_2_fu_1393_p3[7 : 3];
        shl_ln125_3_reg_1821[5 : 1] <= shl_ln125_3_fu_1401_p3[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state70) & (icmp_ln108_fu_1278_p2 == 1'd0))) begin
        sub_ln109_3_reg_1757 <= sub_ln109_3_fu_1304_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        tmp_2_i_reg_1634 <= grp_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_i3_reg_1629 <= grp_fu_756_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        wgrad_1_load_reg_1803 <= wgrad_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state99)) begin
        wgrad_2_load_reg_1844 <= wgrad_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln154_fu_837_p2 == 1'd0) & (icmp_ln155_fu_849_p2 == 1'd0))) begin
        zext_ln156_reg_1483[3 : 0] <= zext_ln156_fu_854_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) & (icmp_ln87_fu_1004_p2 == 1'd0))) begin
        zext_ln88_reg_1588[4 : 0] <= zext_ln88_fu_1016_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln123_1_fu_1381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_1_fu_1381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        conv_grad_1_address0 = grp_MaxPooBackPropagatio_1_fu_717_output_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        conv_grad_1_address0 = grp_Conv2d_fu_692_kernel_address0;
    end else begin
        conv_grad_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        conv_grad_1_ce0 = grp_MaxPooBackPropagatio_1_fu_717_output_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        conv_grad_1_ce0 = grp_Conv2d_fu_692_kernel_ce0;
    end else begin
        conv_grad_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        conv_grad_1_we0 = grp_MaxPooBackPropagatio_1_fu_717_output_matrix_we0;
    end else begin
        conv_grad_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        conv_grad_2_address0 = grp_Padding_fu_733_input_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        conv_grad_2_address0 = grp_MaxPooBackPropagatio_fu_725_output_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        conv_grad_2_address0 = grp_Conv2d_2_fu_700_kernel_address0;
    end else begin
        conv_grad_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        conv_grad_2_ce0 = grp_Padding_fu_733_input_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        conv_grad_2_ce0 = grp_MaxPooBackPropagatio_fu_725_output_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        conv_grad_2_ce0 = grp_Conv2d_2_fu_700_kernel_ce0;
    end else begin
        conv_grad_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        conv_grad_2_padding_address0 = grp_Padding_fu_733_output_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        conv_grad_2_padding_address0 = grp_Conv2d_1_fu_685_input_matrix_address0;
    end else begin
        conv_grad_2_padding_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        conv_grad_2_padding_ce0 = grp_Padding_fu_733_output_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        conv_grad_2_padding_ce0 = grp_Conv2d_1_fu_685_input_matrix_ce0;
    end else begin
        conv_grad_2_padding_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        conv_grad_2_padding_we0 = grp_Padding_fu_733_output_matrix_we0;
    end else begin
        conv_grad_2_padding_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state64)) begin
        conv_grad_2_we0 = grp_MaxPooBackPropagatio_fu_725_output_matrix_we0;
    end else begin
        conv_grad_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        conv_kernel_1_ce0 = grp_MatrixBackPropagatio_fu_708_output_matrix_ce0;
    end else begin
        conv_kernel_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        conv_kernel_1_we0 = grp_MatrixBackPropagatio_fu_708_output_matrix_we0;
    end else begin
        conv_kernel_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        conv_kernel_2_address0 = zext_ln109_fu_1299_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        conv_kernel_2_address0 = grp_MatrixBackPropagatio_fu_708_output_matrix_address0;
    end else begin
        conv_kernel_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        conv_kernel_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        conv_kernel_2_ce0 = grp_MatrixBackPropagatio_fu_708_output_matrix_ce0;
    end else begin
        conv_kernel_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        conv_kernel_2_we0 = grp_MatrixBackPropagatio_fu_708_output_matrix_we0;
    end else begin
        conv_kernel_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state96))) begin
        fc_hidden_layer1_address0 = fc_hidden_layer1_add_2_reg_1793;
    end else if ((1'b1 == ap_CS_fsm_state52)) begin
        fc_hidden_layer1_address0 = zext_ln82_2_fu_1196_p1;
    end else begin
        fc_hidden_layer1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state89) | (1'b1 == ap_CS_fsm_state96))) begin
        fc_hidden_layer1_ce0 = 1'b1;
    end else begin
        fc_hidden_layer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state96)) begin
        fc_hidden_layer1_we0 = 1'b1;
    end else begin
        fc_hidden_layer1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state109))) begin
        fc_hidden_layer2_address0 = fc_hidden_layer2_add_2_reg_1834;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fc_hidden_layer2_address0 = zext_ln82_fu_994_p1;
    end else begin
        fc_hidden_layer2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state102) | (1'b1 == ap_CS_fsm_state109))) begin
        fc_hidden_layer2_ce0 = 1'b1;
    end else begin
        fc_hidden_layer2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state109)) begin
        fc_hidden_layer2_we0 = 1'b1;
    end else begin
        fc_hidden_layer2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        fc_in_1_0_ce0 = 1'b1;
    end else begin
        fc_in_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        fc_in_2_relu1_0_ce0 = 1'b1;
    end else begin
        fc_in_2_relu1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        fc_out_1_0_ce0 = 1'b1;
    end else begin
        fc_out_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        grad_0_address0 = grad_0_addr_reg_1693;
    end else if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0))) begin
        grad_0_address0 = zext_ln80_1_fu_1145_p1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grad_0_address0 = grp_MaxPooBackPropagatio_fu_725_input_matrix_address0;
    end else begin
        grad_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0)))) begin
        grad_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        grad_0_ce0 = grp_MaxPooBackPropagatio_fu_725_input_matrix_ce0;
    end else begin
        grad_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        grad_0_d0 = reg_771;
    end else if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0))) begin
        grad_0_d0 = 32'd0;
    end else begin
        grad_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state63) | ((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0)))) begin
        grad_0_we0 = 1'b1;
    end else begin
        grad_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grad_1_address0 = zext_ln82_3_fu_1201_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        grad_1_address0 = zext_ln75_4_fu_1110_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grad_1_address0 = grad_1_addr_1_gep_fu_355_p3;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grad_1_address0 = zext_ln88_reg_1588;
    end else begin
        grad_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state42))) begin
        grad_1_ce0 = 1'b1;
    end else begin
        grad_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        grad_1_d0 = grp_fu_752_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grad_1_d0 = rgrad_1_q0;
    end else begin
        grad_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln88_fu_1055_p2) & (1'b1 == ap_CS_fsm_state33)) | ((1'b1 == ap_CS_fsm_state42) & (1'd0 == and_ln88_reg_1620)))) begin
        grad_1_we0 = 1'b1;
    end else begin
        grad_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grad_2_address0 = zext_ln82_1_fu_999_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grad_2_address0 = zext_ln75_1_fu_908_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grad_2_address0 = zext_ln156_reg_1483;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grad_2_address0 = grad_2_addr_reg_1455;
    end else begin
        grad_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state20))) begin
        grad_2_ce0 = 1'b1;
    end else begin
        grad_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grad_2_d0 = probability_result_q0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grad_2_d0 = reg_771;
    end else begin
        grad_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (icmp_ln155_reg_1479 == 1'd0)) | ((icmp_ln155_fu_849_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8) & (icmp_ln154_fu_837_p2 == 1'd0)))) begin
        grad_2_we0 = 1'b1;
    end else begin
        grad_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_MatrixBackPropagatio_fu_708_input_matrix_q0 = kernel_grad_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_MatrixBackPropagatio_fu_708_input_matrix_q0 = kernel_grad_2_q0;
    end else begin
        grp_MatrixBackPropagatio_fu_708_input_matrix_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_MatrixBackPropagatio_fu_708_lr = reg_811;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_MatrixBackPropagatio_fu_708_lr = lr_in_addr_read_1_reg_1762;
    end else begin
        grp_MatrixBackPropagatio_fu_708_lr = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        grp_MatrixBackPropagatio_fu_708_output_matrix_q0 = conv_kernel_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        grp_MatrixBackPropagatio_fu_708_output_matrix_q0 = conv_kernel_2_q0;
    end else begin
        grp_MatrixBackPropagatio_fu_708_output_matrix_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state91))) begin
        grp_fu_739_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_739_opcode = 2'd0;
    end else begin
        grp_fu_739_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state104)) begin
        grp_fu_739_p0 = reg_794;
    end else if ((1'b1 == ap_CS_fsm_state91)) begin
        grp_fu_739_p0 = reg_805;
    end else if ((1'b1 == ap_CS_fsm_state58)) begin
        grp_fu_739_p0 = empty_57_reg_595;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_739_p0 = empty_49_reg_526;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_739_p0 = probability_result_l_reg_1460;
    end else begin
        grp_fu_739_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state104) | (1'b1 == ap_CS_fsm_state91) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_739_p1 = reg_787;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_739_p1 = 32'd3212836864;
    end else begin
        grp_fu_739_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state100)) begin
        grp_fu_746_p0 = wgrad_2_load_reg_1844;
    end else if ((1'b1 == ap_CS_fsm_state87)) begin
        grp_fu_746_p0 = wgrad_1_load_reg_1803;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        grp_fu_746_p0 = reg_805;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        grp_fu_746_p0 = fc_in_1_0_load_reg_1662;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_746_p0 = reg_794;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_746_p0 = fc_in_2_relu1_0_load_reg_1516;
    end else begin
        grp_fu_746_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state100) | (1'b1 == ap_CS_fsm_state87))) begin
        grp_fu_746_p1 = reg_811;
    end else if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state46))) begin
        grp_fu_746_p1 = grad_1_q0;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_746_p1 = grad_2_q0;
    end else begin
        grp_fu_746_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        kernel_grad_1_address0 = grp_MatrixBackPropagatio_fu_708_input_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        kernel_grad_1_address0 = grp_Conv2d_fu_692_out_matrix_address0;
    end else begin
        kernel_grad_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state83)) begin
        kernel_grad_1_ce0 = grp_MatrixBackPropagatio_fu_708_input_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        kernel_grad_1_ce0 = grp_Conv2d_fu_692_out_matrix_ce0;
    end else begin
        kernel_grad_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        kernel_grad_1_we0 = grp_Conv2d_fu_692_out_matrix_we0;
    end else begin
        kernel_grad_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        kernel_grad_2_address0 = grp_MatrixBackPropagatio_fu_708_input_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        kernel_grad_2_address0 = grp_Conv2d_2_fu_700_out_matrix_address0;
    end else begin
        kernel_grad_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        kernel_grad_2_ce0 = grp_MatrixBackPropagatio_fu_708_input_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        kernel_grad_2_ce0 = grp_Conv2d_2_fu_700_out_matrix_ce0;
    end else begin
        kernel_grad_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        kernel_grad_2_overtu_address0 = zext_ln109_1_fu_1312_p1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        kernel_grad_2_overtu_address0 = grp_Conv2d_1_fu_685_kernel_address0;
    end else begin
        kernel_grad_2_overtu_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        kernel_grad_2_overtu_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        kernel_grad_2_overtu_ce0 = grp_Conv2d_1_fu_685_kernel_ce0;
    end else begin
        kernel_grad_2_overtu_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        kernel_grad_2_overtu_we0 = 1'b1;
    end else begin
        kernel_grad_2_overtu_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        kernel_grad_2_we0 = grp_Conv2d_2_fu_700_out_matrix_we0;
    end else begin
        kernel_grad_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | (1'b1 == ap_CS_fsm_state72) | ((icmp_ln107_fu_1210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69)))) begin
        lr_in_blk_n_AR = m_axi_lr_in_ARREADY;
    end else begin
        lr_in_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state78))) begin
        lr_in_blk_n_R = m_axi_lr_in_RVALID;
    end else begin
        lr_in_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state76) & (m_axi_lr_in_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state72) & (m_axi_lr_in_ARREADY == 1'b1)) | ((1'b0 == ap_block_state69_io) & (icmp_ln107_fu_1210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69)))) begin
        m_axi_lr_in_ARVALID = 1'b1;
    end else begin
        m_axi_lr_in_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((grp_MatrixBackPropagatio_fu_708_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state83)) | (~((grp_MaxPooBackPropagatio_1_fu_717_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state79)) | ((1'b1 == ap_CS_fsm_state78) & (m_axi_lr_in_RVALID == 1'b1)))) begin
        m_axi_lr_in_RREADY = 1'b1;
    end else begin
        m_axi_lr_in_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        pool_grad_1_address0 = grp_MaxPooBackPropagatio_1_fu_717_input_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        pool_grad_1_address0 = grp_Conv2d_1_fu_685_out_matrix_address0;
    end else begin
        pool_grad_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        pool_grad_1_ce0 = grp_MaxPooBackPropagatio_1_fu_717_input_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        pool_grad_1_ce0 = grp_Conv2d_1_fu_685_out_matrix_ce0;
    end else begin
        pool_grad_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        pool_grad_1_we0 = grp_Conv2d_1_fu_685_out_matrix_we0;
    end else begin
        pool_grad_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        probability_result_address0 = zext_ln156_fu_854_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        probability_result_address0 = zext_ln155_fu_817_p1;
    end else begin
        probability_result_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        probability_result_ce0 = 1'b1;
    end else begin
        probability_result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        rgrad_1_address0 = zext_ln88_reg_1588;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        rgrad_1_address0 = rgrad_1_addr_reg_1547;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rgrad_1_address0 = zext_ln80_fu_943_p1;
    end else begin
        rgrad_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state30))) begin
        rgrad_1_ce0 = 1'b1;
    end else begin
        rgrad_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        rgrad_1_d0 = reg_771;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rgrad_1_d0 = 32'd0;
    end else begin
        rgrad_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((1'b1 == ap_CS_fsm_state18) & (icmp_ln79_fu_931_p2 == 1'd0)))) begin
        rgrad_1_we0 = 1'b1;
    end else begin
        rgrad_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        wgrad_1_address0 = zext_ln125_fu_1375_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        wgrad_1_address0 = zext_ln75_5_fu_1129_p1;
    end else begin
        wgrad_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state85) | (1'b1 == ap_CS_fsm_state50))) begin
        wgrad_1_ce0 = 1'b1;
    end else begin
        wgrad_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        wgrad_1_we0 = 1'b1;
    end else begin
        wgrad_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state98)) begin
        wgrad_2_address0 = zext_ln125_1_fu_1439_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        wgrad_2_address0 = zext_ln75_2_fu_927_p1;
    end else begin
        wgrad_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state98))) begin
        wgrad_2_ce0 = 1'b1;
    end else begin
        wgrad_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        wgrad_2_we0 = 1'b1;
    end else begin
        wgrad_2_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln154_fu_837_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln73_fu_859_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln74_fu_896_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln79_fu_931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln81_fu_968_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln87_fu_1004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((1'd1 == and_ln88_fu_1055_p2) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state43 : begin
            if (((icmp_ln73_1_fu_1061_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln74_1_fu_1098_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state51 : begin
            if (((1'b1 == ap_CS_fsm_state51) & (icmp_ln79_1_fu_1133_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((icmp_ln81_1_fu_1170_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state64 : begin
            if (((grp_MaxPooBackPropagatio_fu_725_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            if (((grp_Conv2d_2_fu_700_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            if (((grp_Padding_fu_733_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state68))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end
        end
        ap_ST_fsm_state69 : begin
            if (((1'b0 == ap_block_state69_io) & (1'b1 == ap_CS_fsm_state69) & (icmp_ln107_fu_1210_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else if (((1'b0 == ap_block_state69_io) & (icmp_ln107_fu_1210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln108_fu_1278_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state72 : begin
            if (((1'b1 == ap_CS_fsm_state72) & (m_axi_lr_in_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state73;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            if (((1'b1 == ap_CS_fsm_state76) & (m_axi_lr_in_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state77 : begin
            if (((grp_Conv2d_1_fu_685_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state77))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (m_axi_lr_in_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state79 : begin
            if ((~((grp_MaxPooBackPropagatio_1_fu_717_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            if (((1'b1 == ap_CS_fsm_state81) & (1'b0 == ap_block_state81_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if ((~((grp_MatrixBackPropagatio_fu_708_ap_done == 1'b0) | (m_axi_lr_in_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state84 : begin
            if (((icmp_ln123_fu_1317_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state85;
            end
        end
        ap_ST_fsm_state85 : begin
            if (((icmp_ln124_fu_1349_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state85))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state86;
            end
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state97 : begin
            if (((icmp_ln123_1_fu_1381_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state97))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state98;
            end
        end
        ap_ST_fsm_state98 : begin
            if (((icmp_ln124_1_fu_1413_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state98))) begin
                ap_NS_fsm = ap_ST_fsm_state97;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state99;
            end
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_1_fu_1290_p2 = (sub_ln109_reg_1734 + zext_ln108_fu_1274_p1);

assign add_ln109_fu_1268_p2 = (sub_ln109_2_fu_1262_p2 + 5'd2);

assign add_ln125_1_fu_1370_p2 = (zext_ln125_2_fu_1366_p1 + shl_ln4_reg_1775);

assign add_ln125_2_fu_1425_p2 = (shl_ln125_3_reg_1821 + j_0_i73_cast_fu_1409_p1);

assign add_ln125_3_fu_1434_p2 = (zext_ln125_3_fu_1430_p1 + shl_ln125_2_reg_1816);

assign add_ln125_fu_1361_p2 = (shl_ln125_1_reg_1780 + j_0_i60_cast_fu_1345_p1);

assign add_ln75_1_fu_922_p2 = (zext_ln75_6_fu_918_p1 + shl_ln_reg_1506);

assign add_ln75_2_fu_1115_p2 = (shl_ln75_3_reg_1657 + j_0_i20_cast14_fu_1094_p1);

assign add_ln75_3_fu_1124_p2 = (zext_ln75_7_fu_1120_p1 + shl_ln75_2_reg_1652);

assign add_ln75_fu_913_p2 = (shl_ln75_1_reg_1511 + j_0_i_cast20_fu_892_p1);

assign add_ln82_1_fu_989_p2 = (zext_ln82_4_fu_985_p1 + shl_ln2_reg_1552);

assign add_ln82_2_fu_1182_p2 = (shl_ln82_3_reg_1703 + j_0_i36_cast11_fu_1166_p1);

assign add_ln82_3_fu_1191_p2 = (zext_ln82_5_fu_1187_p1 + shl_ln82_2_reg_1698);

assign add_ln82_fu_980_p2 = (shl_ln82_1_reg_1557 + j_0_i2_cast17_fu_964_p1);

assign and_ln88_fu_1055_p2 = (or_ln88_fu_1051_p2 & grp_fu_760_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state102 = ap_CS_fsm[32'd101];

assign ap_CS_fsm_state103 = ap_CS_fsm[32'd102];

assign ap_CS_fsm_state104 = ap_CS_fsm[32'd103];

assign ap_CS_fsm_state108 = ap_CS_fsm[32'd107];

assign ap_CS_fsm_state109 = ap_CS_fsm[32'd108];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state89 = ap_CS_fsm[32'd88];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state90 = ap_CS_fsm[32'd89];

assign ap_CS_fsm_state91 = ap_CS_fsm[32'd90];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ap_CS_fsm_state96 = ap_CS_fsm[32'd95];

assign ap_CS_fsm_state97 = ap_CS_fsm[32'd96];

assign ap_CS_fsm_state98 = ap_CS_fsm[32'd97];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

always @ (*) begin
    ap_block_state69_io = ((m_axi_lr_in_ARREADY == 1'b0) & (icmp_ln107_fu_1210_p2 == 1'd1));
end

always @ (*) begin
    ap_block_state81_on_subcall_done = ((grp_Conv2d_fu_692_ap_done == 1'b0) | (grp_MatrixBackPropagatio_fu_708_ap_done == 1'b0));
end

assign bitcast_ln88_fu_1021_p1 = fc_out_1_0_q0;

assign conv_kernel_1_address0 = grp_MatrixBackPropagatio_fu_708_output_matrix_address0;

assign conv_kernel_1_d0 = grp_MatrixBackPropagatio_fu_708_output_matrix_d0;

assign conv_kernel_2_d0 = grp_MatrixBackPropagatio_fu_708_output_matrix_d0;

assign fc_hidden_layer1_d0 = reg_771;

assign fc_hidden_layer2_d0 = reg_771;

assign fc_in_1_0_address0 = zext_ln75_3_fu_1073_p1;

assign fc_in_2_relu1_0_address0 = zext_ln75_fu_871_p1;

assign fc_out_1_0_address0 = zext_ln88_fu_1016_p1;

assign grad_1_addr_1_gep_fu_355_p3 = zext_ln88_reg_1588;

assign grp_Conv2d_1_fu_685_ap_start = grp_Conv2d_1_fu_685_ap_start_reg;

assign grp_Conv2d_2_fu_700_ap_start = grp_Conv2d_2_fu_700_ap_start_reg;

assign grp_Conv2d_fu_692_ap_start = grp_Conv2d_fu_692_ap_start_reg;

assign grp_MatrixBackPropagatio_fu_708_ap_start = grp_MatrixBackPropagatio_fu_708_ap_start_reg;

assign grp_MaxPooBackPropagatio_1_fu_717_ap_start = grp_MaxPooBackPropagatio_1_fu_717_ap_start_reg;

assign grp_MaxPooBackPropagatio_fu_725_ap_start = grp_MaxPooBackPropagatio_fu_725_ap_start_reg;

assign grp_Padding_fu_733_ap_start = grp_Padding_fu_733_ap_start_reg;

assign i_10_fu_1323_p2 = (i_0_i58_reg_641 + 6'd1);

assign i_11_fu_1387_p2 = (i_0_i69_reg_663 + 5'd1);

assign i_4_fu_843_p2 = (i_0_reg_481 + 4'd1);

assign i_5_fu_937_p2 = (i_0_i1_reg_515 + 5'd1);

assign i_6_fu_1067_p2 = (i_0_i15_reg_561 + 6'd1);

assign i_7_fu_1010_p2 = (i_0_i8_reg_550 + 5'd1);

assign i_8_fu_1139_p2 = (i_0_i31_reg_584 + 6'd1);

assign i_9_fu_1216_p2 = (i_0_i49_reg_619 + 2'd1);

assign i_fu_865_p2 = (i_0_i_reg_492 + 5'd1);

assign icmp_ln107_fu_1210_p2 = ((i_0_i49_reg_619 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_1278_p2 = ((j_0_i51_reg_630 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln123_1_fu_1381_p2 = ((i_0_i69_reg_663 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_1317_p2 = ((i_0_i58_reg_641 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln124_1_fu_1413_p2 = ((j_0_i73_reg_674 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_1349_p2 = ((j_0_i60_reg_652 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_837_p2 = ((i_0_reg_481 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_849_p2 = ((zext_ln154_fu_833_p1 == label_r) ? 1'b1 : 1'b0);

assign icmp_ln73_1_fu_1061_p2 = ((i_0_i15_reg_561 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_859_p2 = ((i_0_i_reg_492 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln74_1_fu_1098_p2 = ((j_0_i20_reg_573 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_896_p2 = ((j_0_i_reg_504 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln79_1_fu_1133_p2 = ((i_0_i31_reg_584 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_931_p2 = ((i_0_i1_reg_515 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln81_1_fu_1170_p2 = ((j_0_i36_reg_607 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_968_p2 = ((j_0_i2_reg_538 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_1004_p2 = ((i_0_i8_reg_550 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln88_1_fu_1045_p2 = ((trunc_ln88_fu_1035_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_1039_p2 = ((tmp_s_fu_1025_p4 != 8'd255) ? 1'b1 : 1'b0);

assign j_0_i20_cast14_fu_1094_p1 = j_0_i20_reg_573;

assign j_0_i2_cast17_fu_964_p1 = j_0_i2_reg_538;

assign j_0_i36_cast11_fu_1166_p1 = j_0_i36_reg_607;

assign j_0_i60_cast_fu_1345_p1 = j_0_i60_reg_652;

assign j_0_i73_cast_fu_1409_p1 = j_0_i73_reg_674;

assign j_0_i_cast20_fu_892_p1 = j_0_i_reg_504;

assign j_11_fu_974_p2 = (j_0_i2_reg_538 + 4'd1);

assign j_12_fu_1104_p2 = (j_0_i20_reg_573 + 5'd1);

assign j_13_fu_1176_p2 = (j_0_i36_reg_607 + 5'd1);

assign j_14_fu_1284_p2 = (j_0_i51_reg_630 + 2'd1);

assign j_15_fu_1355_p2 = (j_0_i60_reg_652 + 5'd1);

assign j_16_fu_1419_p2 = (j_0_i73_reg_674 + 4'd1);

assign j_fu_902_p2 = (j_0_i_reg_504 + 4'd1);

assign m_axi_lr_in_ARADDR = lr_in_addr_reg_1465;

assign m_axi_lr_in_ARBURST = 2'd0;

assign m_axi_lr_in_ARCACHE = 4'd0;

assign m_axi_lr_in_ARID = 1'd0;

assign m_axi_lr_in_ARLEN = 32'd1;

assign m_axi_lr_in_ARLOCK = 2'd0;

assign m_axi_lr_in_ARPROT = 3'd0;

assign m_axi_lr_in_ARQOS = 4'd0;

assign m_axi_lr_in_ARREGION = 4'd0;

assign m_axi_lr_in_ARSIZE = 3'd0;

assign m_axi_lr_in_ARUSER = 1'd0;

assign m_axi_lr_in_AWADDR = 32'd0;

assign m_axi_lr_in_AWBURST = 2'd0;

assign m_axi_lr_in_AWCACHE = 4'd0;

assign m_axi_lr_in_AWID = 1'd0;

assign m_axi_lr_in_AWLEN = 32'd0;

assign m_axi_lr_in_AWLOCK = 2'd0;

assign m_axi_lr_in_AWPROT = 3'd0;

assign m_axi_lr_in_AWQOS = 4'd0;

assign m_axi_lr_in_AWREGION = 4'd0;

assign m_axi_lr_in_AWSIZE = 3'd0;

assign m_axi_lr_in_AWUSER = 1'd0;

assign m_axi_lr_in_AWVALID = 1'b0;

assign m_axi_lr_in_BREADY = 1'b0;

assign m_axi_lr_in_WDATA = 32'd0;

assign m_axi_lr_in_WID = 1'd0;

assign m_axi_lr_in_WLAST = 1'b0;

assign m_axi_lr_in_WSTRB = 4'd0;

assign m_axi_lr_in_WUSER = 1'd0;

assign m_axi_lr_in_WVALID = 1'b0;

assign max_poo_locate_1_address0 = grp_MaxPooBackPropagatio_1_fu_717_max_poo_locate_1_address0;

assign max_poo_locate_1_ce0 = grp_MaxPooBackPropagatio_1_fu_717_max_poo_locate_1_ce0;

assign max_poo_locate_2_address0 = grp_MaxPooBackPropagatio_fu_725_max_poo_locate_2_address0;

assign max_poo_locate_2_ce0 = grp_MaxPooBackPropagatio_fu_725_max_poo_locate_2_ce0;

assign max_poo_out_1_address0 = grp_Conv2d_2_fu_700_max_poo_out_1_address0;

assign max_poo_out_1_ce0 = grp_Conv2d_2_fu_700_max_poo_out_1_ce0;

assign mnist_data_address0 = grp_Conv2d_fu_692_input_matrix_address0;

assign mnist_data_ce0 = grp_Conv2d_fu_692_input_matrix_ce0;

assign or_ln88_fu_1051_p2 = (icmp_ln88_reg_1605 | icmp_ln88_1_reg_1610);

assign sext_ln109_1_fu_1309_p1 = $signed(sub_ln109_3_reg_1757);

assign sext_ln109_fu_1295_p1 = $signed(add_ln109_1_fu_1290_p2);

assign shl_ln109_1_fu_1250_p3 = {{sub_ln109_1_fu_1240_p2}, {2'd0}};

assign shl_ln125_1_fu_1337_p3 = {{i_0_i58_reg_641}, {2'd0}};

assign shl_ln125_2_fu_1393_p3 = {{i_0_i69_reg_663}, {3'd0}};

assign shl_ln125_3_fu_1401_p3 = {{i_0_i69_reg_663}, {1'd0}};

assign shl_ln2_fu_948_p3 = {{i_0_i1_reg_515}, {3'd0}};

assign shl_ln3_fu_1222_p3 = {{i_0_i49_reg_619}, {2'd0}};

assign shl_ln4_fu_1329_p3 = {{i_0_i58_reg_641}, {4'd0}};

assign shl_ln75_1_fu_884_p3 = {{i_0_i_reg_492}, {1'd0}};

assign shl_ln75_2_fu_1078_p3 = {{i_0_i15_reg_561}, {4'd0}};

assign shl_ln75_3_fu_1086_p3 = {{i_0_i15_reg_561}, {2'd0}};

assign shl_ln82_1_fu_956_p3 = {{i_0_i1_reg_515}, {1'd0}};

assign shl_ln82_2_fu_1150_p3 = {{i_0_i31_reg_584}, {4'd0}};

assign shl_ln82_3_fu_1158_p3 = {{i_0_i31_reg_584}, {2'd0}};

assign shl_ln_fu_876_p3 = {{i_0_i_reg_492}, {3'd0}};

assign sub_ln109_1_fu_1240_p2 = ($signed(2'd2) - $signed(i_0_i49_reg_619));

assign sub_ln109_2_fu_1262_p2 = (zext_ln109_4_fu_1258_p1 - zext_ln109_3_fu_1246_p1);

assign sub_ln109_3_fu_1304_p2 = (add_ln109_reg_1739 - zext_ln108_fu_1274_p1);

assign sub_ln109_fu_1234_p2 = (zext_ln109_2_fu_1230_p1 - zext_ln107_fu_1206_p1);

assign tmp_s_fu_1025_p4 = {{bitcast_ln88_fu_1021_p1[30:23]}};

assign trunc_ln88_fu_1035_p1 = bitcast_ln88_fu_1021_p1[22:0];

assign zext_ln107_fu_1206_p1 = i_0_i49_reg_619;

assign zext_ln108_fu_1274_p1 = j_0_i51_reg_630;

assign zext_ln109_1_fu_1312_p1 = $unsigned(sext_ln109_1_fu_1309_p1);

assign zext_ln109_2_fu_1230_p1 = shl_ln3_fu_1222_p3;

assign zext_ln109_3_fu_1246_p1 = sub_ln109_1_fu_1240_p2;

assign zext_ln109_4_fu_1258_p1 = shl_ln109_1_fu_1250_p3;

assign zext_ln109_fu_1299_p1 = $unsigned(sext_ln109_fu_1295_p1);

assign zext_ln125_1_fu_1439_p1 = add_ln125_3_fu_1434_p2;

assign zext_ln125_2_fu_1366_p1 = add_ln125_fu_1361_p2;

assign zext_ln125_3_fu_1430_p1 = add_ln125_2_fu_1425_p2;

assign zext_ln125_fu_1375_p1 = add_ln125_1_fu_1370_p2;

assign zext_ln152_fu_823_p1 = lr_in_offset;

assign zext_ln154_fu_833_p1 = i_0_reg_481;

assign zext_ln155_fu_817_p1 = label_r;

assign zext_ln156_fu_854_p1 = i_0_reg_481;

assign zext_ln75_1_fu_908_p1 = j_0_i_reg_504;

assign zext_ln75_2_fu_927_p1 = add_ln75_1_reg_1534;

assign zext_ln75_3_fu_1073_p1 = i_0_i15_reg_561;

assign zext_ln75_4_fu_1110_p1 = j_0_i20_reg_573;

assign zext_ln75_5_fu_1129_p1 = add_ln75_3_reg_1680;

assign zext_ln75_6_fu_918_p1 = add_ln75_fu_913_p2;

assign zext_ln75_7_fu_1120_p1 = add_ln75_2_fu_1115_p2;

assign zext_ln75_fu_871_p1 = i_0_i_reg_492;

assign zext_ln80_1_fu_1145_p1 = i_0_i31_reg_584;

assign zext_ln80_fu_943_p1 = i_0_i1_reg_515;

assign zext_ln82_1_fu_999_p1 = j_0_i2_reg_538;

assign zext_ln82_2_fu_1196_p1 = add_ln82_3_fu_1191_p2;

assign zext_ln82_3_fu_1201_p1 = j_0_i36_reg_607;

assign zext_ln82_4_fu_985_p1 = add_ln82_fu_980_p2;

assign zext_ln82_5_fu_1187_p1 = add_ln82_2_fu_1182_p2;

assign zext_ln82_fu_994_p1 = add_ln82_1_fu_989_p2;

assign zext_ln88_fu_1016_p1 = i_0_i8_reg_550;

always @ (posedge ap_clk) begin
    lr_in_addr_reg_1465[31:30] <= 2'b00;
    zext_ln156_reg_1483[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    shl_ln_reg_1506[2:0] <= 3'b000;
    shl_ln75_1_reg_1511[0] <= 1'b0;
    shl_ln2_reg_1552[2:0] <= 3'b000;
    shl_ln82_1_reg_1557[0] <= 1'b0;
    zext_ln88_reg_1588[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    shl_ln75_2_reg_1652[3:0] <= 4'b0000;
    shl_ln75_3_reg_1657[1:0] <= 2'b00;
    shl_ln82_2_reg_1698[3:0] <= 4'b0000;
    shl_ln82_3_reg_1703[1:0] <= 2'b00;
    shl_ln4_reg_1775[3:0] <= 4'b0000;
    shl_ln125_1_reg_1780[1:0] <= 2'b00;
    shl_ln125_2_reg_1816[2:0] <= 3'b000;
    shl_ln125_3_reg_1821[0] <= 1'b0;
end

endmodule //backward
