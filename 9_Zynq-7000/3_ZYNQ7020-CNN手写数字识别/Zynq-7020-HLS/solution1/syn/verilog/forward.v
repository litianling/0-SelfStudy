// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module forward (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mnist_data_address0,
        mnist_data_ce0,
        mnist_data_q0,
        conv_kernel_1_address0,
        conv_kernel_1_ce0,
        conv_kernel_1_q0,
        max_poo_out_1_address0,
        max_poo_out_1_ce0,
        max_poo_out_1_we0,
        max_poo_out_1_d0,
        max_poo_out_1_q0,
        max_poo_locate_1_address0,
        max_poo_locate_1_ce0,
        max_poo_locate_1_we0,
        max_poo_locate_1_d0,
        conv_kernel_2_address0,
        conv_kernel_2_ce0,
        conv_kernel_2_q0,
        max_poo_locate_2_address0,
        max_poo_locate_2_ce0,
        max_poo_locate_2_we0,
        max_poo_locate_2_d0,
        fc_in_1_0_address0,
        fc_in_1_0_ce0,
        fc_in_1_0_we0,
        fc_in_1_0_d0,
        fc_in_1_0_q0,
        fc_out_1_0_address0,
        fc_out_1_0_ce0,
        fc_out_1_0_we0,
        fc_out_1_0_d0,
        fc_out_1_0_q0,
        fc_hidden_layer1_address0,
        fc_hidden_layer1_ce0,
        fc_hidden_layer1_q0,
        fc_in_2_relu1_0_address0,
        fc_in_2_relu1_0_ce0,
        fc_in_2_relu1_0_we0,
        fc_in_2_relu1_0_d0,
        fc_in_2_relu1_0_q0,
        fc_hidden_layer2_address0,
        fc_hidden_layer2_ce0,
        fc_hidden_layer2_q0,
        probability_result_address0,
        probability_result_ce0,
        probability_result_we0,
        probability_result_d0
);

parameter    ap_ST_fsm_state1 = 132'd1;
parameter    ap_ST_fsm_state2 = 132'd2;
parameter    ap_ST_fsm_state3 = 132'd4;
parameter    ap_ST_fsm_state4 = 132'd8;
parameter    ap_ST_fsm_state5 = 132'd16;
parameter    ap_ST_fsm_state6 = 132'd32;
parameter    ap_ST_fsm_state7 = 132'd64;
parameter    ap_ST_fsm_state8 = 132'd128;
parameter    ap_ST_fsm_state9 = 132'd256;
parameter    ap_ST_fsm_state10 = 132'd512;
parameter    ap_ST_fsm_state11 = 132'd1024;
parameter    ap_ST_fsm_state12 = 132'd2048;
parameter    ap_ST_fsm_state13 = 132'd4096;
parameter    ap_ST_fsm_state14 = 132'd8192;
parameter    ap_ST_fsm_state15 = 132'd16384;
parameter    ap_ST_fsm_state16 = 132'd32768;
parameter    ap_ST_fsm_state17 = 132'd65536;
parameter    ap_ST_fsm_state18 = 132'd131072;
parameter    ap_ST_fsm_state19 = 132'd262144;
parameter    ap_ST_fsm_state20 = 132'd524288;
parameter    ap_ST_fsm_state21 = 132'd1048576;
parameter    ap_ST_fsm_state22 = 132'd2097152;
parameter    ap_ST_fsm_state23 = 132'd4194304;
parameter    ap_ST_fsm_state24 = 132'd8388608;
parameter    ap_ST_fsm_state25 = 132'd16777216;
parameter    ap_ST_fsm_state26 = 132'd33554432;
parameter    ap_ST_fsm_state27 = 132'd67108864;
parameter    ap_ST_fsm_state28 = 132'd134217728;
parameter    ap_ST_fsm_state29 = 132'd268435456;
parameter    ap_ST_fsm_state30 = 132'd536870912;
parameter    ap_ST_fsm_state31 = 132'd1073741824;
parameter    ap_ST_fsm_state32 = 132'd2147483648;
parameter    ap_ST_fsm_state33 = 132'd4294967296;
parameter    ap_ST_fsm_state34 = 132'd8589934592;
parameter    ap_ST_fsm_state35 = 132'd17179869184;
parameter    ap_ST_fsm_state36 = 132'd34359738368;
parameter    ap_ST_fsm_state37 = 132'd68719476736;
parameter    ap_ST_fsm_state38 = 132'd137438953472;
parameter    ap_ST_fsm_state39 = 132'd274877906944;
parameter    ap_ST_fsm_state40 = 132'd549755813888;
parameter    ap_ST_fsm_state41 = 132'd1099511627776;
parameter    ap_ST_fsm_state42 = 132'd2199023255552;
parameter    ap_ST_fsm_state43 = 132'd4398046511104;
parameter    ap_ST_fsm_state44 = 132'd8796093022208;
parameter    ap_ST_fsm_state45 = 132'd17592186044416;
parameter    ap_ST_fsm_state46 = 132'd35184372088832;
parameter    ap_ST_fsm_state47 = 132'd70368744177664;
parameter    ap_ST_fsm_state48 = 132'd140737488355328;
parameter    ap_ST_fsm_state49 = 132'd281474976710656;
parameter    ap_ST_fsm_state50 = 132'd562949953421312;
parameter    ap_ST_fsm_state51 = 132'd1125899906842624;
parameter    ap_ST_fsm_state52 = 132'd2251799813685248;
parameter    ap_ST_fsm_state53 = 132'd4503599627370496;
parameter    ap_ST_fsm_state54 = 132'd9007199254740992;
parameter    ap_ST_fsm_state55 = 132'd18014398509481984;
parameter    ap_ST_fsm_state56 = 132'd36028797018963968;
parameter    ap_ST_fsm_state57 = 132'd72057594037927936;
parameter    ap_ST_fsm_state58 = 132'd144115188075855872;
parameter    ap_ST_fsm_state59 = 132'd288230376151711744;
parameter    ap_ST_fsm_state60 = 132'd576460752303423488;
parameter    ap_ST_fsm_state61 = 132'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 132'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 132'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 132'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 132'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 132'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 132'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 132'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 132'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 132'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 132'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 132'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 132'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 132'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 132'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 132'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 132'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 132'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 132'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 132'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 132'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 132'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 132'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 132'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 132'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 132'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 132'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 132'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 132'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 132'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 132'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 132'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 132'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 132'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 132'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 132'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 132'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 132'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 132'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 132'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 132'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 132'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 132'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 132'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 132'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 132'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 132'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 132'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 132'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 132'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 132'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 132'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 132'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 132'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 132'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 132'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 132'd83076749736557242056487941267521536;
parameter    ap_ST_fsm_state118 = 132'd166153499473114484112975882535043072;
parameter    ap_ST_fsm_state119 = 132'd332306998946228968225951765070086144;
parameter    ap_ST_fsm_state120 = 132'd664613997892457936451903530140172288;
parameter    ap_ST_fsm_state121 = 132'd1329227995784915872903807060280344576;
parameter    ap_ST_fsm_state122 = 132'd2658455991569831745807614120560689152;
parameter    ap_ST_fsm_state123 = 132'd5316911983139663491615228241121378304;
parameter    ap_ST_fsm_state124 = 132'd10633823966279326983230456482242756608;
parameter    ap_ST_fsm_state125 = 132'd21267647932558653966460912964485513216;
parameter    ap_ST_fsm_state126 = 132'd42535295865117307932921825928971026432;
parameter    ap_ST_fsm_state127 = 132'd85070591730234615865843651857942052864;
parameter    ap_ST_fsm_state128 = 132'd170141183460469231731687303715884105728;
parameter    ap_ST_fsm_state129 = 132'd340282366920938463463374607431768211456;
parameter    ap_ST_fsm_state130 = 132'd680564733841876926926749214863536422912;
parameter    ap_ST_fsm_state131 = 132'd1361129467683753853853498429727072845824;
parameter    ap_ST_fsm_state132 = 132'd2722258935367507707706996859454145691648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] mnist_data_address0;
output   mnist_data_ce0;
input  [31:0] mnist_data_q0;
output  [3:0] conv_kernel_1_address0;
output   conv_kernel_1_ce0;
input  [31:0] conv_kernel_1_q0;
output  [7:0] max_poo_out_1_address0;
output   max_poo_out_1_ce0;
output   max_poo_out_1_we0;
output  [31:0] max_poo_out_1_d0;
input  [31:0] max_poo_out_1_q0;
output  [7:0] max_poo_locate_1_address0;
output   max_poo_locate_1_ce0;
output   max_poo_locate_1_we0;
output  [31:0] max_poo_locate_1_d0;
output  [3:0] conv_kernel_2_address0;
output   conv_kernel_2_ce0;
input  [31:0] conv_kernel_2_q0;
output  [5:0] max_poo_locate_2_address0;
output   max_poo_locate_2_ce0;
output   max_poo_locate_2_we0;
output  [31:0] max_poo_locate_2_d0;
output  [5:0] fc_in_1_0_address0;
output   fc_in_1_0_ce0;
output   fc_in_1_0_we0;
output  [31:0] fc_in_1_0_d0;
input  [31:0] fc_in_1_0_q0;
output  [4:0] fc_out_1_0_address0;
output   fc_out_1_0_ce0;
output   fc_out_1_0_we0;
output  [31:0] fc_out_1_0_d0;
input  [31:0] fc_out_1_0_q0;
output  [9:0] fc_hidden_layer1_address0;
output   fc_hidden_layer1_ce0;
input  [31:0] fc_hidden_layer1_q0;
output  [4:0] fc_in_2_relu1_0_address0;
output   fc_in_2_relu1_0_ce0;
output   fc_in_2_relu1_0_we0;
output  [31:0] fc_in_2_relu1_0_d0;
input  [31:0] fc_in_2_relu1_0_q0;
output  [7:0] fc_hidden_layer2_address0;
output   fc_hidden_layer2_ce0;
input  [31:0] fc_hidden_layer2_q0;
output  [3:0] probability_result_address0;
output   probability_result_ce0;
output   probability_result_we0;
output  [31:0] probability_result_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] max_poo_out_1_address0;
reg max_poo_out_1_ce0;
reg max_poo_out_1_we0;
reg[5:0] fc_in_1_0_address0;
reg fc_in_1_0_ce0;
reg fc_in_1_0_we0;
reg[4:0] fc_out_1_0_address0;
reg fc_out_1_0_ce0;
reg fc_out_1_0_we0;
reg fc_hidden_layer1_ce0;
reg[4:0] fc_in_2_relu1_0_address0;
reg fc_in_2_relu1_0_ce0;
reg fc_in_2_relu1_0_we0;
reg fc_hidden_layer2_ce0;
reg probability_result_ce0;
reg probability_result_we0;

(* fsm_encoding = "none" *) reg   [131:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] conv_out_1_address0;
reg    conv_out_1_ce0;
reg    conv_out_1_we0;
wire   [31:0] conv_out_1_q0;
reg   [7:0] conv_out_2_address0;
reg    conv_out_2_ce0;
reg    conv_out_2_we0;
wire   [31:0] conv_out_2_q0;
reg   [5:0] max_poo_out_2_address0;
reg    max_poo_out_2_ce0;
reg    max_poo_out_2_we0;
wire   [31:0] max_poo_out_2_q0;
reg   [3:0] fc_out_2_0_address0;
reg    fc_out_2_0_ce0;
reg    fc_out_2_0_we0;
wire   [31:0] fc_out_2_0_q0;
wire   [31:0] grp_fu_445_p2;
reg   [31:0] reg_483;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state44;
wire   [31:0] grp_fu_439_p2;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state49;
wire   [63:0] grp_fu_454_p1;
reg   [63:0] reg_494;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state78;
wire   [31:0] grp_fu_450_p1;
reg   [31:0] reg_502;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state77;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state80;
wire   [63:0] grp_fu_478_p2;
reg   [63:0] reg_513;
wire    ap_CS_fsm_state99;
wire   [2:0] i_1_fu_525_p2;
reg   [2:0] i_1_reg_883;
wire    ap_CS_fsm_state9;
wire   [6:0] sub_ln54_fu_555_p2;
reg   [6:0] sub_ln54_reg_888;
wire   [0:0] icmp_ln52_fu_519_p2;
wire   [2:0] j_5_fu_571_p2;
reg   [2:0] j_5_reg_896;
wire    ap_CS_fsm_state10;
wire   [63:0] zext_ln54_fu_586_p1;
reg   [63:0] zext_ln54_reg_901;
wire   [0:0] icmp_ln53_fu_565_p2;
wire   [7:0] j_0_i3_cast8_fu_591_p1;
reg   [7:0] j_0_i3_cast8_reg_911;
wire    ap_CS_fsm_state12;
wire   [4:0] j_3_fu_601_p2;
reg   [4:0] j_3_reg_919;
reg   [4:0] fc_out_1_0_addr_reg_924;
wire   [0:0] icmp_ln58_fu_595_p2;
wire   [5:0] i_2_fu_618_p2;
reg   [5:0] i_2_reg_932;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln60_fu_612_p2;
reg   [31:0] fc_in_1_0_load_reg_947;
wire    ap_CS_fsm_state14;
reg   [31:0] fc_hidden_layer1_loa_reg_952;
wire   [4:0] j_6_fu_671_p2;
reg   [4:0] j_6_reg_960;
wire    ap_CS_fsm_state24;
wire   [63:0] zext_ln67_fu_677_p1;
reg   [63:0] zext_ln67_reg_965;
wire   [0:0] icmp_ln66_fu_665_p2;
reg   [31:0] fc_out_1_0_load_reg_975;
wire    ap_CS_fsm_state25;
wire   [63:0] grp_fu_469_p2;
reg   [63:0] tmp_i1_15_reg_983;
wire    ap_CS_fsm_state32;
wire   [31:0] select_ln23_fu_765_p3;
reg   [31:0] select_ln23_reg_988;
wire    ap_CS_fsm_state36;
wire   [5:0] j_0_i16_cast5_fu_772_p1;
reg   [5:0] j_0_i16_cast5_reg_993;
wire    ap_CS_fsm_state38;
wire   [3:0] j_7_fu_782_p2;
reg   [3:0] j_7_reg_1001;
reg   [3:0] fc_out_2_0_addr_2_reg_1006;
wire   [0:0] icmp_ln58_1_fu_776_p2;
wire   [4:0] i_3_fu_799_p2;
reg   [4:0] i_3_reg_1014;
wire    ap_CS_fsm_state39;
wire   [0:0] icmp_ln60_1_fu_793_p2;
wire    ap_CS_fsm_state40;
reg   [31:0] fc_hidden_layer2_loa_reg_1029;
wire    ap_CS_fsm_state41;
wire   [3:0] i_fu_852_p2;
reg   [3:0] i_reg_1042;
wire    ap_CS_fsm_state50;
wire   [0:0] icmp_ln143_fu_846_p2;
wire   [63:0] grp_fu_465_p2;
reg   [63:0] tmp_6_reg_1052;
wire    ap_CS_fsm_state75;
wire   [3:0] j_fu_869_p2;
reg   [3:0] j_reg_1060;
wire    ap_CS_fsm_state79;
wire   [63:0] zext_ln146_fu_875_p1;
reg   [63:0] zext_ln146_reg_1065;
wire   [0:0] icmp_ln145_fu_863_p2;
reg   [63:0] tmp_8_reg_1075;
wire    ap_CS_fsm_state81;
wire   [63:0] grp_fu_474_p2;
reg   [63:0] tmp_s_reg_1080;
wire    ap_CS_fsm_state130;
wire    grp_MaxPool2d_1_fu_399_ap_start;
wire    grp_MaxPool2d_1_fu_399_ap_done;
wire    grp_MaxPool2d_1_fu_399_ap_idle;
wire    grp_MaxPool2d_1_fu_399_ap_ready;
wire   [7:0] grp_MaxPool2d_1_fu_399_output_matrix_address0;
wire    grp_MaxPool2d_1_fu_399_output_matrix_ce0;
wire    grp_MaxPool2d_1_fu_399_output_matrix_we0;
wire   [31:0] grp_MaxPool2d_1_fu_399_output_matrix_d0;
wire   [7:0] grp_MaxPool2d_1_fu_399_locate_matrix_address0;
wire    grp_MaxPool2d_1_fu_399_locate_matrix_ce0;
wire    grp_MaxPool2d_1_fu_399_locate_matrix_we0;
wire   [31:0] grp_MaxPool2d_1_fu_399_locate_matrix_d0;
wire   [9:0] grp_MaxPool2d_1_fu_399_conv_out_1_address0;
wire    grp_MaxPool2d_1_fu_399_conv_out_1_ce0;
wire    grp_MaxPool2d_fu_409_ap_start;
wire    grp_MaxPool2d_fu_409_ap_done;
wire    grp_MaxPool2d_fu_409_ap_idle;
wire    grp_MaxPool2d_fu_409_ap_ready;
wire   [5:0] grp_MaxPool2d_fu_409_output_matrix_address0;
wire    grp_MaxPool2d_fu_409_output_matrix_ce0;
wire    grp_MaxPool2d_fu_409_output_matrix_we0;
wire   [31:0] grp_MaxPool2d_fu_409_output_matrix_d0;
wire   [5:0] grp_MaxPool2d_fu_409_locate_matrix_address0;
wire    grp_MaxPool2d_fu_409_locate_matrix_ce0;
wire    grp_MaxPool2d_fu_409_locate_matrix_we0;
wire   [31:0] grp_MaxPool2d_fu_409_locate_matrix_d0;
wire   [7:0] grp_MaxPool2d_fu_409_conv_out_2_address0;
wire    grp_MaxPool2d_fu_409_conv_out_2_ce0;
wire    grp_Conv2d_4_fu_419_ap_start;
wire    grp_Conv2d_4_fu_419_ap_done;
wire    grp_Conv2d_4_fu_419_ap_idle;
wire    grp_Conv2d_4_fu_419_ap_ready;
wire   [9:0] grp_Conv2d_4_fu_419_input_matrix_address0;
wire    grp_Conv2d_4_fu_419_input_matrix_ce0;
wire   [3:0] grp_Conv2d_4_fu_419_kernel_address0;
wire    grp_Conv2d_4_fu_419_kernel_ce0;
wire   [9:0] grp_Conv2d_4_fu_419_out_matrix_address0;
wire    grp_Conv2d_4_fu_419_out_matrix_ce0;
wire    grp_Conv2d_4_fu_419_out_matrix_we0;
wire   [31:0] grp_Conv2d_4_fu_419_out_matrix_d0;
wire    grp_Conv2d_3_fu_429_ap_start;
wire    grp_Conv2d_3_fu_429_ap_done;
wire    grp_Conv2d_3_fu_429_ap_idle;
wire    grp_Conv2d_3_fu_429_ap_ready;
wire   [7:0] grp_Conv2d_3_fu_429_input_matrix_address0;
wire    grp_Conv2d_3_fu_429_input_matrix_ce0;
wire   [3:0] grp_Conv2d_3_fu_429_kernel_address0;
wire    grp_Conv2d_3_fu_429_kernel_ce0;
wire   [7:0] grp_Conv2d_3_fu_429_out_matrix_address0;
wire    grp_Conv2d_3_fu_429_out_matrix_ce0;
wire    grp_Conv2d_3_fu_429_out_matrix_we0;
wire   [31:0] grp_Conv2d_3_fu_429_out_matrix_d0;
reg   [2:0] i_0_i_reg_261;
wire    ap_CS_fsm_state8;
reg   [2:0] j_0_i_reg_272;
wire    ap_CS_fsm_state11;
reg   [4:0] j_0_i3_reg_283;
reg   [31:0] storemerge_reg_294;
reg   [5:0] i_0_i5_reg_307;
reg   [4:0] j_0_i9_reg_318;
wire    ap_CS_fsm_state37;
reg   [3:0] j_0_i16_reg_329;
reg   [31:0] storemerge149_reg_340;
reg   [4:0] i_0_i20_reg_353;
reg   [3:0] i_0_reg_365;
wire   [31:0] ap_phi_mux_probability_sum_0_phi_fu_380_p4;
reg   [31:0] probability_sum_0_reg_376;
reg   [3:0] j_0_reg_388;
wire    ap_CS_fsm_state132;
reg    grp_MaxPool2d_1_fu_399_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_MaxPool2d_fu_409_ap_start_reg;
wire    ap_CS_fsm_state7;
reg    grp_Conv2d_4_fu_419_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_Conv2d_3_fu_429_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln59_fu_607_p1;
wire   [63:0] zext_ln61_fu_624_p1;
wire   [63:0] zext_ln61_1_fu_660_p1;
wire   [63:0] zext_ln59_1_fu_788_p1;
wire   [63:0] zext_ln61_3_fu_836_p1;
wire   [63:0] zext_ln61_2_fu_841_p1;
wire   [63:0] zext_ln144_fu_858_p1;
reg   [31:0] grp_fu_439_p0;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state45;
reg   [31:0] grp_fu_445_p0;
reg   [31:0] grp_fu_445_p1;
wire    ap_CS_fsm_state15;
reg   [63:0] grp_fu_450_p0;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state76;
wire    ap_CS_fsm_state131;
reg   [31:0] grp_fu_454_p0;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state71;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state100;
reg   [63:0] grp_fu_478_p1;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state82;
wire   [5:0] shl_ln_fu_531_p3;
wire   [3:0] shl_ln54_1_fu_543_p3;
wire   [6:0] zext_ln54_1_fu_539_p1;
wire   [6:0] zext_ln54_2_fu_551_p1;
wire   [6:0] zext_ln53_fu_561_p1;
wire   [6:0] add_ln54_fu_577_p2;
wire  signed [31:0] sext_ln54_fu_582_p1;
wire   [7:0] shl_ln61_1_fu_637_p3;
wire   [7:0] add_ln61_fu_645_p2;
wire   [9:0] shl_ln1_fu_629_p3;
wire   [9:0] zext_ln61_4_fu_650_p1;
wire   [9:0] add_ln61_1_fu_654_p2;
wire   [31:0] bitcast_ln23_fu_682_p1;
wire   [31:0] bitcast_ln23_1_fu_699_p1;
wire   [7:0] tmp_2_fu_685_p4;
wire   [22:0] trunc_ln23_fu_695_p1;
wire   [0:0] icmp_ln23_1_fu_723_p2;
wire   [0:0] icmp_ln23_fu_717_p2;
wire   [7:0] tmp_7_fu_703_p4;
wire   [22:0] trunc_ln23_1_fu_713_p1;
wire   [0:0] icmp_ln23_3_fu_741_p2;
wire   [0:0] icmp_ln23_2_fu_735_p2;
wire   [0:0] or_ln23_fu_729_p2;
wire   [0:0] or_ln23_1_fu_747_p2;
wire   [0:0] and_ln23_fu_753_p2;
wire   [0:0] grp_fu_461_p2;
wire   [0:0] and_ln23_1_fu_759_p2;
wire   [5:0] shl_ln61_3_fu_813_p3;
wire   [5:0] add_ln61_2_fu_821_p2;
wire   [7:0] shl_ln61_2_fu_805_p3;
wire   [7:0] zext_ln61_5_fu_826_p1;
wire   [7:0] add_ln61_3_fu_830_p2;
reg   [131:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 132'd1;
#0 grp_MaxPool2d_1_fu_399_ap_start_reg = 1'b0;
#0 grp_MaxPool2d_fu_409_ap_start_reg = 1'b0;
#0 grp_Conv2d_4_fu_419_ap_start_reg = 1'b0;
#0 grp_Conv2d_3_fu_429_ap_start_reg = 1'b0;
end

forward_conv_out_1 #(
    .DataWidth( 32 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
conv_out_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_out_1_address0),
    .ce0(conv_out_1_ce0),
    .we0(conv_out_1_we0),
    .d0(grp_Conv2d_4_fu_419_out_matrix_d0),
    .q0(conv_out_1_q0)
);

forward_conv_out_2 #(
    .DataWidth( 32 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
conv_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv_out_2_address0),
    .ce0(conv_out_2_ce0),
    .we0(conv_out_2_we0),
    .d0(grp_Conv2d_3_fu_429_out_matrix_d0),
    .q0(conv_out_2_q0)
);

forward_max_poo_ofYi #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
max_poo_out_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max_poo_out_2_address0),
    .ce0(max_poo_out_2_ce0),
    .we0(max_poo_out_2_we0),
    .d0(grp_MaxPool2d_fu_409_output_matrix_d0),
    .q0(max_poo_out_2_q0)
);

forward_fc_out_2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
fc_out_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fc_out_2_0_address0),
    .ce0(fc_out_2_0_ce0),
    .we0(fc_out_2_0_we0),
    .d0(storemerge149_reg_340),
    .q0(fc_out_2_0_q0)
);

MaxPool2d_1 grp_MaxPool2d_1_fu_399(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MaxPool2d_1_fu_399_ap_start),
    .ap_done(grp_MaxPool2d_1_fu_399_ap_done),
    .ap_idle(grp_MaxPool2d_1_fu_399_ap_idle),
    .ap_ready(grp_MaxPool2d_1_fu_399_ap_ready),
    .output_matrix_address0(grp_MaxPool2d_1_fu_399_output_matrix_address0),
    .output_matrix_ce0(grp_MaxPool2d_1_fu_399_output_matrix_ce0),
    .output_matrix_we0(grp_MaxPool2d_1_fu_399_output_matrix_we0),
    .output_matrix_d0(grp_MaxPool2d_1_fu_399_output_matrix_d0),
    .locate_matrix_address0(grp_MaxPool2d_1_fu_399_locate_matrix_address0),
    .locate_matrix_ce0(grp_MaxPool2d_1_fu_399_locate_matrix_ce0),
    .locate_matrix_we0(grp_MaxPool2d_1_fu_399_locate_matrix_we0),
    .locate_matrix_d0(grp_MaxPool2d_1_fu_399_locate_matrix_d0),
    .conv_out_1_address0(grp_MaxPool2d_1_fu_399_conv_out_1_address0),
    .conv_out_1_ce0(grp_MaxPool2d_1_fu_399_conv_out_1_ce0),
    .conv_out_1_q0(conv_out_1_q0)
);

MaxPool2d grp_MaxPool2d_fu_409(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_MaxPool2d_fu_409_ap_start),
    .ap_done(grp_MaxPool2d_fu_409_ap_done),
    .ap_idle(grp_MaxPool2d_fu_409_ap_idle),
    .ap_ready(grp_MaxPool2d_fu_409_ap_ready),
    .output_matrix_address0(grp_MaxPool2d_fu_409_output_matrix_address0),
    .output_matrix_ce0(grp_MaxPool2d_fu_409_output_matrix_ce0),
    .output_matrix_we0(grp_MaxPool2d_fu_409_output_matrix_we0),
    .output_matrix_d0(grp_MaxPool2d_fu_409_output_matrix_d0),
    .locate_matrix_address0(grp_MaxPool2d_fu_409_locate_matrix_address0),
    .locate_matrix_ce0(grp_MaxPool2d_fu_409_locate_matrix_ce0),
    .locate_matrix_we0(grp_MaxPool2d_fu_409_locate_matrix_we0),
    .locate_matrix_d0(grp_MaxPool2d_fu_409_locate_matrix_d0),
    .conv_out_2_address0(grp_MaxPool2d_fu_409_conv_out_2_address0),
    .conv_out_2_ce0(grp_MaxPool2d_fu_409_conv_out_2_ce0),
    .conv_out_2_q0(conv_out_2_q0)
);

Conv2d_4 grp_Conv2d_4_fu_419(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv2d_4_fu_419_ap_start),
    .ap_done(grp_Conv2d_4_fu_419_ap_done),
    .ap_idle(grp_Conv2d_4_fu_419_ap_idle),
    .ap_ready(grp_Conv2d_4_fu_419_ap_ready),
    .input_matrix_address0(grp_Conv2d_4_fu_419_input_matrix_address0),
    .input_matrix_ce0(grp_Conv2d_4_fu_419_input_matrix_ce0),
    .input_matrix_q0(mnist_data_q0),
    .kernel_address0(grp_Conv2d_4_fu_419_kernel_address0),
    .kernel_ce0(grp_Conv2d_4_fu_419_kernel_ce0),
    .kernel_q0(conv_kernel_1_q0),
    .out_matrix_address0(grp_Conv2d_4_fu_419_out_matrix_address0),
    .out_matrix_ce0(grp_Conv2d_4_fu_419_out_matrix_ce0),
    .out_matrix_we0(grp_Conv2d_4_fu_419_out_matrix_we0),
    .out_matrix_d0(grp_Conv2d_4_fu_419_out_matrix_d0)
);

Conv2d_3 grp_Conv2d_3_fu_429(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Conv2d_3_fu_429_ap_start),
    .ap_done(grp_Conv2d_3_fu_429_ap_done),
    .ap_idle(grp_Conv2d_3_fu_429_ap_idle),
    .ap_ready(grp_Conv2d_3_fu_429_ap_ready),
    .input_matrix_address0(grp_Conv2d_3_fu_429_input_matrix_address0),
    .input_matrix_ce0(grp_Conv2d_3_fu_429_input_matrix_ce0),
    .input_matrix_q0(max_poo_out_1_q0),
    .kernel_address0(grp_Conv2d_3_fu_429_kernel_address0),
    .kernel_ce0(grp_Conv2d_3_fu_429_kernel_ce0),
    .kernel_q0(conv_kernel_2_q0),
    .out_matrix_address0(grp_Conv2d_3_fu_429_out_matrix_address0),
    .out_matrix_ce0(grp_Conv2d_3_fu_429_out_matrix_ce0),
    .out_matrix_we0(grp_Conv2d_3_fu_429_out_matrix_we0),
    .out_matrix_d0(grp_Conv2d_3_fu_429_out_matrix_d0)
);

forw_back_fadd_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
forw_back_fadd_32bkb_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_439_p0),
    .din1(reg_483),
    .ce(1'b1),
    .dout(grp_fu_439_p2)
);

forw_back_fmul_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
forw_back_fmul_32cud_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_445_p0),
    .din1(grp_fu_445_p1),
    .ce(1'b1),
    .dout(grp_fu_445_p2)
);

forw_back_fptruncg8j #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
forw_back_fptruncg8j_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_450_p0),
    .ce(1'b1),
    .dout(grp_fu_450_p1)
);

forw_back_fpext_3hbi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
forw_back_fpext_3hbi_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_454_p0),
    .ce(1'b1),
    .dout(grp_fu_454_p1)
);

forw_back_fcmp_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
forw_back_fcmp_32eOg_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(fc_out_1_0_load_reg_975),
    .din1(reg_502),
    .ce(1'b1),
    .opcode(5'd2),
    .dout(grp_fu_461_p2)
);

forw_back_dadd_64ibs #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
forw_back_dadd_64ibs_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(reg_513),
    .ce(1'b1),
    .dout(grp_fu_465_p2)
);

forw_back_dmul_64jbC #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
forw_back_dmul_64jbC_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_494),
    .din1(64'd4587366580439587226),
    .ce(1'b1),
    .dout(grp_fu_469_p2)
);

forw_back_ddiv_64kbM #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
forw_back_ddiv_64kbM_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_513),
    .din1(reg_494),
    .ce(1'b1),
    .dout(grp_fu_474_p2)
);

forw_back_dexp_64lbW #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
forw_back_dexp_64lbW_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(grp_fu_478_p1),
    .ce(1'b1),
    .dout(grp_fu_478_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv2d_3_fu_429_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Conv2d_3_fu_429_ap_start_reg <= 1'b1;
        end else if ((grp_Conv2d_3_fu_429_ap_ready == 1'b1)) begin
            grp_Conv2d_3_fu_429_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Conv2d_4_fu_419_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_Conv2d_4_fu_419_ap_start_reg <= 1'b1;
        end else if ((grp_Conv2d_4_fu_419_ap_ready == 1'b1)) begin
            grp_Conv2d_4_fu_419_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MaxPool2d_1_fu_399_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_MaxPool2d_1_fu_399_ap_start_reg <= 1'b1;
        end else if ((grp_MaxPool2d_1_fu_399_ap_ready == 1'b1)) begin
            grp_MaxPool2d_1_fu_399_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_MaxPool2d_fu_409_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_MaxPool2d_fu_409_ap_start_reg <= 1'b1;
        end else if ((grp_MaxPool2d_fu_409_ap_ready == 1'b1)) begin
            grp_MaxPool2d_fu_409_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_0_i20_reg_353 <= i_3_reg_1014;
    end else if (((icmp_ln58_1_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        i_0_i20_reg_353 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_0_i5_reg_307 <= i_2_reg_932;
    end else if (((icmp_ln58_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        i_0_i5_reg_307 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_565_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i_reg_261 <= i_1_reg_883;
    end else if (((grp_MaxPool2d_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_0_i_reg_261 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_1_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        i_0_reg_365 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        i_0_reg_365 <= i_reg_1042;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_665_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        j_0_i16_reg_329 <= 4'd0;
    end else if (((icmp_ln60_1_fu_793_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        j_0_i16_reg_329 <= j_7_reg_1001;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_519_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        j_0_i3_reg_283 <= 5'd0;
    end else if (((icmp_ln60_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        j_0_i3_reg_283 <= j_3_reg_919;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        j_0_i9_reg_318 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        j_0_i9_reg_318 <= j_6_reg_960;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_519_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        j_0_i_reg_272 <= 3'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        j_0_i_reg_272 <= j_5_reg_896;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        j_0_reg_388 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state132)) begin
        j_0_reg_388 <= j_reg_1060;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_1_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        probability_sum_0_reg_376 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state77)) begin
        probability_sum_0_reg_376 <= grp_fu_450_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        storemerge149_reg_340 <= grp_fu_439_p2;
    end else if (((icmp_ln58_1_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        storemerge149_reg_340 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        storemerge_reg_294 <= grp_fu_439_p2;
    end else if (((icmp_ln58_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        storemerge_reg_294 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        fc_hidden_layer1_loa_reg_952 <= fc_hidden_layer1_q0;
        fc_in_1_0_load_reg_947 <= fc_in_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fc_hidden_layer2_loa_reg_1029 <= fc_hidden_layer2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_fu_595_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        fc_out_1_0_addr_reg_924 <= zext_ln59_fu_607_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        fc_out_1_0_load_reg_975 <= fc_out_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln58_1_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state38))) begin
        fc_out_2_0_addr_2_reg_1006 <= zext_ln59_1_fu_788_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i_1_reg_883 <= i_1_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_2_reg_932 <= i_2_fu_618_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        i_3_reg_1014 <= i_3_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_reg_1042 <= i_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        j_0_i16_cast5_reg_993[3 : 0] <= j_0_i16_cast5_fu_772_p1[3 : 0];
        j_7_reg_1001 <= j_7_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        j_0_i3_cast8_reg_911[4 : 0] <= j_0_i3_cast8_fu_591_p1[4 : 0];
        j_3_reg_919 <= j_3_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_5_reg_896 <= j_5_fu_571_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j_6_reg_960 <= j_6_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        j_reg_1060 <= j_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_483 <= grp_fu_445_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state26))) begin
        reg_494 <= grp_fu_454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state77) | (1'b1 == ap_CS_fsm_state34))) begin
        reg_502 <= grp_fu_450_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state99) | (1'b1 == ap_CS_fsm_state70))) begin
        reg_513 <= grp_fu_478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        select_ln23_reg_988 <= select_ln23_fu_765_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_fu_519_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln54_reg_888[6 : 1] <= sub_ln54_fu_555_p2[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        tmp_6_reg_1052 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        tmp_8_reg_1075 <= grp_fu_454_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_i1_15_reg_983 <= grp_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state130)) begin
        tmp_s_reg_1080 <= grp_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln145_fu_863_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state79))) begin
        zext_ln146_reg_1065[3 : 0] <= zext_ln146_fu_875_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_565_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        zext_ln54_reg_901[31 : 0] <= zext_ln54_fu_586_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln66_fu_665_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        zext_ln67_reg_965[4 : 0] <= zext_ln67_fu_677_p1[4 : 0];
    end
end

always @ (*) begin
    if ((((icmp_ln145_fu_863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state79)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln145_fu_863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state79))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_out_1_address0 = grp_Conv2d_4_fu_419_out_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_out_1_address0 = grp_MaxPool2d_1_fu_399_conv_out_1_address0;
    end else begin
        conv_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_out_1_ce0 = grp_Conv2d_4_fu_419_out_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv_out_1_ce0 = grp_MaxPool2d_1_fu_399_conv_out_1_ce0;
    end else begin
        conv_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv_out_1_we0 = grp_Conv2d_4_fu_419_out_matrix_we0;
    end else begin
        conv_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_out_2_address0 = grp_Conv2d_3_fu_429_out_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_out_2_address0 = grp_MaxPool2d_fu_409_conv_out_2_address0;
    end else begin
        conv_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_out_2_ce0 = grp_Conv2d_3_fu_429_out_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        conv_out_2_ce0 = grp_MaxPool2d_fu_409_conv_out_2_ce0;
    end else begin
        conv_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv_out_2_we0 = grp_Conv2d_3_fu_429_out_matrix_we0;
    end else begin
        conv_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_hidden_layer1_ce0 = 1'b1;
    end else begin
        fc_hidden_layer1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        fc_hidden_layer2_ce0 = 1'b1;
    end else begin
        fc_hidden_layer2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_in_1_0_address0 = zext_ln61_fu_624_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_in_1_0_address0 = zext_ln54_reg_901;
    end else begin
        fc_in_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state13))) begin
        fc_in_1_0_ce0 = 1'b1;
    end else begin
        fc_in_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        fc_in_1_0_we0 = 1'b1;
    end else begin
        fc_in_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        fc_in_2_relu1_0_address0 = zext_ln61_2_fu_841_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        fc_in_2_relu1_0_address0 = zext_ln67_reg_965;
    end else begin
        fc_in_2_relu1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state40))) begin
        fc_in_2_relu1_0_ce0 = 1'b1;
    end else begin
        fc_in_2_relu1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        fc_in_2_relu1_0_we0 = 1'b1;
    end else begin
        fc_in_2_relu1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        fc_out_1_0_address0 = zext_ln67_fu_677_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_out_1_0_address0 = fc_out_1_0_addr_reg_924;
    end else begin
        fc_out_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state13))) begin
        fc_out_1_0_ce0 = 1'b1;
    end else begin
        fc_out_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        fc_out_1_0_we0 = 1'b1;
    end else begin
        fc_out_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        fc_out_2_0_address0 = zext_ln146_fu_875_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        fc_out_2_0_address0 = zext_ln144_fu_858_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        fc_out_2_0_address0 = fc_out_2_0_addr_2_reg_1006;
    end else begin
        fc_out_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state79) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state39))) begin
        fc_out_2_0_ce0 = 1'b1;
    end else begin
        fc_out_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        fc_out_2_0_we0 = 1'b1;
    end else begin
        fc_out_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_439_p0 = storemerge149_reg_340;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_439_p0 = storemerge_reg_294;
    end else begin
        grp_fu_439_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_445_p0 = fc_in_2_relu1_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_445_p0 = fc_in_1_0_load_reg_947;
    end else begin
        grp_fu_445_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_445_p1 = fc_hidden_layer2_loa_reg_1029;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_445_p1 = fc_hidden_layer1_loa_reg_952;
    end else begin
        grp_fu_445_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state131)) begin
        grp_fu_450_p0 = tmp_s_reg_1080;
    end else if ((1'b1 == ap_CS_fsm_state76)) begin
        grp_fu_450_p0 = tmp_6_reg_1052;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        grp_fu_450_p0 = tmp_i1_15_reg_983;
    end else begin
        grp_fu_450_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_454_p0 = probability_sum_0_reg_376;
    end else if (((1'b1 == ap_CS_fsm_state80) | (1'b1 == ap_CS_fsm_state51))) begin
        grp_fu_454_p0 = fc_out_2_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_454_p0 = ap_phi_mux_probability_sum_0_phi_fu_380_p4;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_454_p0 = fc_out_1_0_q0;
    end else begin
        grp_fu_454_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        grp_fu_478_p1 = tmp_8_reg_1075;
    end else if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_478_p1 = reg_494;
    end else begin
        grp_fu_478_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        max_poo_out_1_address0 = grp_Conv2d_3_fu_429_input_matrix_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_poo_out_1_address0 = grp_MaxPool2d_1_fu_399_output_matrix_address0;
    end else begin
        max_poo_out_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        max_poo_out_1_ce0 = grp_Conv2d_3_fu_429_input_matrix_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max_poo_out_1_ce0 = grp_MaxPool2d_1_fu_399_output_matrix_ce0;
    end else begin
        max_poo_out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max_poo_out_1_we0 = grp_MaxPool2d_1_fu_399_output_matrix_we0;
    end else begin
        max_poo_out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_poo_out_2_address0 = zext_ln54_fu_586_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_poo_out_2_address0 = grp_MaxPool2d_fu_409_output_matrix_address0;
    end else begin
        max_poo_out_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        max_poo_out_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max_poo_out_2_ce0 = grp_MaxPool2d_fu_409_output_matrix_ce0;
    end else begin
        max_poo_out_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max_poo_out_2_we0 = grp_MaxPool2d_fu_409_output_matrix_we0;
    end else begin
        max_poo_out_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        probability_result_ce0 = 1'b1;
    end else begin
        probability_result_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state132)) begin
        probability_result_we0 = 1'b1;
    end else begin
        probability_result_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_Conv2d_4_fu_419_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_MaxPool2d_1_fu_399_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Conv2d_3_fu_429_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_MaxPool2d_fu_409_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln52_fu_519_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln53_fu_565_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln58_fu_595_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln60_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln66_fu_665_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state38 : begin
            if (((icmp_ln58_1_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((icmp_ln60_1_fu_793_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state50 : begin
            if (((icmp_ln143_fu_846_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            if (((icmp_ln145_fu_863_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state79))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state80;
            end
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state118;
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state119;
        end
        ap_ST_fsm_state119 : begin
            ap_NS_fsm = ap_ST_fsm_state120;
        end
        ap_ST_fsm_state120 : begin
            ap_NS_fsm = ap_ST_fsm_state121;
        end
        ap_ST_fsm_state121 : begin
            ap_NS_fsm = ap_ST_fsm_state122;
        end
        ap_ST_fsm_state122 : begin
            ap_NS_fsm = ap_ST_fsm_state123;
        end
        ap_ST_fsm_state123 : begin
            ap_NS_fsm = ap_ST_fsm_state124;
        end
        ap_ST_fsm_state124 : begin
            ap_NS_fsm = ap_ST_fsm_state125;
        end
        ap_ST_fsm_state125 : begin
            ap_NS_fsm = ap_ST_fsm_state126;
        end
        ap_ST_fsm_state126 : begin
            ap_NS_fsm = ap_ST_fsm_state127;
        end
        ap_ST_fsm_state127 : begin
            ap_NS_fsm = ap_ST_fsm_state128;
        end
        ap_ST_fsm_state128 : begin
            ap_NS_fsm = ap_ST_fsm_state129;
        end
        ap_ST_fsm_state129 : begin
            ap_NS_fsm = ap_ST_fsm_state130;
        end
        ap_ST_fsm_state130 : begin
            ap_NS_fsm = ap_ST_fsm_state131;
        end
        ap_ST_fsm_state131 : begin
            ap_NS_fsm = ap_ST_fsm_state132;
        end
        ap_ST_fsm_state132 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln54_fu_577_p2 = (sub_ln54_reg_888 + zext_ln53_fu_561_p1);

assign add_ln61_1_fu_654_p2 = (shl_ln1_fu_629_p3 + zext_ln61_4_fu_650_p1);

assign add_ln61_2_fu_821_p2 = (j_0_i16_cast5_reg_993 + shl_ln61_3_fu_813_p3);

assign add_ln61_3_fu_830_p2 = (shl_ln61_2_fu_805_p3 + zext_ln61_5_fu_826_p1);

assign add_ln61_fu_645_p2 = (j_0_i3_cast8_reg_911 + shl_ln61_1_fu_637_p3);

assign and_ln23_1_fu_759_p2 = (grp_fu_461_p2 & and_ln23_fu_753_p2);

assign and_ln23_fu_753_p2 = (or_ln23_fu_729_p2 & or_ln23_1_fu_747_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state100 = ap_CS_fsm[32'd99];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state130 = ap_CS_fsm[32'd129];

assign ap_CS_fsm_state131 = ap_CS_fsm[32'd130];

assign ap_CS_fsm_state132 = ap_CS_fsm[32'd131];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state99 = ap_CS_fsm[32'd98];

assign ap_phi_mux_probability_sum_0_phi_fu_380_p4 = probability_sum_0_reg_376;

assign bitcast_ln23_1_fu_699_p1 = reg_502;

assign bitcast_ln23_fu_682_p1 = fc_out_1_0_load_reg_975;

assign conv_kernel_1_address0 = grp_Conv2d_4_fu_419_kernel_address0;

assign conv_kernel_1_ce0 = grp_Conv2d_4_fu_419_kernel_ce0;

assign conv_kernel_2_address0 = grp_Conv2d_3_fu_429_kernel_address0;

assign conv_kernel_2_ce0 = grp_Conv2d_3_fu_429_kernel_ce0;

assign fc_hidden_layer1_address0 = zext_ln61_1_fu_660_p1;

assign fc_hidden_layer2_address0 = zext_ln61_3_fu_836_p1;

assign fc_in_1_0_d0 = max_poo_out_2_q0;

assign fc_in_2_relu1_0_d0 = select_ln23_reg_988;

assign fc_out_1_0_d0 = storemerge_reg_294;

assign grp_Conv2d_3_fu_429_ap_start = grp_Conv2d_3_fu_429_ap_start_reg;

assign grp_Conv2d_4_fu_419_ap_start = grp_Conv2d_4_fu_419_ap_start_reg;

assign grp_MaxPool2d_1_fu_399_ap_start = grp_MaxPool2d_1_fu_399_ap_start_reg;

assign grp_MaxPool2d_fu_409_ap_start = grp_MaxPool2d_fu_409_ap_start_reg;

assign i_1_fu_525_p2 = (i_0_i_reg_261 + 3'd1);

assign i_2_fu_618_p2 = (i_0_i5_reg_307 + 6'd1);

assign i_3_fu_799_p2 = (i_0_i20_reg_353 + 5'd1);

assign i_fu_852_p2 = (i_0_reg_365 + 4'd1);

assign icmp_ln143_fu_846_p2 = ((i_0_reg_365 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln145_fu_863_p2 = ((j_0_reg_388 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_723_p2 = ((trunc_ln23_fu_695_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_2_fu_735_p2 = ((tmp_7_fu_703_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln23_3_fu_741_p2 = ((trunc_ln23_1_fu_713_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_717_p2 = ((tmp_2_fu_685_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_519_p2 = ((i_0_i_reg_261 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_565_p2 = ((j_0_i_reg_272 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln58_1_fu_776_p2 = ((j_0_i16_reg_329 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_595_p2 = ((j_0_i3_reg_283 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln60_1_fu_793_p2 = ((i_0_i20_reg_353 == 5'd20) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_612_p2 = ((i_0_i5_reg_307 == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln66_fu_665_p2 = ((j_0_i9_reg_318 == 5'd20) ? 1'b1 : 1'b0);

assign j_0_i16_cast5_fu_772_p1 = j_0_i16_reg_329;

assign j_0_i3_cast8_fu_591_p1 = j_0_i3_reg_283;

assign j_3_fu_601_p2 = (j_0_i3_reg_283 + 5'd1);

assign j_5_fu_571_p2 = (j_0_i_reg_272 + 3'd1);

assign j_6_fu_671_p2 = (j_0_i9_reg_318 + 5'd1);

assign j_7_fu_782_p2 = (j_0_i16_reg_329 + 4'd1);

assign j_fu_869_p2 = (j_0_reg_388 + 4'd1);

assign max_poo_locate_1_address0 = grp_MaxPool2d_1_fu_399_locate_matrix_address0;

assign max_poo_locate_1_ce0 = grp_MaxPool2d_1_fu_399_locate_matrix_ce0;

assign max_poo_locate_1_d0 = grp_MaxPool2d_1_fu_399_locate_matrix_d0;

assign max_poo_locate_1_we0 = grp_MaxPool2d_1_fu_399_locate_matrix_we0;

assign max_poo_locate_2_address0 = grp_MaxPool2d_fu_409_locate_matrix_address0;

assign max_poo_locate_2_ce0 = grp_MaxPool2d_fu_409_locate_matrix_ce0;

assign max_poo_locate_2_d0 = grp_MaxPool2d_fu_409_locate_matrix_d0;

assign max_poo_locate_2_we0 = grp_MaxPool2d_fu_409_locate_matrix_we0;

assign max_poo_out_1_d0 = grp_MaxPool2d_1_fu_399_output_matrix_d0;

assign mnist_data_address0 = grp_Conv2d_4_fu_419_input_matrix_address0;

assign mnist_data_ce0 = grp_Conv2d_4_fu_419_input_matrix_ce0;

assign or_ln23_1_fu_747_p2 = (icmp_ln23_3_fu_741_p2 | icmp_ln23_2_fu_735_p2);

assign or_ln23_fu_729_p2 = (icmp_ln23_fu_717_p2 | icmp_ln23_1_fu_723_p2);

assign probability_result_address0 = zext_ln146_reg_1065;

assign probability_result_d0 = grp_fu_450_p1;

assign select_ln23_fu_765_p3 = ((and_ln23_1_fu_759_p2[0:0] === 1'b1) ? fc_out_1_0_load_reg_975 : reg_502);

assign sext_ln54_fu_582_p1 = $signed(add_ln54_fu_577_p2);

assign shl_ln1_fu_629_p3 = {{i_0_i5_reg_307}, {4'd0}};

assign shl_ln54_1_fu_543_p3 = {{i_0_i_reg_261}, {1'd0}};

assign shl_ln61_1_fu_637_p3 = {{i_0_i5_reg_307}, {2'd0}};

assign shl_ln61_2_fu_805_p3 = {{i_0_i20_reg_353}, {3'd0}};

assign shl_ln61_3_fu_813_p3 = {{i_0_i20_reg_353}, {1'd0}};

assign shl_ln_fu_531_p3 = {{i_0_i_reg_261}, {3'd0}};

assign sub_ln54_fu_555_p2 = (zext_ln54_1_fu_539_p1 - zext_ln54_2_fu_551_p1);

assign tmp_2_fu_685_p4 = {{bitcast_ln23_fu_682_p1[30:23]}};

assign tmp_7_fu_703_p4 = {{bitcast_ln23_1_fu_699_p1[30:23]}};

assign trunc_ln23_1_fu_713_p1 = bitcast_ln23_1_fu_699_p1[22:0];

assign trunc_ln23_fu_695_p1 = bitcast_ln23_fu_682_p1[22:0];

assign zext_ln144_fu_858_p1 = i_0_reg_365;

assign zext_ln146_fu_875_p1 = j_0_reg_388;

assign zext_ln53_fu_561_p1 = j_0_i_reg_272;

assign zext_ln54_1_fu_539_p1 = shl_ln_fu_531_p3;

assign zext_ln54_2_fu_551_p1 = shl_ln54_1_fu_543_p3;

assign zext_ln54_fu_586_p1 = $unsigned(sext_ln54_fu_582_p1);

assign zext_ln59_1_fu_788_p1 = j_0_i16_reg_329;

assign zext_ln59_fu_607_p1 = j_0_i3_reg_283;

assign zext_ln61_1_fu_660_p1 = add_ln61_1_fu_654_p2;

assign zext_ln61_2_fu_841_p1 = i_0_i20_reg_353;

assign zext_ln61_3_fu_836_p1 = add_ln61_3_fu_830_p2;

assign zext_ln61_4_fu_650_p1 = add_ln61_fu_645_p2;

assign zext_ln61_5_fu_826_p1 = add_ln61_2_fu_821_p2;

assign zext_ln61_fu_624_p1 = i_0_i5_reg_307;

assign zext_ln67_fu_677_p1 = j_0_i9_reg_318;

always @ (posedge ap_clk) begin
    sub_ln54_reg_888[0] <= 1'b0;
    zext_ln54_reg_901[63:32] <= 32'b00000000000000000000000000000000;
    j_0_i3_cast8_reg_911[7:5] <= 3'b000;
    zext_ln67_reg_965[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_0_i16_cast5_reg_993[5:4] <= 2'b00;
    zext_ln146_reg_1065[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //forward
